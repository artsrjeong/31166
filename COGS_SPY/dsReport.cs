//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Runtime.Serialization;
using System.Xml;

namespace COGSD 
{
	using System;
	using System.Data;
	using System.Xml;
	using System.Runtime.Serialization;
    
    
	//[Serializable()]
	//[System.ComponentModel.DesignerCategoryAttribute("code")]
	//[System.Diagnostics.DebuggerStepThrough()]
	//[System.ComponentModel.ToolboxItem(true)]
	//public class dsReport : DataSet {
	//    
	//    private _2d_cDataTable table_2d_c;
	//    
	//    private _2d_pDataTable table_2d_p;
	//    
	//    private report_item1DataTable tablereport_item1;
	//    
	//    private report_item2DataTable tablereport_item2;
	//    
	//    private svcwaitDataTable tablesvcwait;
	//    
	//    private waitDataTable tablewait;
	//    
	//    private svcDataTable tablesvc;
	//    
	//    public dsReport() {
	//        this.InitClass();
	//        System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//        this.Tables.CollectionChanged += schemaChangedHandler;
	//        this.Relations.CollectionChanged += schemaChangedHandler;
	//    }
	//    
	//    protected dsReport(SerializationInfo info, StreamingContext context) {
	//        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
	//        if ((strSchema != null)) {
	//            DataSet ds = new DataSet();
	//            ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
	//            if ((ds.Tables["2d_c"] != null)) {
	//                this.Tables.Add(new _2d_cDataTable(ds.Tables["2d_c"]));
	//            }
	//            if ((ds.Tables["2d_p"] != null)) {
	//                this.Tables.Add(new _2d_pDataTable(ds.Tables["2d_p"]));
	//            }
	//            if ((ds.Tables["report_item1"] != null)) {
	//                this.Tables.Add(new report_item1DataTable(ds.Tables["report_item1"]));
	//            }
	//            if ((ds.Tables["report_item2"] != null)) {
	//                this.Tables.Add(new report_item2DataTable(ds.Tables["report_item2"]));
	//            }
	//            if ((ds.Tables["svcwait"] != null)) {
	//                this.Tables.Add(new svcwaitDataTable(ds.Tables["svcwait"]));
	//            }
	//            if ((ds.Tables["wait"] != null)) {
	//                this.Tables.Add(new waitDataTable(ds.Tables["wait"]));
	//            }
	//            if ((ds.Tables["svc"] != null)) {
	//                this.Tables.Add(new svcDataTable(ds.Tables["svc"]));
	//            }
	//            this.DataSetName = ds.DataSetName;
	//            this.Prefix = ds.Prefix;
	//            this.Namespace = ds.Namespace;
	//            this.Locale = ds.Locale;
	//            this.CaseSensitive = ds.CaseSensitive;
	//            this.EnforceConstraints = ds.EnforceConstraints;
	//            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//            this.InitVars();
	//        }
	//        else {
	//            this.InitClass();
	//        }
	//        this.GetSerializationData(info, context);
	//        System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//        this.Tables.CollectionChanged += schemaChangedHandler;
	//        this.Relations.CollectionChanged += schemaChangedHandler;
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public _2d_cDataTable _2d_c {
	//        get {
	//            return this.table_2d_c;
	//        }
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public _2d_pDataTable _2d_p {
	//        get {
	//            return this.table_2d_p;
	//        }
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public report_item1DataTable report_item1 {
	//        get {
	//            return this.tablereport_item1;
	//        }
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public report_item2DataTable report_item2 {
	//        get {
	//            return this.tablereport_item2;
	//        }
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public svcwaitDataTable svcwait {
	//        get {
	//            return this.tablesvcwait;
	//        }
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public waitDataTable wait {
	//        get {
	//            return this.tablewait;
	//        }
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public svcDataTable svc {
	//        get {
	//            return this.tablesvc;
	//        }
	//    }
	//    
	//    public override DataSet Clone() {
	//        dsReport cln = ((dsReport)(base.Clone()));
	//        cln.InitVars();
	//        return cln;
	//    }
	//    
	//    protected override bool ShouldSerializeTables() {
	//        return false;
	//    }
	//    
	//    protected override bool ShouldSerializeRelations() {
	//        return false;
	//    }
	//    
	//    protected override void ReadXmlSerializable(XmlReader reader) {
	//        this.Reset();
	//        DataSet ds = new DataSet();
	//        ds.ReadXml(reader);
	//        if ((ds.Tables["2d_c"] != null)) {
	//            this.Tables.Add(new _2d_cDataTable(ds.Tables["2d_c"]));
	//        }
	//        if ((ds.Tables["2d_p"] != null)) {
	//            this.Tables.Add(new _2d_pDataTable(ds.Tables["2d_p"]));
	//        }
	//        if ((ds.Tables["report_item1"] != null)) {
	//            this.Tables.Add(new report_item1DataTable(ds.Tables["report_item1"]));
	//        }
	//        if ((ds.Tables["report_item2"] != null)) {
	//            this.Tables.Add(new report_item2DataTable(ds.Tables["report_item2"]));
	//        }
	//        if ((ds.Tables["svcwait"] != null)) {
	//            this.Tables.Add(new svcwaitDataTable(ds.Tables["svcwait"]));
	//        }
	//        if ((ds.Tables["wait"] != null)) {
	//            this.Tables.Add(new waitDataTable(ds.Tables["wait"]));
	//        }
	//        if ((ds.Tables["svc"] != null)) {
	//            this.Tables.Add(new svcDataTable(ds.Tables["svc"]));
	//        }
	//        this.DataSetName = ds.DataSetName;
	//        this.Prefix = ds.Prefix;
	//        this.Namespace = ds.Namespace;
	//        this.Locale = ds.Locale;
	//        this.CaseSensitive = ds.CaseSensitive;
	//        this.EnforceConstraints = ds.EnforceConstraints;
	//        this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//        this.InitVars();
	//    }
	//    
	//    protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
	//        System.IO.MemoryStream stream = new System.IO.MemoryStream();
	//        this.WriteXmlSchema(new XmlTextWriter(stream, null));
	//        stream.Position = 0;
	//        return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
	//    }
	//    
	//    internal void InitVars() {
	//        this.table_2d_c = ((_2d_cDataTable)(this.Tables["2d_c"]));
	//        if ((this.table_2d_c != null)) {
	//            this.table_2d_c.InitVars();
	//        }
	//        this.table_2d_p = ((_2d_pDataTable)(this.Tables["2d_p"]));
	//        if ((this.table_2d_p != null)) {
	//            this.table_2d_p.InitVars();
	//        }
	//        this.tablereport_item1 = ((report_item1DataTable)(this.Tables["report_item1"]));
	//        if ((this.tablereport_item1 != null)) {
	//            this.tablereport_item1.InitVars();
	//        }
	//        this.tablereport_item2 = ((report_item2DataTable)(this.Tables["report_item2"]));
	//        if ((this.tablereport_item2 != null)) {
	//            this.tablereport_item2.InitVars();
	//        }
	//        this.tablesvcwait = ((svcwaitDataTable)(this.Tables["svcwait"]));
	//        if ((this.tablesvcwait != null)) {
	//            this.tablesvcwait.InitVars();
	//        }
	//        this.tablewait = ((waitDataTable)(this.Tables["wait"]));
	//        if ((this.tablewait != null)) {
	//            this.tablewait.InitVars();
	//        }
	//        this.tablesvc = ((svcDataTable)(this.Tables["svc"]));
	//        if ((this.tablesvc != null)) {
	//            this.tablesvc.InitVars();
	//        }
	//    }
	//    
	//    private void InitClass() {
	//        this.DataSetName = "dsReport";
	//        this.Prefix = "";
	//        this.Namespace = "http://tempuri.org/dsReport.xsd";
	//        this.Locale = new System.Globalization.CultureInfo("en-US");
	//        this.CaseSensitive = false;
	//        this.EnforceConstraints = true;
	//        this.table_2d_c = new _2d_cDataTable();
	//        this.Tables.Add(this.table_2d_c);
	//        this.table_2d_p = new _2d_pDataTable();
	//        this.Tables.Add(this.table_2d_p);
	//        this.tablereport_item1 = new report_item1DataTable();
	//        this.Tables.Add(this.tablereport_item1);
	//        this.tablereport_item2 = new report_item2DataTable();
	//        this.Tables.Add(this.tablereport_item2);
	//        this.tablesvcwait = new svcwaitDataTable();
	//        this.Tables.Add(this.tablesvcwait);
	//        this.tablewait = new waitDataTable();
	//        this.Tables.Add(this.tablewait);
	//        this.tablesvc = new svcDataTable();
	//        this.Tables.Add(this.tablesvc);
	//    }
	//    
	//    private bool ShouldSerialize_2d_c() {
	//        return false;
	//    }
	//    
	//    private bool ShouldSerialize_2d_p() {
	//        return false;
	//    }
	//    
	//    private bool ShouldSerializereport_item1() {
	//        return false;
	//    }
	//    
	//    private bool ShouldSerializereport_item2() {
	//        return false;
	//    }
	//    
	//    private bool ShouldSerializesvcwait() {
	//        return false;
	//    }
	//    
	//    private bool ShouldSerializewait() {
	//        return false;
	//    }
	//    
	//    private bool ShouldSerializesvc() {
	//        return false;
	//    }
	//    
	//    private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
	//        if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
	//            this.InitVars();
	//        }
	//    }
	//    
	//    public delegate void _2d_cRowChangeEventHandler(object sender, _2d_cRowChangeEvent e);
	//    
	//    public delegate void _2d_pRowChangeEventHandler(object sender, _2d_pRowChangeEvent e);
	//    
	//    public delegate void report_item1RowChangeEventHandler(object sender, report_item1RowChangeEvent e);
	//    
	//    public delegate void report_item2RowChangeEventHandler(object sender, report_item2RowChangeEvent e);
	//    
	//    public delegate void svcwaitRowChangeEventHandler(object sender, svcwaitRowChangeEvent e);
	//    
	//    public delegate void waitRowChangeEventHandler(object sender, waitRowChangeEvent e);
	//    
	//    public delegate void svcRowChangeEventHandler(object sender, svcRowChangeEvent e);
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class _2d_cDataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnCar;
	//        
	//        private DataColumn columnType;
	//        
	//        private DataColumn columnT_begin_run;
	//        
	//        private DataColumn columnT_decel;
	//        
	//        private DataColumn columnT_reach_AP;
	//        
	//        private DataColumn columnT_end_run;
	//        
	//        private DataColumn columnOrigin;
	//        
	//        private DataColumn columnDest;
	//        
	//        private DataColumn columnPax_in_run;
	//        
	//        private DataColumn columnChanged_target;
	//        
	//        private DataColumn columnT_opened;
	//        
	//        private DataColumn columnDeboard;
	//        
	//        private DataColumn columnBoard;
	//        
	//        private DataColumn columnT_dwelled;
	//        
	//        private DataColumn columnExtra_dwell;
	//        
	//        private DataColumn columnT_closed;
	//        
	//        private DataColumn columnT_released;
	//        
	//        internal _2d_cDataTable() : 
	//                base("2d_c") {
	//            this.InitClass();
	//        }
	//        
	//        internal _2d_cDataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn CarColumn {
	//            get {
	//                return this.columnCar;
	//            }
	//        }
	//        
	//        internal DataColumn TypeColumn {
	//            get {
	//                return this.columnType;
	//            }
	//        }
	//        
	//        internal DataColumn T_begin_runColumn {
	//            get {
	//                return this.columnT_begin_run;
	//            }
	//        }
	//        
	//        internal DataColumn T_decelColumn {
	//            get {
	//                return this.columnT_decel;
	//            }
	//        }
	//        
	//        internal DataColumn T_reach_APColumn {
	//            get {
	//                return this.columnT_reach_AP;
	//            }
	//        }
	//        
	//        internal DataColumn T_end_runColumn {
	//            get {
	//                return this.columnT_end_run;
	//            }
	//        }
	//        
	//        internal DataColumn OriginColumn {
	//            get {
	//                return this.columnOrigin;
	//            }
	//        }
	//        
	//        internal DataColumn DestColumn {
	//            get {
	//                return this.columnDest;
	//            }
	//        }
	//        
	//        internal DataColumn Pax_in_runColumn {
	//            get {
	//                return this.columnPax_in_run;
	//            }
	//        }
	//        
	//        internal DataColumn Changed_targetColumn {
	//            get {
	//                return this.columnChanged_target;
	//            }
	//        }
	//        
	//        internal DataColumn T_openedColumn {
	//            get {
	//                return this.columnT_opened;
	//            }
	//        }
	//        
	//        internal DataColumn DeboardColumn {
	//            get {
	//                return this.columnDeboard;
	//            }
	//        }
	//        
	//        internal DataColumn BoardColumn {
	//            get {
	//                return this.columnBoard;
	//            }
	//        }
	//        
	//        internal DataColumn T_dwelledColumn {
	//            get {
	//                return this.columnT_dwelled;
	//            }
	//        }
	//        
	//        internal DataColumn Extra_dwellColumn {
	//            get {
	//                return this.columnExtra_dwell;
	//            }
	//        }
	//        
	//        internal DataColumn T_closedColumn {
	//            get {
	//                return this.columnT_closed;
	//            }
	//        }
	//        
	//        internal DataColumn T_releasedColumn {
	//            get {
	//                return this.columnT_released;
	//            }
	//        }
	//        
	//        public _2d_cRow this[int index] {
	//            get {
	//                return ((_2d_cRow)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event _2d_cRowChangeEventHandler _2d_cRowChanged;
	//        
	//        public event _2d_cRowChangeEventHandler _2d_cRowChanging;
	//        
	//        public event _2d_cRowChangeEventHandler _2d_cRowDeleted;
	//        
	//        public event _2d_cRowChangeEventHandler _2d_cRowDeleting;
	//        
	//        public void Add_2d_cRow(_2d_cRow row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public _2d_cRow Add_2d_cRow(
	//                    string Car, 
	//                    string Type, 
	//                    string T_begin_run, 
	//                    string T_decel, 
	//                    string T_reach_AP, 
	//                    string T_end_run, 
	//                    string Origin, 
	//                    string Dest, 
	//                    string Pax_in_run, 
	//                    string Changed_target, 
	//                    string T_opened, 
	//                    string Deboard, 
	//                    string Board, 
	//                    string T_dwelled, 
	//                    string Extra_dwell, 
	//                    string T_closed, 
	//                    string T_released) {
	//            _2d_cRow row_2d_cRow = ((_2d_cRow)(this.NewRow()));
	//            row_2d_cRow.ItemArray = new object[] {
	//                    Car,
	//                    Type,
	//                    T_begin_run,
	//                    T_decel,
	//                    T_reach_AP,
	//                    T_end_run,
	//                    Origin,
	//                    Dest,
	//                    Pax_in_run,
	//                    Changed_target,
	//                    T_opened,
	//                    Deboard,
	//                    Board,
	//                    T_dwelled,
	//                    Extra_dwell,
	//                    T_closed,
	//                    T_released};
	//            this.Rows.Add(row_2d_cRow);
	//            return row_2d_cRow;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            _2d_cDataTable cln = ((_2d_cDataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new _2d_cDataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnCar = this.Columns["Car"];
	//            this.columnType = this.Columns["Type"];
	//            this.columnT_begin_run = this.Columns["T_begin_run"];
	//            this.columnT_decel = this.Columns["T_decel"];
	//            this.columnT_reach_AP = this.Columns["T_reach_AP"];
	//            this.columnT_end_run = this.Columns["T_end_run"];
	//            this.columnOrigin = this.Columns["Origin"];
	//            this.columnDest = this.Columns["Dest"];
	//            this.columnPax_in_run = this.Columns["Pax_in_run"];
	//            this.columnChanged_target = this.Columns["Changed_target"];
	//            this.columnT_opened = this.Columns["T_opened"];
	//            this.columnDeboard = this.Columns["Deboard"];
	//            this.columnBoard = this.Columns["Board"];
	//            this.columnT_dwelled = this.Columns["T_dwelled"];
	//            this.columnExtra_dwell = this.Columns["Extra_dwell"];
	//            this.columnT_closed = this.Columns["T_closed"];
	//            this.columnT_released = this.Columns["T released"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnCar = new DataColumn("Car", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnCar);
	//            this.columnType = new DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnType);
	//            this.columnT_begin_run = new DataColumn("T_begin_run", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_begin_run);
	//            this.columnT_decel = new DataColumn("T_decel", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_decel);
	//            this.columnT_reach_AP = new DataColumn("T_reach_AP", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_reach_AP);
	//            this.columnT_end_run = new DataColumn("T_end_run", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_end_run);
	//            this.columnOrigin = new DataColumn("Origin", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnOrigin);
	//            this.columnDest = new DataColumn("Dest", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnDest);
	//            this.columnPax_in_run = new DataColumn("Pax_in_run", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnPax_in_run);
	//            this.columnChanged_target = new DataColumn("Changed_target", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnChanged_target);
	//            this.columnT_opened = new DataColumn("T_opened", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_opened);
	//            this.columnDeboard = new DataColumn("Deboard", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnDeboard);
	//            this.columnBoard = new DataColumn("Board", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnBoard);
	//            this.columnT_dwelled = new DataColumn("T_dwelled", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_dwelled);
	//            this.columnExtra_dwell = new DataColumn("Extra_dwell", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnExtra_dwell);
	//            this.columnT_closed = new DataColumn("T_closed", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_closed);
	//            this.columnT_released = new DataColumn("T released", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_released);
	//        }
	//        
	//        public _2d_cRow New_2d_cRow() {
	//            return ((_2d_cRow)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new _2d_cRow(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(_2d_cRow);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this._2d_cRowChanged != null)) {
	//                this._2d_cRowChanged(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this._2d_cRowChanging != null)) {
	//                this._2d_cRowChanging(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this._2d_cRowDeleted != null)) {
	//                this._2d_cRowDeleted(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this._2d_cRowDeleting != null)) {
	//                this._2d_cRowDeleting(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void Remove_2d_cRow(_2d_cRow row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class _2d_cRow : DataRow {
	//        
	//        private _2d_cDataTable table_2d_c;
	//        
	//        internal _2d_cRow(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.table_2d_c = ((_2d_cDataTable)(this.Table));
	//        }
	//        
	//        public string Car {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.CarColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.CarColumn] = value;
	//            }
	//        }
	//        
	//        public string Type {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.TypeColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.TypeColumn] = value;
	//            }
	//        }
	//        
	//        public string T_begin_run {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_begin_runColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_begin_runColumn] = value;
	//            }
	//        }
	//        
	//        public string T_decel {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_decelColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_decelColumn] = value;
	//            }
	//        }
	//        
	//        public string T_reach_AP {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_reach_APColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_reach_APColumn] = value;
	//            }
	//        }
	//        
	//        public string T_end_run {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_end_runColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_end_runColumn] = value;
	//            }
	//        }
	//        
	//        public string Origin {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.OriginColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.OriginColumn] = value;
	//            }
	//        }
	//        
	//        public string Dest {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.DestColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.DestColumn] = value;
	//            }
	//        }
	//        
	//        public string Pax_in_run {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.Pax_in_runColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.Pax_in_runColumn] = value;
	//            }
	//        }
	//        
	//        public string Changed_target {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.Changed_targetColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.Changed_targetColumn] = value;
	//            }
	//        }
	//        
	//        public string T_opened {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_openedColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_openedColumn] = value;
	//            }
	//        }
	//        
	//        public string Deboard {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.DeboardColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.DeboardColumn] = value;
	//            }
	//        }
	//        
	//        public string Board {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.BoardColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.BoardColumn] = value;
	//            }
	//        }
	//        
	//        public string T_dwelled {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_dwelledColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_dwelledColumn] = value;
	//            }
	//        }
	//        
	//        public string Extra_dwell {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.Extra_dwellColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.Extra_dwellColumn] = value;
	//            }
	//        }
	//        
	//        public string T_closed {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_closedColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_closedColumn] = value;
	//            }
	//        }
	//        
	//        public string T_released {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_c.T_releasedColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_c.T_releasedColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsCarNull() {
	//            return this.IsNull(this.table_2d_c.CarColumn);
	//        }
	//        
	//        public void SetCarNull() {
	//            this[this.table_2d_c.CarColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsTypeNull() {
	//            return this.IsNull(this.table_2d_c.TypeColumn);
	//        }
	//        
	//        public void SetTypeNull() {
	//            this[this.table_2d_c.TypeColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_begin_runNull() {
	//            return this.IsNull(this.table_2d_c.T_begin_runColumn);
	//        }
	//        
	//        public void SetT_begin_runNull() {
	//            this[this.table_2d_c.T_begin_runColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_decelNull() {
	//            return this.IsNull(this.table_2d_c.T_decelColumn);
	//        }
	//        
	//        public void SetT_decelNull() {
	//            this[this.table_2d_c.T_decelColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_reach_APNull() {
	//            return this.IsNull(this.table_2d_c.T_reach_APColumn);
	//        }
	//        
	//        public void SetT_reach_APNull() {
	//            this[this.table_2d_c.T_reach_APColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_end_runNull() {
	//            return this.IsNull(this.table_2d_c.T_end_runColumn);
	//        }
	//        
	//        public void SetT_end_runNull() {
	//            this[this.table_2d_c.T_end_runColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsOriginNull() {
	//            return this.IsNull(this.table_2d_c.OriginColumn);
	//        }
	//        
	//        public void SetOriginNull() {
	//            this[this.table_2d_c.OriginColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsDestNull() {
	//            return this.IsNull(this.table_2d_c.DestColumn);
	//        }
	//        
	//        public void SetDestNull() {
	//            this[this.table_2d_c.DestColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsPax_in_runNull() {
	//            return this.IsNull(this.table_2d_c.Pax_in_runColumn);
	//        }
	//        
	//        public void SetPax_in_runNull() {
	//            this[this.table_2d_c.Pax_in_runColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsChanged_targetNull() {
	//            return this.IsNull(this.table_2d_c.Changed_targetColumn);
	//        }
	//        
	//        public void SetChanged_targetNull() {
	//            this[this.table_2d_c.Changed_targetColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_openedNull() {
	//            return this.IsNull(this.table_2d_c.T_openedColumn);
	//        }
	//        
	//        public void SetT_openedNull() {
	//            this[this.table_2d_c.T_openedColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsDeboardNull() {
	//            return this.IsNull(this.table_2d_c.DeboardColumn);
	//        }
	//        
	//        public void SetDeboardNull() {
	//            this[this.table_2d_c.DeboardColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsBoardNull() {
	//            return this.IsNull(this.table_2d_c.BoardColumn);
	//        }
	//        
	//        public void SetBoardNull() {
	//            this[this.table_2d_c.BoardColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_dwelledNull() {
	//            return this.IsNull(this.table_2d_c.T_dwelledColumn);
	//        }
	//        
	//        public void SetT_dwelledNull() {
	//            this[this.table_2d_c.T_dwelledColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsExtra_dwellNull() {
	//            return this.IsNull(this.table_2d_c.Extra_dwellColumn);
	//        }
	//        
	//        public void SetExtra_dwellNull() {
	//            this[this.table_2d_c.Extra_dwellColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_closedNull() {
	//            return this.IsNull(this.table_2d_c.T_closedColumn);
	//        }
	//        
	//        public void SetT_closedNull() {
	//            this[this.table_2d_c.T_closedColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_releasedNull() {
	//            return this.IsNull(this.table_2d_c.T_releasedColumn);
	//        }
	//        
	//        public void SetT_releasedNull() {
	//            this[this.table_2d_c.T_releasedColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class _2d_cRowChangeEvent : EventArgs {
	//        
	//        private _2d_cRow eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public _2d_cRowChangeEvent(_2d_cRow row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public _2d_cRow Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class _2d_pDataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnIndex;
	//        
	//        private DataColumn columnT_arrival;
	//        
	//        private DataColumn columnOrigin;
	//        
	//        private DataColumn columnDest;
	//        
	//        private DataColumn columnAssignment;
	//        
	//        private DataColumn columnT_end_wait_AP;
	//        
	//        private DataColumn columnT_end_wait_CP;
	//        
	//        private DataColumn columnT_door_opening;
	//        
	//        private DataColumn columnT_door_opened;
	//        
	//        private DataColumn columnT_door_close;
	//        
	//        private DataColumn columnT_depart;
	//        
	//        private DataColumn columnReg_dir;
	//        
	//        private DataColumn column_Reg_car_dir;
	//        
	//        private DataColumn column_Re_Reg;
	//        
	//        private DataColumn column_T_Re_Reg;
	//        
	//        private DataColumn columnReg_AP_T;
	//        
	//        private DataColumn columnReg_CP_T;
	//        
	//        private DataColumn columnWait_AP_T;
	//        
	//        private DataColumn columnWait_CP_T;
	//        
	//        private DataColumn columnSrvc_T;
	//        
	//        private DataColumn columnRejection;
	//        
	//        internal _2d_pDataTable() : 
	//                base("2d_p") {
	//            this.InitClass();
	//        }
	//        
	//        internal _2d_pDataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn IndexColumn {
	//            get {
	//                return this.columnIndex;
	//            }
	//        }
	//        
	//        internal DataColumn T_arrivalColumn {
	//            get {
	//                return this.columnT_arrival;
	//            }
	//        }
	//        
	//        internal DataColumn OriginColumn {
	//            get {
	//                return this.columnOrigin;
	//            }
	//        }
	//        
	//        internal DataColumn DestColumn {
	//            get {
	//                return this.columnDest;
	//            }
	//        }
	//        
	//        internal DataColumn AssignmentColumn {
	//            get {
	//                return this.columnAssignment;
	//            }
	//        }
	//        
	//        internal DataColumn T_end_wait_APColumn {
	//            get {
	//                return this.columnT_end_wait_AP;
	//            }
	//        }
	//        
	//        internal DataColumn T_end_wait_CPColumn {
	//            get {
	//                return this.columnT_end_wait_CP;
	//            }
	//        }
	//        
	//        internal DataColumn T_door_openingColumn {
	//            get {
	//                return this.columnT_door_opening;
	//            }
	//        }
	//        
	//        internal DataColumn T_door_openedColumn {
	//            get {
	//                return this.columnT_door_opened;
	//            }
	//        }
	//        
	//        internal DataColumn T_door_closeColumn {
	//            get {
	//                return this.columnT_door_close;
	//            }
	//        }
	//        
	//        internal DataColumn T_departColumn {
	//            get {
	//                return this.columnT_depart;
	//            }
	//        }
	//        
	//        internal DataColumn Reg_dirColumn {
	//            get {
	//                return this.columnReg_dir;
	//            }
	//        }
	//        
	//        internal DataColumn _Reg_car_dirColumn {
	//            get {
	//                return this.column_Reg_car_dir;
	//            }
	//        }
	//        
	//        internal DataColumn _Re_RegColumn {
	//            get {
	//                return this.column_Re_Reg;
	//            }
	//        }
	//        
	//        internal DataColumn _T_Re_RegColumn {
	//            get {
	//                return this.column_T_Re_Reg;
	//            }
	//        }
	//        
	//        internal DataColumn Reg_AP_TColumn {
	//            get {
	//                return this.columnReg_AP_T;
	//            }
	//        }
	//        
	//        internal DataColumn Reg_CP_TColumn {
	//            get {
	//                return this.columnReg_CP_T;
	//            }
	//        }
	//        
	//        internal DataColumn Wait_AP_TColumn {
	//            get {
	//                return this.columnWait_AP_T;
	//            }
	//        }
	//        
	//        internal DataColumn Wait_CP_TColumn {
	//            get {
	//                return this.columnWait_CP_T;
	//            }
	//        }
	//        
	//        internal DataColumn Srvc_TColumn {
	//            get {
	//                return this.columnSrvc_T;
	//            }
	//        }
	//        
	//        internal DataColumn RejectionColumn {
	//            get {
	//                return this.columnRejection;
	//            }
	//        }
	//        
	//        public _2d_pRow this[int index] {
	//            get {
	//                return ((_2d_pRow)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event _2d_pRowChangeEventHandler _2d_pRowChanged;
	//        
	//        public event _2d_pRowChangeEventHandler _2d_pRowChanging;
	//        
	//        public event _2d_pRowChangeEventHandler _2d_pRowDeleted;
	//        
	//        public event _2d_pRowChangeEventHandler _2d_pRowDeleting;
	//        
	//        public void Add_2d_pRow(_2d_pRow row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public _2d_pRow Add_2d_pRow(
	//                    string Index, 
	//                    string T_arrival, 
	//                    string Origin, 
	//                    string Dest, 
	//                    string Assignment, 
	//                    string T_end_wait_AP, 
	//                    string T_end_wait_CP, 
	//                    string T_door_opening, 
	//                    string T_door_opened, 
	//                    string T_door_close, 
	//                    string T_depart, 
	//                    string Reg_dir, 
	//                    string _Reg_car_dir, 
	//                    string _Re_Reg, 
	//                    string _T_Re_Reg, 
	//                    string Reg_AP_T, 
	//                    string Reg_CP_T, 
	//                    string Wait_AP_T, 
	//                    string Wait_CP_T, 
	//                    string Srvc_T, 
	//                    string Rejection) {
	//            _2d_pRow row_2d_pRow = ((_2d_pRow)(this.NewRow()));
	//            row_2d_pRow.ItemArray = new object[] {
	//                    Index,
	//                    T_arrival,
	//                    Origin,
	//                    Dest,
	//                    Assignment,
	//                    T_end_wait_AP,
	//                    T_end_wait_CP,
	//                    T_door_opening,
	//                    T_door_opened,
	//                    T_door_close,
	//                    T_depart,
	//                    Reg_dir,
	//                    _Reg_car_dir,
	//                    _Re_Reg,
	//                    _T_Re_Reg,
	//                    Reg_AP_T,
	//                    Reg_CP_T,
	//                    Wait_AP_T,
	//                    Wait_CP_T,
	//                    Srvc_T,
	//                    Rejection};
	//            this.Rows.Add(row_2d_pRow);
	//            return row_2d_pRow;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            _2d_pDataTable cln = ((_2d_pDataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new _2d_pDataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnIndex = this.Columns["Index"];
	//            this.columnT_arrival = this.Columns["T_arrival"];
	//            this.columnOrigin = this.Columns["Origin"];
	//            this.columnDest = this.Columns["Dest"];
	//            this.columnAssignment = this.Columns["Assignment"];
	//            this.columnT_end_wait_AP = this.Columns["T_end_wait_AP"];
	//            this.columnT_end_wait_CP = this.Columns["T_end_wait_CP"];
	//            this.columnT_door_opening = this.Columns["T_door_opening"];
	//            this.columnT_door_opened = this.Columns["T_door_opened"];
	//            this.columnT_door_close = this.Columns["T_door_close"];
	//            this.columnT_depart = this.Columns["T_depart"];
	//            this.columnReg_dir = this.Columns["Reg_dir"];
	//            this.column_Reg_car_dir = this.Columns["Reg_car-dir"];
	//            this.column_Re_Reg = this.Columns["Re-Reg"];
	//            this.column_T_Re_Reg = this.Columns["T_Re-Reg"];
	//            this.columnReg_AP_T = this.Columns["Reg_AP_T"];
	//            this.columnReg_CP_T = this.Columns["Reg_CP_T"];
	//            this.columnWait_AP_T = this.Columns["Wait_AP_T"];
	//            this.columnWait_CP_T = this.Columns["Wait_CP_T"];
	//            this.columnSrvc_T = this.Columns["Srvc_T"];
	//            this.columnRejection = this.Columns["Rejection"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnIndex = new DataColumn("Index", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnIndex);
	//            this.columnT_arrival = new DataColumn("T_arrival", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_arrival);
	//            this.columnOrigin = new DataColumn("Origin", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnOrigin);
	//            this.columnDest = new DataColumn("Dest", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnDest);
	//            this.columnAssignment = new DataColumn("Assignment", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnAssignment);
	//            this.columnT_end_wait_AP = new DataColumn("T_end_wait_AP", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_end_wait_AP);
	//            this.columnT_end_wait_CP = new DataColumn("T_end_wait_CP", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_end_wait_CP);
	//            this.columnT_door_opening = new DataColumn("T_door_opening", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_door_opening);
	//            this.columnT_door_opened = new DataColumn("T_door_opened", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_door_opened);
	//            this.columnT_door_close = new DataColumn("T_door_close", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_door_close);
	//            this.columnT_depart = new DataColumn("T_depart", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnT_depart);
	//            this.columnReg_dir = new DataColumn("Reg_dir", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnReg_dir);
	//            this.column_Reg_car_dir = new DataColumn("Reg_car-dir", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.column_Reg_car_dir);
	//            this.column_Re_Reg = new DataColumn("Re-Reg", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.column_Re_Reg);
	//            this.column_T_Re_Reg = new DataColumn("T_Re-Reg", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.column_T_Re_Reg);
	//            this.columnReg_AP_T = new DataColumn("Reg_AP_T", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnReg_AP_T);
	//            this.columnReg_CP_T = new DataColumn("Reg_CP_T", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnReg_CP_T);
	//            this.columnWait_AP_T = new DataColumn("Wait_AP_T", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnWait_AP_T);
	//            this.columnWait_CP_T = new DataColumn("Wait_CP_T", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnWait_CP_T);
	//            this.columnSrvc_T = new DataColumn("Srvc_T", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnSrvc_T);
	//            this.columnRejection = new DataColumn("Rejection", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnRejection);
	//        }
	//        
	//        public _2d_pRow New_2d_pRow() {
	//            return ((_2d_pRow)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new _2d_pRow(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(_2d_pRow);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this._2d_pRowChanged != null)) {
	//                this._2d_pRowChanged(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this._2d_pRowChanging != null)) {
	//                this._2d_pRowChanging(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this._2d_pRowDeleted != null)) {
	//                this._2d_pRowDeleted(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this._2d_pRowDeleting != null)) {
	//                this._2d_pRowDeleting(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void Remove_2d_pRow(_2d_pRow row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class _2d_pRow : DataRow {
	//        
	//        private _2d_pDataTable table_2d_p;
	//        
	//        internal _2d_pRow(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.table_2d_p = ((_2d_pDataTable)(this.Table));
	//        }
	//        
	//        public string Index {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.IndexColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.IndexColumn] = value;
	//            }
	//        }
	//        
	//        public string T_arrival {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_arrivalColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_arrivalColumn] = value;
	//            }
	//        }
	//        
	//        public string Origin {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.OriginColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.OriginColumn] = value;
	//            }
	//        }
	//        
	//        public string Dest {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.DestColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.DestColumn] = value;
	//            }
	//        }
	//        
	//        public string Assignment {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.AssignmentColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.AssignmentColumn] = value;
	//            }
	//        }
	//        
	//        public string T_end_wait_AP {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_end_wait_APColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_end_wait_APColumn] = value;
	//            }
	//        }
	//        
	//        public string T_end_wait_CP {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_end_wait_CPColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_end_wait_CPColumn] = value;
	//            }
	//        }
	//        
	//        public string T_door_opening {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_door_openingColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_door_openingColumn] = value;
	//            }
	//        }
	//        
	//        public string T_door_opened {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_door_openedColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_door_openedColumn] = value;
	//            }
	//        }
	//        
	//        public string T_door_close {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_door_closeColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_door_closeColumn] = value;
	//            }
	//        }
	//        
	//        public string T_depart {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.T_departColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.T_departColumn] = value;
	//            }
	//        }
	//        
	//        public string Reg_dir {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.Reg_dirColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.Reg_dirColumn] = value;
	//            }
	//        }
	//        
	//        public string _Reg_car_dir {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p._Reg_car_dirColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p._Reg_car_dirColumn] = value;
	//            }
	//        }
	//        
	//        public string _Re_Reg {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p._Re_RegColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p._Re_RegColumn] = value;
	//            }
	//        }
	//        
	//        public string _T_Re_Reg {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p._T_Re_RegColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p._T_Re_RegColumn] = value;
	//            }
	//        }
	//        
	//        public string Reg_AP_T {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.Reg_AP_TColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.Reg_AP_TColumn] = value;
	//            }
	//        }
	//        
	//        public string Reg_CP_T {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.Reg_CP_TColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.Reg_CP_TColumn] = value;
	//            }
	//        }
	//        
	//        public string Wait_AP_T {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.Wait_AP_TColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.Wait_AP_TColumn] = value;
	//            }
	//        }
	//        
	//        public string Wait_CP_T {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.Wait_CP_TColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.Wait_CP_TColumn] = value;
	//            }
	//        }
	//        
	//        public string Srvc_T {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.Srvc_TColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.Srvc_TColumn] = value;
	//            }
	//        }
	//        
	//        public string Rejection {
	//            get {
	//                try {
	//                    return ((string)(this[this.table_2d_p.RejectionColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.table_2d_p.RejectionColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsIndexNull() {
	//            return this.IsNull(this.table_2d_p.IndexColumn);
	//        }
	//        
	//        public void SetIndexNull() {
	//            this[this.table_2d_p.IndexColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_arrivalNull() {
	//            return this.IsNull(this.table_2d_p.T_arrivalColumn);
	//        }
	//        
	//        public void SetT_arrivalNull() {
	//            this[this.table_2d_p.T_arrivalColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsOriginNull() {
	//            return this.IsNull(this.table_2d_p.OriginColumn);
	//        }
	//        
	//        public void SetOriginNull() {
	//            this[this.table_2d_p.OriginColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsDestNull() {
	//            return this.IsNull(this.table_2d_p.DestColumn);
	//        }
	//        
	//        public void SetDestNull() {
	//            this[this.table_2d_p.DestColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsAssignmentNull() {
	//            return this.IsNull(this.table_2d_p.AssignmentColumn);
	//        }
	//        
	//        public void SetAssignmentNull() {
	//            this[this.table_2d_p.AssignmentColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_end_wait_APNull() {
	//            return this.IsNull(this.table_2d_p.T_end_wait_APColumn);
	//        }
	//        
	//        public void SetT_end_wait_APNull() {
	//            this[this.table_2d_p.T_end_wait_APColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_end_wait_CPNull() {
	//            return this.IsNull(this.table_2d_p.T_end_wait_CPColumn);
	//        }
	//        
	//        public void SetT_end_wait_CPNull() {
	//            this[this.table_2d_p.T_end_wait_CPColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_door_openingNull() {
	//            return this.IsNull(this.table_2d_p.T_door_openingColumn);
	//        }
	//        
	//        public void SetT_door_openingNull() {
	//            this[this.table_2d_p.T_door_openingColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_door_openedNull() {
	//            return this.IsNull(this.table_2d_p.T_door_openedColumn);
	//        }
	//        
	//        public void SetT_door_openedNull() {
	//            this[this.table_2d_p.T_door_openedColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_door_closeNull() {
	//            return this.IsNull(this.table_2d_p.T_door_closeColumn);
	//        }
	//        
	//        public void SetT_door_closeNull() {
	//            this[this.table_2d_p.T_door_closeColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsT_departNull() {
	//            return this.IsNull(this.table_2d_p.T_departColumn);
	//        }
	//        
	//        public void SetT_departNull() {
	//            this[this.table_2d_p.T_departColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsReg_dirNull() {
	//            return this.IsNull(this.table_2d_p.Reg_dirColumn);
	//        }
	//        
	//        public void SetReg_dirNull() {
	//            this[this.table_2d_p.Reg_dirColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool Is_Reg_car_dirNull() {
	//            return this.IsNull(this.table_2d_p._Reg_car_dirColumn);
	//        }
	//        
	//        public void Set_Reg_car_dirNull() {
	//            this[this.table_2d_p._Reg_car_dirColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool Is_Re_RegNull() {
	//            return this.IsNull(this.table_2d_p._Re_RegColumn);
	//        }
	//        
	//        public void Set_Re_RegNull() {
	//            this[this.table_2d_p._Re_RegColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool Is_T_Re_RegNull() {
	//            return this.IsNull(this.table_2d_p._T_Re_RegColumn);
	//        }
	//        
	//        public void Set_T_Re_RegNull() {
	//            this[this.table_2d_p._T_Re_RegColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsReg_AP_TNull() {
	//            return this.IsNull(this.table_2d_p.Reg_AP_TColumn);
	//        }
	//        
	//        public void SetReg_AP_TNull() {
	//            this[this.table_2d_p.Reg_AP_TColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsReg_CP_TNull() {
	//            return this.IsNull(this.table_2d_p.Reg_CP_TColumn);
	//        }
	//        
	//        public void SetReg_CP_TNull() {
	//            this[this.table_2d_p.Reg_CP_TColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsWait_AP_TNull() {
	//            return this.IsNull(this.table_2d_p.Wait_AP_TColumn);
	//        }
	//        
	//        public void SetWait_AP_TNull() {
	//            this[this.table_2d_p.Wait_AP_TColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsWait_CP_TNull() {
	//            return this.IsNull(this.table_2d_p.Wait_CP_TColumn);
	//        }
	//        
	//        public void SetWait_CP_TNull() {
	//            this[this.table_2d_p.Wait_CP_TColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsSrvc_TNull() {
	//            return this.IsNull(this.table_2d_p.Srvc_TColumn);
	//        }
	//        
	//        public void SetSrvc_TNull() {
	//            this[this.table_2d_p.Srvc_TColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsRejectionNull() {
	//            return this.IsNull(this.table_2d_p.RejectionColumn);
	//        }
	//        
	//        public void SetRejectionNull() {
	//            this[this.table_2d_p.RejectionColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class _2d_pRowChangeEvent : EventArgs {
	//        
	//        private _2d_pRow eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public _2d_pRowChangeEvent(_2d_pRow row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public _2d_pRow Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class report_item1DataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnitem;
	//        
	//        private DataColumn columnvalue;
	//        
	//        internal report_item1DataTable() : 
	//                base("report_item1") {
	//            this.InitClass();
	//        }
	//        
	//        internal report_item1DataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn itemColumn {
	//            get {
	//                return this.columnitem;
	//            }
	//        }
	//        
	//        internal DataColumn valueColumn {
	//            get {
	//                return this.columnvalue;
	//            }
	//        }
	//        
	//        public report_item1Row this[int index] {
	//            get {
	//                return ((report_item1Row)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event report_item1RowChangeEventHandler report_item1RowChanged;
	//        
	//        public event report_item1RowChangeEventHandler report_item1RowChanging;
	//        
	//        public event report_item1RowChangeEventHandler report_item1RowDeleted;
	//        
	//        public event report_item1RowChangeEventHandler report_item1RowDeleting;
	//        
	//        public void Addreport_item1Row(report_item1Row row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public report_item1Row Addreport_item1Row(string item, string value) {
	//            report_item1Row rowreport_item1Row = ((report_item1Row)(this.NewRow()));
	//            rowreport_item1Row.ItemArray = new object[] {
	//                    item,
	//                    value};
	//            this.Rows.Add(rowreport_item1Row);
	//            return rowreport_item1Row;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            report_item1DataTable cln = ((report_item1DataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new report_item1DataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnitem = this.Columns["item"];
	//            this.columnvalue = this.Columns["value"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnitem);
	//            this.columnvalue = new DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnvalue);
	//        }
	//        
	//        public report_item1Row Newreport_item1Row() {
	//            return ((report_item1Row)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new report_item1Row(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(report_item1Row);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this.report_item1RowChanged != null)) {
	//                this.report_item1RowChanged(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this.report_item1RowChanging != null)) {
	//                this.report_item1RowChanging(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this.report_item1RowDeleted != null)) {
	//                this.report_item1RowDeleted(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this.report_item1RowDeleting != null)) {
	//                this.report_item1RowDeleting(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void Removereport_item1Row(report_item1Row row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class report_item1Row : DataRow {
	//        
	//        private report_item1DataTable tablereport_item1;
	//        
	//        internal report_item1Row(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.tablereport_item1 = ((report_item1DataTable)(this.Table));
	//        }
	//        
	//        public string item {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablereport_item1.itemColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablereport_item1.itemColumn] = value;
	//            }
	//        }
	//        
	//        public string value {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablereport_item1.valueColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablereport_item1.valueColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsitemNull() {
	//            return this.IsNull(this.tablereport_item1.itemColumn);
	//        }
	//        
	//        public void SetitemNull() {
	//            this[this.tablereport_item1.itemColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsvalueNull() {
	//            return this.IsNull(this.tablereport_item1.valueColumn);
	//        }
	//        
	//        public void SetvalueNull() {
	//            this[this.tablereport_item1.valueColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class report_item1RowChangeEvent : EventArgs {
	//        
	//        private report_item1Row eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public report_item1RowChangeEvent(report_item1Row row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public report_item1Row Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class report_item2DataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnitem;
	//        
	//        private DataColumn columnvalue;
	//        
	//        internal report_item2DataTable() : 
	//                base("report_item2") {
	//            this.InitClass();
	//        }
	//        
	//        internal report_item2DataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn itemColumn {
	//            get {
	//                return this.columnitem;
	//            }
	//        }
	//        
	//        internal DataColumn valueColumn {
	//            get {
	//                return this.columnvalue;
	//            }
	//        }
	//        
	//        public report_item2Row this[int index] {
	//            get {
	//                return ((report_item2Row)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event report_item2RowChangeEventHandler report_item2RowChanged;
	//        
	//        public event report_item2RowChangeEventHandler report_item2RowChanging;
	//        
	//        public event report_item2RowChangeEventHandler report_item2RowDeleted;
	//        
	//        public event report_item2RowChangeEventHandler report_item2RowDeleting;
	//        
	//        public void Addreport_item2Row(report_item2Row row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public report_item2Row Addreport_item2Row(string item, string value) {
	//            report_item2Row rowreport_item2Row = ((report_item2Row)(this.NewRow()));
	//            rowreport_item2Row.ItemArray = new object[] {
	//                    item,
	//                    value};
	//            this.Rows.Add(rowreport_item2Row);
	//            return rowreport_item2Row;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            report_item2DataTable cln = ((report_item2DataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new report_item2DataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnitem = this.Columns["item"];
	//            this.columnvalue = this.Columns["value"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnitem);
	//            this.columnvalue = new DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnvalue);
	//        }
	//        
	//        public report_item2Row Newreport_item2Row() {
	//            return ((report_item2Row)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new report_item2Row(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(report_item2Row);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this.report_item2RowChanged != null)) {
	//                this.report_item2RowChanged(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this.report_item2RowChanging != null)) {
	//                this.report_item2RowChanging(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this.report_item2RowDeleted != null)) {
	//                this.report_item2RowDeleted(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this.report_item2RowDeleting != null)) {
	//                this.report_item2RowDeleting(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void Removereport_item2Row(report_item2Row row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class report_item2Row : DataRow {
	//        
	//        private report_item2DataTable tablereport_item2;
	//        
	//        internal report_item2Row(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.tablereport_item2 = ((report_item2DataTable)(this.Table));
	//        }
	//        
	//        public string item {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablereport_item2.itemColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablereport_item2.itemColumn] = value;
	//            }
	//        }
	//        
	//        public string value {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablereport_item2.valueColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablereport_item2.valueColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsitemNull() {
	//            return this.IsNull(this.tablereport_item2.itemColumn);
	//        }
	//        
	//        public void SetitemNull() {
	//            this[this.tablereport_item2.itemColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsvalueNull() {
	//            return this.IsNull(this.tablereport_item2.valueColumn);
	//        }
	//        
	//        public void SetvalueNull() {
	//            this[this.tablereport_item2.valueColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class report_item2RowChangeEvent : EventArgs {
	//        
	//        private report_item2Row eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public report_item2RowChangeEvent(report_item2Row row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public report_item2Row Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class svcwaitDataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnitem;
	//        
	//        private DataColumn columnvalue;
	//        
	//        internal svcwaitDataTable() : 
	//                base("svcwait") {
	//            this.InitClass();
	//        }
	//        
	//        internal svcwaitDataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn itemColumn {
	//            get {
	//                return this.columnitem;
	//            }
	//        }
	//        
	//        internal DataColumn valueColumn {
	//            get {
	//                return this.columnvalue;
	//            }
	//        }
	//        
	//        public svcwaitRow this[int index] {
	//            get {
	//                return ((svcwaitRow)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event svcwaitRowChangeEventHandler svcwaitRowChanged;
	//        
	//        public event svcwaitRowChangeEventHandler svcwaitRowChanging;
	//        
	//        public event svcwaitRowChangeEventHandler svcwaitRowDeleted;
	//        
	//        public event svcwaitRowChangeEventHandler svcwaitRowDeleting;
	//        
	//        public void AddsvcwaitRow(svcwaitRow row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public svcwaitRow AddsvcwaitRow(string item, System.Double value) {
	//            svcwaitRow rowsvcwaitRow = ((svcwaitRow)(this.NewRow()));
	//            rowsvcwaitRow.ItemArray = new object[] {
	//                    item,
	//                    value};
	//            this.Rows.Add(rowsvcwaitRow);
	//            return rowsvcwaitRow;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            svcwaitDataTable cln = ((svcwaitDataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new svcwaitDataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnitem = this.Columns["item"];
	//            this.columnvalue = this.Columns["value"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnitem);
	//            this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnvalue);
	//        }
	//        
	//        public svcwaitRow NewsvcwaitRow() {
	//            return ((svcwaitRow)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new svcwaitRow(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(svcwaitRow);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this.svcwaitRowChanged != null)) {
	//                this.svcwaitRowChanged(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this.svcwaitRowChanging != null)) {
	//                this.svcwaitRowChanging(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this.svcwaitRowDeleted != null)) {
	//                this.svcwaitRowDeleted(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this.svcwaitRowDeleting != null)) {
	//                this.svcwaitRowDeleting(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void RemovesvcwaitRow(svcwaitRow row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class svcwaitRow : DataRow {
	//        
	//        private svcwaitDataTable tablesvcwait;
	//        
	//        internal svcwaitRow(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.tablesvcwait = ((svcwaitDataTable)(this.Table));
	//        }
	//        
	//        public string item {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablesvcwait.itemColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablesvcwait.itemColumn] = value;
	//            }
	//        }
	//        
	//        public System.Double value {
	//            get {
	//                try {
	//                    return ((System.Double)(this[this.tablesvcwait.valueColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablesvcwait.valueColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsitemNull() {
	//            return this.IsNull(this.tablesvcwait.itemColumn);
	//        }
	//        
	//        public void SetitemNull() {
	//            this[this.tablesvcwait.itemColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsvalueNull() {
	//            return this.IsNull(this.tablesvcwait.valueColumn);
	//        }
	//        
	//        public void SetvalueNull() {
	//            this[this.tablesvcwait.valueColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class svcwaitRowChangeEvent : EventArgs {
	//        
	//        private svcwaitRow eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public svcwaitRowChangeEvent(svcwaitRow row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public svcwaitRow Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class waitDataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnitem;
	//        
	//        private DataColumn columnvalue;
	//        
	//        internal waitDataTable() : 
	//                base("wait") {
	//            this.InitClass();
	//        }
	//        
	//        internal waitDataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn itemColumn {
	//            get {
	//                return this.columnitem;
	//            }
	//        }
	//        
	//        internal DataColumn valueColumn {
	//            get {
	//                return this.columnvalue;
	//            }
	//        }
	//        
	//        public waitRow this[int index] {
	//            get {
	//                return ((waitRow)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event waitRowChangeEventHandler waitRowChanged;
	//        
	//        public event waitRowChangeEventHandler waitRowChanging;
	//        
	//        public event waitRowChangeEventHandler waitRowDeleted;
	//        
	//        public event waitRowChangeEventHandler waitRowDeleting;
	//        
	//        public void AddwaitRow(waitRow row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public waitRow AddwaitRow(string item, System.Double value) {
	//            waitRow rowwaitRow = ((waitRow)(this.NewRow()));
	//            rowwaitRow.ItemArray = new object[] {
	//                    item,
	//                    value};
	//            this.Rows.Add(rowwaitRow);
	//            return rowwaitRow;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            waitDataTable cln = ((waitDataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new waitDataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnitem = this.Columns["item"];
	//            this.columnvalue = this.Columns["value"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnitem);
	//            this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnvalue);
	//        }
	//        
	//        public waitRow NewwaitRow() {
	//            return ((waitRow)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new waitRow(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(waitRow);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this.waitRowChanged != null)) {
	//                this.waitRowChanged(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this.waitRowChanging != null)) {
	//                this.waitRowChanging(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this.waitRowDeleted != null)) {
	//                this.waitRowDeleted(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this.waitRowDeleting != null)) {
	//                this.waitRowDeleting(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void RemovewaitRow(waitRow row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class waitRow : DataRow {
	//        
	//        private waitDataTable tablewait;
	//        
	//        internal waitRow(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.tablewait = ((waitDataTable)(this.Table));
	//        }
	//        
	//        public string item {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablewait.itemColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablewait.itemColumn] = value;
	//            }
	//        }
	//        
	//        public System.Double value {
	//            get {
	//                try {
	//                    return ((System.Double)(this[this.tablewait.valueColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablewait.valueColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsitemNull() {
	//            return this.IsNull(this.tablewait.itemColumn);
	//        }
	//        
	//        public void SetitemNull() {
	//            this[this.tablewait.itemColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsvalueNull() {
	//            return this.IsNull(this.tablewait.valueColumn);
	//        }
	//        
	//        public void SetvalueNull() {
	//            this[this.tablewait.valueColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class waitRowChangeEvent : EventArgs {
	//        
	//        private waitRow eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public waitRowChangeEvent(waitRow row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public waitRow Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class svcDataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columnitem;
	//        
	//        private DataColumn columnvalue;
	//        
	//        internal svcDataTable() : 
	//                base("svc") {
	//            this.InitClass();
	//        }
	//        
	//        internal svcDataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn itemColumn {
	//            get {
	//                return this.columnitem;
	//            }
	//        }
	//        
	//        internal DataColumn valueColumn {
	//            get {
	//                return this.columnvalue;
	//            }
	//        }
	//        
	//        public svcRow this[int index] {
	//            get {
	//                return ((svcRow)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event svcRowChangeEventHandler svcRowChanged;
	//        
	//        public event svcRowChangeEventHandler svcRowChanging;
	//        
	//        public event svcRowChangeEventHandler svcRowDeleted;
	//        
	//        public event svcRowChangeEventHandler svcRowDeleting;
	//        
	//        public void AddsvcRow(svcRow row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public svcRow AddsvcRow(string item, System.Double value) {
	//            svcRow rowsvcRow = ((svcRow)(this.NewRow()));
	//            rowsvcRow.ItemArray = new object[] {
	//                    item,
	//                    value};
	//            this.Rows.Add(rowsvcRow);
	//            return rowsvcRow;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            svcDataTable cln = ((svcDataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new svcDataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columnitem = this.Columns["item"];
	//            this.columnvalue = this.Columns["value"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnitem);
	//            this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnvalue);
	//        }
	//        
	//        public svcRow NewsvcRow() {
	//            return ((svcRow)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new svcRow(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(svcRow);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this.svcRowChanged != null)) {
	//                this.svcRowChanged(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this.svcRowChanging != null)) {
	//                this.svcRowChanging(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this.svcRowDeleted != null)) {
	//                this.svcRowDeleted(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this.svcRowDeleting != null)) {
	//                this.svcRowDeleting(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void RemovesvcRow(svcRow row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class svcRow : DataRow {
	//        
	//        private svcDataTable tablesvc;
	//        
	//        internal svcRow(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.tablesvc = ((svcDataTable)(this.Table));
	//        }
	//        
	//        public string item {
	//            get {
	//                try {
	//                    return ((string)(this[this.tablesvc.itemColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablesvc.itemColumn] = value;
	//            }
	//        }
	//        
	//        public System.Double value {
	//            get {
	//                try {
	//                    return ((System.Double)(this[this.tablesvc.valueColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablesvc.valueColumn] = value;
	//            }
	//        }
	//        
	//        public bool IsitemNull() {
	//            return this.IsNull(this.tablesvc.itemColumn);
	//        }
	//        
	//        public void SetitemNull() {
	//            this[this.tablesvc.itemColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsvalueNull() {
	//            return this.IsNull(this.tablesvc.valueColumn);
	//        }
	//        
	//        public void SetvalueNull() {
	//            this[this.tablesvc.valueColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class svcRowChangeEvent : EventArgs {
	//        
	//        private svcRow eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public svcRowChangeEvent(svcRow row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public svcRow Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//}


}
namespace COGS_SPY
{
	//[Serializable(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Diagnostics.DebuggerStepThrough(), System.ComponentModel.ToolboxItem(true)]
	//public class dsReport : DataSet
	//{
	//       
	//	private _2d_cDataTable table_2d_c;
	//       
	//	private _2d_pDataTable table_2d_p;
	//       
	//	private report_item1DataTable tablereport_item1;
	//       
	//	private report_item2DataTable tablereport_item2;
	//       
	//	private svcwaitDataTable tablesvcwait;
	//       
	//	private waitDataTable tablewait;
	//       
	//	private svcDataTable tablesvc;
	//       
	//	public dsReport() 
	//	{
	//		this.InitClass();
	//		System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//		this.Tables.CollectionChanged += schemaChangedHandler;
	//		this.Relations.CollectionChanged += schemaChangedHandler;
	//	}
	//       
	//	protected dsReport(SerializationInfo info, StreamingContext context) 
	//	{
	//		string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
	//		if ((strSchema != null)) 
	//		{
	//			DataSet ds = new DataSet();
	//			ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
	//			if ((ds.Tables["2d_c"] != null)) 
	//			{
	//				this.Tables.Add(new _2d_cDataTable(ds.Tables["2d_c"]));
	//			}
	//			if ((ds.Tables["2d_p"] != null)) 
	//			{
	//				this.Tables.Add(new _2d_pDataTable(ds.Tables["2d_p"]));
	//			}
	//			if ((ds.Tables["report_item1"] != null)) 
	//			{
	//				this.Tables.Add(new report_item1DataTable(ds.Tables["report_item1"]));
	//			}
	//			if ((ds.Tables["report_item2"] != null)) 
	//			{
	//				this.Tables.Add(new report_item2DataTable(ds.Tables["report_item2"]));
	//			}
	//			if ((ds.Tables["svcwait"] != null)) 
	//			{
	//				this.Tables.Add(new svcwaitDataTable(ds.Tables["svcwait"]));
	//			}
	//			if ((ds.Tables["wait"] != null)) 
	//			{
	//				this.Tables.Add(new waitDataTable(ds.Tables["wait"]));
	//			}
	//			if ((ds.Tables["svc"] != null)) 
	//			{
	//				this.Tables.Add(new svcDataTable(ds.Tables["svc"]));
	//			}
	//			this.DataSetName = ds.DataSetName;
	//			this.Prefix = ds.Prefix;
	//			this.Namespace = ds.Namespace;
	//			this.Locale = ds.Locale;
	//			this.CaseSensitive = ds.CaseSensitive;
	//			this.EnforceConstraints = ds.EnforceConstraints;
	//			this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//			this.InitVars();
	//		}
	//		else 
	//		{
	//			this.InitClass();
	//		}
	//		this.GetSerializationData(info, context);
	//		System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//		this.Tables.CollectionChanged += schemaChangedHandler;
	//		this.Relations.CollectionChanged += schemaChangedHandler;
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public _2d_cDataTable _2d_c 
	//	{
	//		get 
	//		{
	//			return this.table_2d_c;
	//		}
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public _2d_pDataTable _2d_p 
	//	{
	//		get 
	//		{
	//			return this.table_2d_p;
	//		}
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public report_item1DataTable report_item1 
	//	{
	//		get 
	//		{
	//			return this.tablereport_item1;
	//		}
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public report_item2DataTable report_item2 
	//	{
	//		get 
	//		{
	//			return this.tablereport_item2;
	//		}
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public svcwaitDataTable svcwait 
	//	{
	//		get 
	//		{
	//			return this.tablesvcwait;
	//		}
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public waitDataTable wait 
	//	{
	//		get 
	//		{
	//			return this.tablewait;
	//		}
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public svcDataTable svc 
	//	{
	//		get 
	//		{
	//			return this.tablesvc;
	//		}
	//	}
	//       
	//	public override DataSet Clone() 
	//	{
	//		dsReport cln = ((dsReport)(base.Clone()));
	//		cln.InitVars();
	//		return cln;
	//	}
	//       
	//	protected override bool ShouldSerializeTables() 
	//	{
	//		return false;
	//	}
	//       
	//	protected override bool ShouldSerializeRelations() 
	//	{
	//		return false;
	//	}
	//       
	//	protected override void ReadXmlSerializable(XmlReader reader) 
	//	{
	//		this.Reset();
	//		DataSet ds = new DataSet();
	//		ds.ReadXml(reader);
	//		if ((ds.Tables["2d_c"] != null)) 
	//		{
	//			this.Tables.Add(new _2d_cDataTable(ds.Tables["2d_c"]));
	//		}
	//		if ((ds.Tables["2d_p"] != null)) 
	//		{
	//			this.Tables.Add(new _2d_pDataTable(ds.Tables["2d_p"]));
	//		}
	//		if ((ds.Tables["report_item1"] != null)) 
	//		{
	//			this.Tables.Add(new report_item1DataTable(ds.Tables["report_item1"]));
	//		}
	//		if ((ds.Tables["report_item2"] != null)) 
	//		{
	//			this.Tables.Add(new report_item2DataTable(ds.Tables["report_item2"]));
	//		}
	//		if ((ds.Tables["svcwait"] != null)) 
	//		{
	//			this.Tables.Add(new svcwaitDataTable(ds.Tables["svcwait"]));
	//		}
	//		if ((ds.Tables["wait"] != null)) 
	//		{
	//			this.Tables.Add(new waitDataTable(ds.Tables["wait"]));
	//		}
	//		if ((ds.Tables["svc"] != null)) 
	//		{
	//			this.Tables.Add(new svcDataTable(ds.Tables["svc"]));
	//		}
	//		this.DataSetName = ds.DataSetName;
	//		this.Prefix = ds.Prefix;
	//		this.Namespace = ds.Namespace;
	//		this.Locale = ds.Locale;
	//		this.CaseSensitive = ds.CaseSensitive;
	//		this.EnforceConstraints = ds.EnforceConstraints;
	//		this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//		this.InitVars();
	//	}
	//       
	//	protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() 
	//	{
	//		System.IO.MemoryStream stream = new System.IO.MemoryStream();
	//		this.WriteXmlSchema(new XmlTextWriter(stream, null));
	//		stream.Position = 0;
	//		return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
	//	}
	//       
	//	internal void InitVars() 
	//	{
	//		this.table_2d_c = ((_2d_cDataTable)(this.Tables["2d_c"]));
	//		if ((this.table_2d_c != null)) 
	//		{
	//			this.table_2d_c.InitVars();
	//		}
	//		this.table_2d_p = ((_2d_pDataTable)(this.Tables["2d_p"]));
	//		if ((this.table_2d_p != null)) 
	//		{
	//			this.table_2d_p.InitVars();
	//		}
	//		this.tablereport_item1 = ((report_item1DataTable)(this.Tables["report_item1"]));
	//		if ((this.tablereport_item1 != null)) 
	//		{
	//			this.tablereport_item1.InitVars();
	//		}
	//		this.tablereport_item2 = ((report_item2DataTable)(this.Tables["report_item2"]));
	//		if ((this.tablereport_item2 != null)) 
	//		{
	//			this.tablereport_item2.InitVars();
	//		}
	//		this.tablesvcwait = ((svcwaitDataTable)(this.Tables["svcwait"]));
	//		if ((this.tablesvcwait != null)) 
	//		{
	//			this.tablesvcwait.InitVars();
	//		}
	//		this.tablewait = ((waitDataTable)(this.Tables["wait"]));
	//		if ((this.tablewait != null)) 
	//		{
	//			this.tablewait.InitVars();
	//		}
	//		this.tablesvc = ((svcDataTable)(this.Tables["svc"]));
	//		if ((this.tablesvc != null)) 
	//		{
	//			this.tablesvc.InitVars();
	//		}
	//	}
	//       
	//	private void InitClass() 
	//	{
	//		this.DataSetName = "dsReport";
	//		this.Prefix = "";
	//		this.Namespace = "http://tempuri.org/dsReport.xsd";
	//		this.Locale = new System.Globalization.CultureInfo("en-US");
	//		this.CaseSensitive = false;
	//		this.EnforceConstraints = true;
	//		this.table_2d_c = new _2d_cDataTable();
	//		this.Tables.Add(this.table_2d_c);
	//		this.table_2d_p = new _2d_pDataTable();
	//		this.Tables.Add(this.table_2d_p);
	//		this.tablereport_item1 = new report_item1DataTable();
	//		this.Tables.Add(this.tablereport_item1);
	//		this.tablereport_item2 = new report_item2DataTable();
	//		this.Tables.Add(this.tablereport_item2);
	//		this.tablesvcwait = new svcwaitDataTable();
	//		this.Tables.Add(this.tablesvcwait);
	//		this.tablewait = new waitDataTable();
	//		this.Tables.Add(this.tablewait);
	//		this.tablesvc = new svcDataTable();
	//		this.Tables.Add(this.tablesvc);
	//	}
	//       
	//	private bool ShouldSerialize_2d_c() 
	//	{
	//		return false;
	//	}
	//       
	//	private bool ShouldSerialize_2d_p() 
	//	{
	//		return false;
	//	}
	//       
	//	private bool ShouldSerializereport_item1() 
	//	{
	//		return false;
	//	}
	//       
	//	private bool ShouldSerializereport_item2() 
	//	{
	//		return false;
	//	}
	//       
	//	private bool ShouldSerializesvcwait() 
	//	{
	//		return false;
	//	}
	//       
	//	private bool ShouldSerializewait() 
	//	{
	//		return false;
	//	}
	//       
	//	private bool ShouldSerializesvc() 
	//	{
	//		return false;
	//	}
	//       
	//	private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) 
	//	{
	//		if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) 
	//		{
	//			this.InitVars();
	//		}
	//	}
	//       
	//	public delegate void _2d_cRowChangeEventHandler(object sender, _2d_cRowChangeEvent e);
	//       
	//	public delegate void _2d_pRowChangeEventHandler(object sender, _2d_pRowChangeEvent e);
	//       
	//	public delegate void report_item1RowChangeEventHandler(object sender, report_item1RowChangeEvent e);
	//       
	//	public delegate void report_item2RowChangeEventHandler(object sender, report_item2RowChangeEvent e);
	//       
	//	public delegate void svcwaitRowChangeEventHandler(object sender, svcwaitRowChangeEvent e);
	//       
	//	public delegate void waitRowChangeEventHandler(object sender, waitRowChangeEvent e);
	//       
	//	public delegate void svcRowChangeEventHandler(object sender, svcRowChangeEvent e);
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class _2d_cDataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnCar;
	//           
	//		private DataColumn columnType;
	//           
	//		private DataColumn columnT_begin_run;
	//           
	//		private DataColumn columnT_decel;
	//           
	//		private DataColumn columnT_reach_AP;
	//           
	//		private DataColumn columnT_end_run;
	//           
	//		private DataColumn columnOrigin;
	//           
	//		private DataColumn columnDest;
	//           
	//		private DataColumn columnPax_in_run;
	//           
	//		private DataColumn columnChanged_target;
	//           
	//		private DataColumn columnT_opened;
	//           
	//		private DataColumn columnDeboard;
	//           
	//		private DataColumn columnBoard;
	//           
	//		private DataColumn columnT_dwelled;
	//           
	//		private DataColumn columnExtra_dwell;
	//           
	//		private DataColumn columnT_closed;
	//           
	//		private DataColumn columnT_released;
	//           
	//		internal _2d_cDataTable() : 
	//			base("2d_c") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal _2d_cDataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn CarColumn 
	//		{
	//			get 
	//			{
	//				return this.columnCar;
	//			}
	//		}
	//           
	//		internal DataColumn TypeColumn 
	//		{
	//			get 
	//			{
	//				return this.columnType;
	//			}
	//		}
	//           
	//		internal DataColumn T_begin_runColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_begin_run;
	//			}
	//		}
	//           
	//		internal DataColumn T_decelColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_decel;
	//			}
	//		}
	//           
	//		internal DataColumn T_reach_APColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_reach_AP;
	//			}
	//		}
	//           
	//		internal DataColumn T_end_runColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_end_run;
	//			}
	//		}
	//           
	//		internal DataColumn OriginColumn 
	//		{
	//			get 
	//			{
	//				return this.columnOrigin;
	//			}
	//		}
	//           
	//		internal DataColumn DestColumn 
	//		{
	//			get 
	//			{
	//				return this.columnDest;
	//			}
	//		}
	//           
	//		internal DataColumn Pax_in_runColumn 
	//		{
	//			get 
	//			{
	//				return this.columnPax_in_run;
	//			}
	//		}
	//           
	//		internal DataColumn Changed_targetColumn 
	//		{
	//			get 
	//			{
	//				return this.columnChanged_target;
	//			}
	//		}
	//           
	//		internal DataColumn T_openedColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_opened;
	//			}
	//		}
	//           
	//		internal DataColumn DeboardColumn 
	//		{
	//			get 
	//			{
	//				return this.columnDeboard;
	//			}
	//		}
	//           
	//		internal DataColumn BoardColumn 
	//		{
	//			get 
	//			{
	//				return this.columnBoard;
	//			}
	//		}
	//           
	//		internal DataColumn T_dwelledColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_dwelled;
	//			}
	//		}
	//           
	//		internal DataColumn Extra_dwellColumn 
	//		{
	//			get 
	//			{
	//				return this.columnExtra_dwell;
	//			}
	//		}
	//           
	//		internal DataColumn T_closedColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_closed;
	//			}
	//		}
	//           
	//		internal DataColumn T_releasedColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_released;
	//			}
	//		}
	//           
	//		public _2d_cRow this[int index] 
	//		{
	//			get 
	//			{
	//				return ((_2d_cRow)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event _2d_cRowChangeEventHandler _2d_cRowChanged;
	//           
	//		public event _2d_cRowChangeEventHandler _2d_cRowChanging;
	//           
	//		public event _2d_cRowChangeEventHandler _2d_cRowDeleted;
	//           
	//		public event _2d_cRowChangeEventHandler _2d_cRowDeleting;
	//           
	//		public void Add_2d_cRow(_2d_cRow row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public _2d_cRow Add_2d_cRow(
	//			string Car, 
	//			string Type, 
	//			string T_begin_run, 
	//			string T_decel, 
	//			string T_reach_AP, 
	//			string T_end_run, 
	//			string Origin, 
	//			string Dest, 
	//			string Pax_in_run, 
	//			string Changed_target, 
	//			string T_opened, 
	//			string Deboard, 
	//			string Board, 
	//			string T_dwelled, 
	//			string Extra_dwell, 
	//			string T_closed, 
	//			string T_released) 
	//		{
	//			_2d_cRow row_2d_cRow = ((_2d_cRow)(this.NewRow()));
	//			row_2d_cRow.ItemArray = new object[] {
	//													 Car,
	//													 Type,
	//													 T_begin_run,
	//													 T_decel,
	//													 T_reach_AP,
	//													 T_end_run,
	//													 Origin,
	//													 Dest,
	//													 Pax_in_run,
	//													 Changed_target,
	//													 T_opened,
	//													 Deboard,
	//													 Board,
	//													 T_dwelled,
	//													 Extra_dwell,
	//													 T_closed,
	//													 T_released};
	//			this.Rows.Add(row_2d_cRow);
	//			return row_2d_cRow;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			_2d_cDataTable cln = ((_2d_cDataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new _2d_cDataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnCar = this.Columns["Car"];
	//			this.columnType = this.Columns["Type"];
	//			this.columnT_begin_run = this.Columns["T_begin_run"];
	//			this.columnT_decel = this.Columns["T_decel"];
	//			this.columnT_reach_AP = this.Columns["T_reach_AP"];
	//			this.columnT_end_run = this.Columns["T_end_run"];
	//			this.columnOrigin = this.Columns["Origin"];
	//			this.columnDest = this.Columns["Dest"];
	//			this.columnPax_in_run = this.Columns["Pax_in_run"];
	//			this.columnChanged_target = this.Columns["Changed_target"];
	//			this.columnT_opened = this.Columns["T_opened"];
	//			this.columnDeboard = this.Columns["Deboard"];
	//			this.columnBoard = this.Columns["Board"];
	//			this.columnT_dwelled = this.Columns["T_dwelled"];
	//			this.columnExtra_dwell = this.Columns["Extra_dwell"];
	//			this.columnT_closed = this.Columns["T_closed"];
	//			this.columnT_released = this.Columns["T released"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnCar = new DataColumn("Car", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnCar);
	//			this.columnType = new DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnType);
	//			this.columnT_begin_run = new DataColumn("T_begin_run", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_begin_run);
	//			this.columnT_decel = new DataColumn("T_decel", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_decel);
	//			this.columnT_reach_AP = new DataColumn("T_reach_AP", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_reach_AP);
	//			this.columnT_end_run = new DataColumn("T_end_run", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_end_run);
	//			this.columnOrigin = new DataColumn("Origin", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnOrigin);
	//			this.columnDest = new DataColumn("Dest", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnDest);
	//			this.columnPax_in_run = new DataColumn("Pax_in_run", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnPax_in_run);
	//			this.columnChanged_target = new DataColumn("Changed_target", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnChanged_target);
	//			this.columnT_opened = new DataColumn("T_opened", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_opened);
	//			this.columnDeboard = new DataColumn("Deboard", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnDeboard);
	//			this.columnBoard = new DataColumn("Board", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnBoard);
	//			this.columnT_dwelled = new DataColumn("T_dwelled", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_dwelled);
	//			this.columnExtra_dwell = new DataColumn("Extra_dwell", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnExtra_dwell);
	//			this.columnT_closed = new DataColumn("T_closed", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_closed);
	//			this.columnT_released = new DataColumn("T released", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_released);
	//		}
	//           
	//		public _2d_cRow New_2d_cRow() 
	//		{
	//			return ((_2d_cRow)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new _2d_cRow(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(_2d_cRow);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this._2d_cRowChanged != null)) 
	//			{
	//				this._2d_cRowChanged(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this._2d_cRowChanging != null)) 
	//			{
	//				this._2d_cRowChanging(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this._2d_cRowDeleted != null)) 
	//			{
	//				this._2d_cRowDeleted(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this._2d_cRowDeleting != null)) 
	//			{
	//				this._2d_cRowDeleting(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void Remove_2d_cRow(_2d_cRow row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class _2d_cRow : System.Data.DataRow 
	//	{
	//           
	//		private _2d_cDataTable table_2d_c;
	//           
	//		internal _2d_cRow(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.table_2d_c = ((_2d_cDataTable)(this.Table));
	//		}
	//           
	//		public string Car 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.CarColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.CarColumn] = value;
	//			}
	//		}
	//           
	//		public string Type 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.TypeColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.TypeColumn] = value;
	//			}
	//		}
	//           
	//		public string T_begin_run 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_begin_runColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_begin_runColumn] = value;
	//			}
	//		}
	//           
	//		public string T_decel 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_decelColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_decelColumn] = value;
	//			}
	//		}
	//           
	//		public string T_reach_AP 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_reach_APColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_reach_APColumn] = value;
	//			}
	//		}
	//           
	//		public string T_end_run 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_end_runColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_end_runColumn] = value;
	//			}
	//		}
	//           
	//		public string Origin 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.OriginColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.OriginColumn] = value;
	//			}
	//		}
	//           
	//		public string Dest 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.DestColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.DestColumn] = value;
	//			}
	//		}
	//           
	//		public string Pax_in_run 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.Pax_in_runColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.Pax_in_runColumn] = value;
	//			}
	//		}
	//           
	//		public string Changed_target 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.Changed_targetColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.Changed_targetColumn] = value;
	//			}
	//		}
	//           
	//		public string T_opened 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_openedColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_openedColumn] = value;
	//			}
	//		}
	//           
	//		public string Deboard 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.DeboardColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.DeboardColumn] = value;
	//			}
	//		}
	//           
	//		public string Board 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.BoardColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.BoardColumn] = value;
	//			}
	//		}
	//           
	//		public string T_dwelled 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_dwelledColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_dwelledColumn] = value;
	//			}
	//		}
	//           
	//		public string Extra_dwell 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.Extra_dwellColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.Extra_dwellColumn] = value;
	//			}
	//		}
	//           
	//		public string T_closed 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_closedColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_closedColumn] = value;
	//			}
	//		}
	//           
	//		public string T_released 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_c.T_releasedColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_c.T_releasedColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsCarNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.CarColumn);
	//		}
	//           
	//		public void SetCarNull() 
	//		{
	//			this[this.table_2d_c.CarColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsTypeNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.TypeColumn);
	//		}
	//           
	//		public void SetTypeNull() 
	//		{
	//			this[this.table_2d_c.TypeColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_begin_runNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_begin_runColumn);
	//		}
	//           
	//		public void SetT_begin_runNull() 
	//		{
	//			this[this.table_2d_c.T_begin_runColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_decelNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_decelColumn);
	//		}
	//           
	//		public void SetT_decelNull() 
	//		{
	//			this[this.table_2d_c.T_decelColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_reach_APNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_reach_APColumn);
	//		}
	//           
	//		public void SetT_reach_APNull() 
	//		{
	//			this[this.table_2d_c.T_reach_APColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_end_runNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_end_runColumn);
	//		}
	//           
	//		public void SetT_end_runNull() 
	//		{
	//			this[this.table_2d_c.T_end_runColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsOriginNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.OriginColumn);
	//		}
	//           
	//		public void SetOriginNull() 
	//		{
	//			this[this.table_2d_c.OriginColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsDestNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.DestColumn);
	//		}
	//           
	//		public void SetDestNull() 
	//		{
	//			this[this.table_2d_c.DestColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsPax_in_runNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.Pax_in_runColumn);
	//		}
	//           
	//		public void SetPax_in_runNull() 
	//		{
	//			this[this.table_2d_c.Pax_in_runColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsChanged_targetNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.Changed_targetColumn);
	//		}
	//           
	//		public void SetChanged_targetNull() 
	//		{
	//			this[this.table_2d_c.Changed_targetColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_openedNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_openedColumn);
	//		}
	//           
	//		public void SetT_openedNull() 
	//		{
	//			this[this.table_2d_c.T_openedColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsDeboardNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.DeboardColumn);
	//		}
	//           
	//		public void SetDeboardNull() 
	//		{
	//			this[this.table_2d_c.DeboardColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsBoardNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.BoardColumn);
	//		}
	//           
	//		public void SetBoardNull() 
	//		{
	//			this[this.table_2d_c.BoardColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_dwelledNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_dwelledColumn);
	//		}
	//           
	//		public void SetT_dwelledNull() 
	//		{
	//			this[this.table_2d_c.T_dwelledColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsExtra_dwellNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.Extra_dwellColumn);
	//		}
	//           
	//		public void SetExtra_dwellNull() 
	//		{
	//			this[this.table_2d_c.Extra_dwellColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_closedNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_closedColumn);
	//		}
	//           
	//		public void SetT_closedNull() 
	//		{
	//			this[this.table_2d_c.T_closedColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_releasedNull() 
	//		{
	//			return this.IsNull(this.table_2d_c.T_releasedColumn);
	//		}
	//           
	//		public void SetT_releasedNull() 
	//		{
	//			this[this.table_2d_c.T_releasedColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class _2d_cRowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private _2d_cRow eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public _2d_cRowChangeEvent(_2d_cRow row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public _2d_cRow Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class _2d_pDataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnIndex;
	//           
	//		private DataColumn columnT_arrival;
	//           
	//		private DataColumn columnOrigin;
	//           
	//		private DataColumn columnDest;
	//           
	//		private DataColumn columnAssignment;
	//           
	//		private DataColumn columnT_end_wait_AP;
	//           
	//		private DataColumn columnT_end_wait_CP;
	//           
	//		private DataColumn columnT_door_opening;
	//           
	//		private DataColumn columnT_door_opened;
	//           
	//		private DataColumn columnT_door_close;
	//           
	//		private DataColumn columnT_depart;
	//           
	//		private DataColumn columnReg_dir;
	//           
	//		private DataColumn column_Reg_car_dir;
	//           
	//		private DataColumn column_Re_Reg;
	//           
	//		private DataColumn column_T_Re_Reg;
	//           
	//		private DataColumn columnReg_AP_T;
	//           
	//		private DataColumn columnReg_CP_T;
	//           
	//		private DataColumn columnWait_AP_T;
	//           
	//		private DataColumn columnWait_CP_T;
	//           
	//		private DataColumn columnSrvc_T;
	//           
	//		private DataColumn columnRejection;
	//           
	//		internal _2d_pDataTable() : 
	//			base("2d_p") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal _2d_pDataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn IndexColumn 
	//		{
	//			get 
	//			{
	//				return this.columnIndex;
	//			}
	//		}
	//           
	//		internal DataColumn T_arrivalColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_arrival;
	//			}
	//		}
	//           
	//		internal DataColumn OriginColumn 
	//		{
	//			get 
	//			{
	//				return this.columnOrigin;
	//			}
	//		}
	//           
	//		internal DataColumn DestColumn 
	//		{
	//			get 
	//			{
	//				return this.columnDest;
	//			}
	//		}
	//           
	//		internal DataColumn AssignmentColumn 
	//		{
	//			get 
	//			{
	//				return this.columnAssignment;
	//			}
	//		}
	//           
	//		internal DataColumn T_end_wait_APColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_end_wait_AP;
	//			}
	//		}
	//           
	//		internal DataColumn T_end_wait_CPColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_end_wait_CP;
	//			}
	//		}
	//           
	//		internal DataColumn T_door_openingColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_door_opening;
	//			}
	//		}
	//           
	//		internal DataColumn T_door_openedColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_door_opened;
	//			}
	//		}
	//           
	//		internal DataColumn T_door_closeColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_door_close;
	//			}
	//		}
	//           
	//		internal DataColumn T_departColumn 
	//		{
	//			get 
	//			{
	//				return this.columnT_depart;
	//			}
	//		}
	//           
	//		internal DataColumn Reg_dirColumn 
	//		{
	//			get 
	//			{
	//				return this.columnReg_dir;
	//			}
	//		}
	//           
	//		internal DataColumn _Reg_car_dirColumn 
	//		{
	//			get 
	//			{
	//				return this.column_Reg_car_dir;
	//			}
	//		}
	//           
	//		internal DataColumn _Re_RegColumn 
	//		{
	//			get 
	//			{
	//				return this.column_Re_Reg;
	//			}
	//		}
	//           
	//		internal DataColumn _T_Re_RegColumn 
	//		{
	//			get 
	//			{
	//				return this.column_T_Re_Reg;
	//			}
	//		}
	//           
	//		internal DataColumn Reg_AP_TColumn 
	//		{
	//			get 
	//			{
	//				return this.columnReg_AP_T;
	//			}
	//		}
	//           
	//		internal DataColumn Reg_CP_TColumn 
	//		{
	//			get 
	//			{
	//				return this.columnReg_CP_T;
	//			}
	//		}
	//           
	//		internal DataColumn Wait_AP_TColumn 
	//		{
	//			get 
	//			{
	//				return this.columnWait_AP_T;
	//			}
	//		}
	//           
	//		internal DataColumn Wait_CP_TColumn 
	//		{
	//			get 
	//			{
	//				return this.columnWait_CP_T;
	//			}
	//		}
	//           
	//		internal DataColumn Srvc_TColumn 
	//		{
	//			get 
	//			{
	//				return this.columnSrvc_T;
	//			}
	//		}
	//           
	//		internal DataColumn RejectionColumn 
	//		{
	//			get 
	//			{
	//				return this.columnRejection;
	//			}
	//		}
	//           
	//		public _2d_pRow this[int index] 
	//		{
	//			get 
	//			{
	//				return ((_2d_pRow)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event _2d_pRowChangeEventHandler _2d_pRowChanged;
	//           
	//		public event _2d_pRowChangeEventHandler _2d_pRowChanging;
	//           
	//		public event _2d_pRowChangeEventHandler _2d_pRowDeleted;
	//           
	//		public event _2d_pRowChangeEventHandler _2d_pRowDeleting;
	//           
	//		public void Add_2d_pRow(_2d_pRow row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public _2d_pRow Add_2d_pRow(
	//			string Index, 
	//			string T_arrival, 
	//			string Origin, 
	//			string Dest, 
	//			string Assignment, 
	//			string T_end_wait_AP, 
	//			string T_end_wait_CP, 
	//			string T_door_opening, 
	//			string T_door_opened, 
	//			string T_door_close, 
	//			string T_depart, 
	//			string Reg_dir, 
	//			string _Reg_car_dir, 
	//			string _Re_Reg, 
	//			string _T_Re_Reg, 
	//			string Reg_AP_T, 
	//			string Reg_CP_T, 
	//			string Wait_AP_T, 
	//			string Wait_CP_T, 
	//			string Srvc_T, 
	//			string Rejection) 
	//		{
	//			_2d_pRow row_2d_pRow = ((_2d_pRow)(this.NewRow()));
	//			row_2d_pRow.ItemArray = new object[] {
	//													 Index,
	//													 T_arrival,
	//													 Origin,
	//													 Dest,
	//													 Assignment,
	//													 T_end_wait_AP,
	//													 T_end_wait_CP,
	//													 T_door_opening,
	//													 T_door_opened,
	//													 T_door_close,
	//													 T_depart,
	//													 Reg_dir,
	//													 _Reg_car_dir,
	//													 _Re_Reg,
	//													 _T_Re_Reg,
	//													 Reg_AP_T,
	//													 Reg_CP_T,
	//													 Wait_AP_T,
	//													 Wait_CP_T,
	//													 Srvc_T,
	//													 Rejection};
	//			this.Rows.Add(row_2d_pRow);
	//			return row_2d_pRow;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			_2d_pDataTable cln = ((_2d_pDataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new _2d_pDataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnIndex = this.Columns["Index"];
	//			this.columnT_arrival = this.Columns["T_arrival"];
	//			this.columnOrigin = this.Columns["Origin"];
	//			this.columnDest = this.Columns["Dest"];
	//			this.columnAssignment = this.Columns["Assignment"];
	//			this.columnT_end_wait_AP = this.Columns["T_end_wait_AP"];
	//			this.columnT_end_wait_CP = this.Columns["T_end_wait_CP"];
	//			this.columnT_door_opening = this.Columns["T_door_opening"];
	//			this.columnT_door_opened = this.Columns["T_door_opened"];
	//			this.columnT_door_close = this.Columns["T_door_close"];
	//			this.columnT_depart = this.Columns["T_depart"];
	//			this.columnReg_dir = this.Columns["Reg_dir"];
	//			this.column_Reg_car_dir = this.Columns["Reg_car-dir"];
	//			this.column_Re_Reg = this.Columns["Re-Reg"];
	//			this.column_T_Re_Reg = this.Columns["T_Re-Reg"];
	//			this.columnReg_AP_T = this.Columns["Reg_AP_T"];
	//			this.columnReg_CP_T = this.Columns["Reg_CP_T"];
	//			this.columnWait_AP_T = this.Columns["Wait_AP_T"];
	//			this.columnWait_CP_T = this.Columns["Wait_CP_T"];
	//			this.columnSrvc_T = this.Columns["Srvc_T"];
	//			this.columnRejection = this.Columns["Rejection"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnIndex = new DataColumn("Index", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnIndex);
	//			this.columnT_arrival = new DataColumn("T_arrival", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_arrival);
	//			this.columnOrigin = new DataColumn("Origin", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnOrigin);
	//			this.columnDest = new DataColumn("Dest", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnDest);
	//			this.columnAssignment = new DataColumn("Assignment", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnAssignment);
	//			this.columnT_end_wait_AP = new DataColumn("T_end_wait_AP", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_end_wait_AP);
	//			this.columnT_end_wait_CP = new DataColumn("T_end_wait_CP", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_end_wait_CP);
	//			this.columnT_door_opening = new DataColumn("T_door_opening", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_door_opening);
	//			this.columnT_door_opened = new DataColumn("T_door_opened", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_door_opened);
	//			this.columnT_door_close = new DataColumn("T_door_close", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_door_close);
	//			this.columnT_depart = new DataColumn("T_depart", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnT_depart);
	//			this.columnReg_dir = new DataColumn("Reg_dir", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnReg_dir);
	//			this.column_Reg_car_dir = new DataColumn("Reg_car-dir", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.column_Reg_car_dir);
	//			this.column_Re_Reg = new DataColumn("Re-Reg", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.column_Re_Reg);
	//			this.column_T_Re_Reg = new DataColumn("T_Re-Reg", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.column_T_Re_Reg);
	//			this.columnReg_AP_T = new DataColumn("Reg_AP_T", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnReg_AP_T);
	//			this.columnReg_CP_T = new DataColumn("Reg_CP_T", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnReg_CP_T);
	//			this.columnWait_AP_T = new DataColumn("Wait_AP_T", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnWait_AP_T);
	//			this.columnWait_CP_T = new DataColumn("Wait_CP_T", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnWait_CP_T);
	//			this.columnSrvc_T = new DataColumn("Srvc_T", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnSrvc_T);
	//			this.columnRejection = new DataColumn("Rejection", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnRejection);
	//		}
	//           
	//		public _2d_pRow New_2d_pRow() 
	//		{
	//			return ((_2d_pRow)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new _2d_pRow(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(_2d_pRow);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this._2d_pRowChanged != null)) 
	//			{
	//				this._2d_pRowChanged(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this._2d_pRowChanging != null)) 
	//			{
	//				this._2d_pRowChanging(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this._2d_pRowDeleted != null)) 
	//			{
	//				this._2d_pRowDeleted(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this._2d_pRowDeleting != null)) 
	//			{
	//				this._2d_pRowDeleting(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void Remove_2d_pRow(_2d_pRow row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class _2d_pRow : System.Data.DataRow 
	//	{
	//           
	//		private _2d_pDataTable table_2d_p;
	//           
	//		internal _2d_pRow(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.table_2d_p = ((_2d_pDataTable)(this.Table));
	//		}
	//           
	//		public string Index 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.IndexColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.IndexColumn] = value;
	//			}
	//		}
	//           
	//		public string T_arrival 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_arrivalColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_arrivalColumn] = value;
	//			}
	//		}
	//           
	//		public string Origin 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.OriginColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.OriginColumn] = value;
	//			}
	//		}
	//           
	//		public string Dest 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.DestColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.DestColumn] = value;
	//			}
	//		}
	//           
	//		public string Assignment 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.AssignmentColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.AssignmentColumn] = value;
	//			}
	//		}
	//           
	//		public string T_end_wait_AP 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_end_wait_APColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_end_wait_APColumn] = value;
	//			}
	//		}
	//           
	//		public string T_end_wait_CP 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_end_wait_CPColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_end_wait_CPColumn] = value;
	//			}
	//		}
	//           
	//		public string T_door_opening 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_door_openingColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_door_openingColumn] = value;
	//			}
	//		}
	//           
	//		public string T_door_opened 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_door_openedColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_door_openedColumn] = value;
	//			}
	//		}
	//           
	//		public string T_door_close 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_door_closeColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_door_closeColumn] = value;
	//			}
	//		}
	//           
	//		public string T_depart 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.T_departColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.T_departColumn] = value;
	//			}
	//		}
	//           
	//		public string Reg_dir 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.Reg_dirColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.Reg_dirColumn] = value;
	//			}
	//		}
	//           
	//		public string _Reg_car_dir 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p._Reg_car_dirColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p._Reg_car_dirColumn] = value;
	//			}
	//		}
	//           
	//		public string _Re_Reg 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p._Re_RegColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p._Re_RegColumn] = value;
	//			}
	//		}
	//           
	//		public string _T_Re_Reg 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p._T_Re_RegColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p._T_Re_RegColumn] = value;
	//			}
	//		}
	//           
	//		public string Reg_AP_T 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.Reg_AP_TColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.Reg_AP_TColumn] = value;
	//			}
	//		}
	//           
	//		public string Reg_CP_T 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.Reg_CP_TColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.Reg_CP_TColumn] = value;
	//			}
	//		}
	//           
	//		public string Wait_AP_T 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.Wait_AP_TColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.Wait_AP_TColumn] = value;
	//			}
	//		}
	//           
	//		public string Wait_CP_T 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.Wait_CP_TColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.Wait_CP_TColumn] = value;
	//			}
	//		}
	//           
	//		public string Srvc_T 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.Srvc_TColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.Srvc_TColumn] = value;
	//			}
	//		}
	//           
	//		public string Rejection 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.table_2d_p.RejectionColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.table_2d_p.RejectionColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsIndexNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.IndexColumn);
	//		}
	//           
	//		public void SetIndexNull() 
	//		{
	//			this[this.table_2d_p.IndexColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_arrivalNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_arrivalColumn);
	//		}
	//           
	//		public void SetT_arrivalNull() 
	//		{
	//			this[this.table_2d_p.T_arrivalColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsOriginNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.OriginColumn);
	//		}
	//           
	//		public void SetOriginNull() 
	//		{
	//			this[this.table_2d_p.OriginColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsDestNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.DestColumn);
	//		}
	//           
	//		public void SetDestNull() 
	//		{
	//			this[this.table_2d_p.DestColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsAssignmentNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.AssignmentColumn);
	//		}
	//           
	//		public void SetAssignmentNull() 
	//		{
	//			this[this.table_2d_p.AssignmentColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_end_wait_APNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_end_wait_APColumn);
	//		}
	//           
	//		public void SetT_end_wait_APNull() 
	//		{
	//			this[this.table_2d_p.T_end_wait_APColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_end_wait_CPNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_end_wait_CPColumn);
	//		}
	//           
	//		public void SetT_end_wait_CPNull() 
	//		{
	//			this[this.table_2d_p.T_end_wait_CPColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_door_openingNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_door_openingColumn);
	//		}
	//           
	//		public void SetT_door_openingNull() 
	//		{
	//			this[this.table_2d_p.T_door_openingColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_door_openedNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_door_openedColumn);
	//		}
	//           
	//		public void SetT_door_openedNull() 
	//		{
	//			this[this.table_2d_p.T_door_openedColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_door_closeNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_door_closeColumn);
	//		}
	//           
	//		public void SetT_door_closeNull() 
	//		{
	//			this[this.table_2d_p.T_door_closeColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsT_departNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.T_departColumn);
	//		}
	//           
	//		public void SetT_departNull() 
	//		{
	//			this[this.table_2d_p.T_departColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsReg_dirNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.Reg_dirColumn);
	//		}
	//           
	//		public void SetReg_dirNull() 
	//		{
	//			this[this.table_2d_p.Reg_dirColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool Is_Reg_car_dirNull() 
	//		{
	//			return this.IsNull(this.table_2d_p._Reg_car_dirColumn);
	//		}
	//           
	//		public void Set_Reg_car_dirNull() 
	//		{
	//			this[this.table_2d_p._Reg_car_dirColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool Is_Re_RegNull() 
	//		{
	//			return this.IsNull(this.table_2d_p._Re_RegColumn);
	//		}
	//           
	//		public void Set_Re_RegNull() 
	//		{
	//			this[this.table_2d_p._Re_RegColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool Is_T_Re_RegNull() 
	//		{
	//			return this.IsNull(this.table_2d_p._T_Re_RegColumn);
	//		}
	//           
	//		public void Set_T_Re_RegNull() 
	//		{
	//			this[this.table_2d_p._T_Re_RegColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsReg_AP_TNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.Reg_AP_TColumn);
	//		}
	//           
	//		public void SetReg_AP_TNull() 
	//		{
	//			this[this.table_2d_p.Reg_AP_TColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsReg_CP_TNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.Reg_CP_TColumn);
	//		}
	//           
	//		public void SetReg_CP_TNull() 
	//		{
	//			this[this.table_2d_p.Reg_CP_TColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsWait_AP_TNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.Wait_AP_TColumn);
	//		}
	//           
	//		public void SetWait_AP_TNull() 
	//		{
	//			this[this.table_2d_p.Wait_AP_TColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsWait_CP_TNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.Wait_CP_TColumn);
	//		}
	//           
	//		public void SetWait_CP_TNull() 
	//		{
	//			this[this.table_2d_p.Wait_CP_TColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsSrvc_TNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.Srvc_TColumn);
	//		}
	//           
	//		public void SetSrvc_TNull() 
	//		{
	//			this[this.table_2d_p.Srvc_TColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsRejectionNull() 
	//		{
	//			return this.IsNull(this.table_2d_p.RejectionColumn);
	//		}
	//           
	//		public void SetRejectionNull() 
	//		{
	//			this[this.table_2d_p.RejectionColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class _2d_pRowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private _2d_pRow eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public _2d_pRowChangeEvent(_2d_pRow row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public _2d_pRow Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class report_item1DataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnitem;
	//           
	//		private DataColumn columnvalue;
	//           
	//		internal report_item1DataTable() : 
	//			base("report_item1") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal report_item1DataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn itemColumn 
	//		{
	//			get 
	//			{
	//				return this.columnitem;
	//			}
	//		}
	//           
	//		internal DataColumn valueColumn 
	//		{
	//			get 
	//			{
	//				return this.columnvalue;
	//			}
	//		}
	//           
	//		public report_item1Row this[int index] 
	//		{
	//			get 
	//			{
	//				return ((report_item1Row)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event report_item1RowChangeEventHandler report_item1RowChanged;
	//           
	//		public event report_item1RowChangeEventHandler report_item1RowChanging;
	//           
	//		public event report_item1RowChangeEventHandler report_item1RowDeleted;
	//           
	//		public event report_item1RowChangeEventHandler report_item1RowDeleting;
	//           
	//		public void Addreport_item1Row(report_item1Row row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public report_item1Row Addreport_item1Row(string item, string value) 
	//		{
	//			report_item1Row rowreport_item1Row = ((report_item1Row)(this.NewRow()));
	//			rowreport_item1Row.ItemArray = new object[] {
	//															item,
	//															value};
	//			this.Rows.Add(rowreport_item1Row);
	//			return rowreport_item1Row;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			report_item1DataTable cln = ((report_item1DataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new report_item1DataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnitem = this.Columns["item"];
	//			this.columnvalue = this.Columns["value"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnitem);
	//			this.columnvalue = new DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnvalue);
	//		}
	//           
	//		public report_item1Row Newreport_item1Row() 
	//		{
	//			return ((report_item1Row)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new report_item1Row(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(report_item1Row);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this.report_item1RowChanged != null)) 
	//			{
	//				this.report_item1RowChanged(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this.report_item1RowChanging != null)) 
	//			{
	//				this.report_item1RowChanging(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this.report_item1RowDeleted != null)) 
	//			{
	//				this.report_item1RowDeleted(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this.report_item1RowDeleting != null)) 
	//			{
	//				this.report_item1RowDeleting(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void Removereport_item1Row(report_item1Row row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class report_item1Row : System.Data.DataRow 
	//	{
	//           
	//		private report_item1DataTable tablereport_item1;
	//           
	//		internal report_item1Row(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.tablereport_item1 = ((report_item1DataTable)(this.Table));
	//		}
	//           
	//		public string item 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablereport_item1.itemColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablereport_item1.itemColumn] = value;
	//			}
	//		}
	//           
	//		public string value 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablereport_item1.valueColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablereport_item1.valueColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsitemNull() 
	//		{
	//			return this.IsNull(this.tablereport_item1.itemColumn);
	//		}
	//           
	//		public void SetitemNull() 
	//		{
	//			this[this.tablereport_item1.itemColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsvalueNull() 
	//		{
	//			return this.IsNull(this.tablereport_item1.valueColumn);
	//		}
	//           
	//		public void SetvalueNull() 
	//		{
	//			this[this.tablereport_item1.valueColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class report_item1RowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private report_item1Row eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public report_item1RowChangeEvent(report_item1Row row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public report_item1Row Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class report_item2DataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnitem;
	//           
	//		private DataColumn columnvalue;
	//           
	//		internal report_item2DataTable() : 
	//			base("report_item2") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal report_item2DataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn itemColumn 
	//		{
	//			get 
	//			{
	//				return this.columnitem;
	//			}
	//		}
	//           
	//		internal DataColumn valueColumn 
	//		{
	//			get 
	//			{
	//				return this.columnvalue;
	//			}
	//		}
	//           
	//		public report_item2Row this[int index] 
	//		{
	//			get 
	//			{
	//				return ((report_item2Row)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event report_item2RowChangeEventHandler report_item2RowChanged;
	//           
	//		public event report_item2RowChangeEventHandler report_item2RowChanging;
	//           
	//		public event report_item2RowChangeEventHandler report_item2RowDeleted;
	//           
	//		public event report_item2RowChangeEventHandler report_item2RowDeleting;
	//           
	//		public void Addreport_item2Row(report_item2Row row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public report_item2Row Addreport_item2Row(string item, string value) 
	//		{
	//			report_item2Row rowreport_item2Row = ((report_item2Row)(this.NewRow()));
	//			rowreport_item2Row.ItemArray = new object[] {
	//															item,
	//															value};
	//			this.Rows.Add(rowreport_item2Row);
	//			return rowreport_item2Row;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			report_item2DataTable cln = ((report_item2DataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new report_item2DataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnitem = this.Columns["item"];
	//			this.columnvalue = this.Columns["value"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnitem);
	//			this.columnvalue = new DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnvalue);
	//		}
	//           
	//		public report_item2Row Newreport_item2Row() 
	//		{
	//			return ((report_item2Row)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new report_item2Row(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(report_item2Row);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this.report_item2RowChanged != null)) 
	//			{
	//				this.report_item2RowChanged(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this.report_item2RowChanging != null)) 
	//			{
	//				this.report_item2RowChanging(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this.report_item2RowDeleted != null)) 
	//			{
	//				this.report_item2RowDeleted(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this.report_item2RowDeleting != null)) 
	//			{
	//				this.report_item2RowDeleting(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void Removereport_item2Row(report_item2Row row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class report_item2Row : System.Data.DataRow 
	//	{
	//           
	//		private report_item2DataTable tablereport_item2;
	//           
	//		internal report_item2Row(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.tablereport_item2 = ((report_item2DataTable)(this.Table));
	//		}
	//           
	//		public string item 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablereport_item2.itemColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablereport_item2.itemColumn] = value;
	//			}
	//		}
	//           
	//		public string value 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablereport_item2.valueColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablereport_item2.valueColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsitemNull() 
	//		{
	//			return this.IsNull(this.tablereport_item2.itemColumn);
	//		}
	//           
	//		public void SetitemNull() 
	//		{
	//			this[this.tablereport_item2.itemColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsvalueNull() 
	//		{
	//			return this.IsNull(this.tablereport_item2.valueColumn);
	//		}
	//           
	//		public void SetvalueNull() 
	//		{
	//			this[this.tablereport_item2.valueColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class report_item2RowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private report_item2Row eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public report_item2RowChangeEvent(report_item2Row row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public report_item2Row Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class svcwaitDataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnitem;
	//           
	//		private DataColumn columnvalue;
	//           
	//		internal svcwaitDataTable() : 
	//			base("svcwait") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal svcwaitDataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn itemColumn 
	//		{
	//			get 
	//			{
	//				return this.columnitem;
	//			}
	//		}
	//           
	//		internal DataColumn valueColumn 
	//		{
	//			get 
	//			{
	//				return this.columnvalue;
	//			}
	//		}
	//           
	//		public svcwaitRow this[int index] 
	//		{
	//			get 
	//			{
	//				return ((svcwaitRow)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event svcwaitRowChangeEventHandler svcwaitRowChanged;
	//           
	//		public event svcwaitRowChangeEventHandler svcwaitRowChanging;
	//           
	//		public event svcwaitRowChangeEventHandler svcwaitRowDeleted;
	//           
	//		public event svcwaitRowChangeEventHandler svcwaitRowDeleting;
	//           
	//		public void AddsvcwaitRow(svcwaitRow row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public svcwaitRow AddsvcwaitRow(string item, System.Double value) 
	//		{
	//			svcwaitRow rowsvcwaitRow = ((svcwaitRow)(this.NewRow()));
	//			rowsvcwaitRow.ItemArray = new object[] {
	//													   item,
	//													   value};
	//			this.Rows.Add(rowsvcwaitRow);
	//			return rowsvcwaitRow;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			svcwaitDataTable cln = ((svcwaitDataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new svcwaitDataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnitem = this.Columns["item"];
	//			this.columnvalue = this.Columns["value"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnitem);
	//			this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnvalue);
	//		}
	//           
	//		public svcwaitRow NewsvcwaitRow() 
	//		{
	//			return ((svcwaitRow)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new svcwaitRow(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(svcwaitRow);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this.svcwaitRowChanged != null)) 
	//			{
	//				this.svcwaitRowChanged(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this.svcwaitRowChanging != null)) 
	//			{
	//				this.svcwaitRowChanging(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this.svcwaitRowDeleted != null)) 
	//			{
	//				this.svcwaitRowDeleted(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this.svcwaitRowDeleting != null)) 
	//			{
	//				this.svcwaitRowDeleting(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void RemovesvcwaitRow(svcwaitRow row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class svcwaitRow : System.Data.DataRow 
	//	{
	//           
	//		private svcwaitDataTable tablesvcwait;
	//           
	//		internal svcwaitRow(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.tablesvcwait = ((svcwaitDataTable)(this.Table));
	//		}
	//           
	//		public string item 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablesvcwait.itemColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablesvcwait.itemColumn] = value;
	//			}
	//		}
	//           
	//		public System.Double value 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((System.Double)(this[this.tablesvcwait.valueColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablesvcwait.valueColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsitemNull() 
	//		{
	//			return this.IsNull(this.tablesvcwait.itemColumn);
	//		}
	//           
	//		public void SetitemNull() 
	//		{
	//			this[this.tablesvcwait.itemColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsvalueNull() 
	//		{
	//			return this.IsNull(this.tablesvcwait.valueColumn);
	//		}
	//           
	//		public void SetvalueNull() 
	//		{
	//			this[this.tablesvcwait.valueColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class svcwaitRowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private svcwaitRow eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public svcwaitRowChangeEvent(svcwaitRow row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public svcwaitRow Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class waitDataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnitem;
	//           
	//		private DataColumn columnvalue;
	//           
	//		internal waitDataTable() : 
	//			base("wait") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal waitDataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn itemColumn 
	//		{
	//			get 
	//			{
	//				return this.columnitem;
	//			}
	//		}
	//           
	//		internal DataColumn valueColumn 
	//		{
	//			get 
	//			{
	//				return this.columnvalue;
	//			}
	//		}
	//           
	//		public waitRow this[int index] 
	//		{
	//			get 
	//			{
	//				return ((waitRow)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event waitRowChangeEventHandler waitRowChanged;
	//           
	//		public event waitRowChangeEventHandler waitRowChanging;
	//           
	//		public event waitRowChangeEventHandler waitRowDeleted;
	//           
	//		public event waitRowChangeEventHandler waitRowDeleting;
	//           
	//		public void AddwaitRow(waitRow row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public waitRow AddwaitRow(string item, System.Double value) 
	//		{
	//			waitRow rowwaitRow = ((waitRow)(this.NewRow()));
	//			rowwaitRow.ItemArray = new object[] {
	//													item,
	//													value};
	//			this.Rows.Add(rowwaitRow);
	//			return rowwaitRow;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			waitDataTable cln = ((waitDataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new waitDataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnitem = this.Columns["item"];
	//			this.columnvalue = this.Columns["value"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnitem);
	//			this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnvalue);
	//		}
	//           
	//		public waitRow NewwaitRow() 
	//		{
	//			return ((waitRow)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new waitRow(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(waitRow);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this.waitRowChanged != null)) 
	//			{
	//				this.waitRowChanged(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this.waitRowChanging != null)) 
	//			{
	//				this.waitRowChanging(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this.waitRowDeleted != null)) 
	//			{
	//				this.waitRowDeleted(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this.waitRowDeleting != null)) 
	//			{
	//				this.waitRowDeleting(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void RemovewaitRow(waitRow row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class waitRow : System.Data.DataRow 
	//	{
	//           
	//		private waitDataTable tablewait;
	//           
	//		internal waitRow(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.tablewait = ((waitDataTable)(this.Table));
	//		}
	//           
	//		public string item 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablewait.itemColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablewait.itemColumn] = value;
	//			}
	//		}
	//           
	//		public System.Double value 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((System.Double)(this[this.tablewait.valueColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablewait.valueColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsitemNull() 
	//		{
	//			return this.IsNull(this.tablewait.itemColumn);
	//		}
	//           
	//		public void SetitemNull() 
	//		{
	//			this[this.tablewait.itemColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsvalueNull() 
	//		{
	//			return this.IsNull(this.tablewait.valueColumn);
	//		}
	//           
	//		public void SetvalueNull() 
	//		{
	//			this[this.tablewait.valueColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class waitRowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private waitRow eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public waitRowChangeEvent(waitRow row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public waitRow Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class svcDataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columnitem;
	//           
	//		private DataColumn columnvalue;
	//           
	//		internal svcDataTable() : 
	//			base("svc") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal svcDataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn itemColumn 
	//		{
	//			get 
	//			{
	//				return this.columnitem;
	//			}
	//		}
	//           
	//		internal DataColumn valueColumn 
	//		{
	//			get 
	//			{
	//				return this.columnvalue;
	//			}
	//		}
	//           
	//		public svcRow this[int index] 
	//		{
	//			get 
	//			{
	//				return ((svcRow)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event svcRowChangeEventHandler svcRowChanged;
	//           
	//		public event svcRowChangeEventHandler svcRowChanging;
	//           
	//		public event svcRowChangeEventHandler svcRowDeleted;
	//           
	//		public event svcRowChangeEventHandler svcRowDeleting;
	//           
	//		public void AddsvcRow(svcRow row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public svcRow AddsvcRow(string item, System.Double value) 
	//		{
	//			svcRow rowsvcRow = ((svcRow)(this.NewRow()));
	//			rowsvcRow.ItemArray = new object[] {
	//												   item,
	//												   value};
	//			this.Rows.Add(rowsvcRow);
	//			return rowsvcRow;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			svcDataTable cln = ((svcDataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new svcDataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columnitem = this.Columns["item"];
	//			this.columnvalue = this.Columns["value"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnitem);
	//			this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnvalue);
	//		}
	//           
	//		public svcRow NewsvcRow() 
	//		{
	//			return ((svcRow)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new svcRow(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(svcRow);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this.svcRowChanged != null)) 
	//			{
	//				this.svcRowChanged(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this.svcRowChanging != null)) 
	//			{
	//				this.svcRowChanging(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this.svcRowDeleted != null)) 
	//			{
	//				this.svcRowDeleted(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this.svcRowDeleting != null)) 
	//			{
	//				this.svcRowDeleting(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void RemovesvcRow(svcRow row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class svcRow : System.Data.DataRow 
	//	{
	//           
	//		private svcDataTable tablesvc;
	//           
	//		internal svcRow(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.tablesvc = ((svcDataTable)(this.Table));
	//		}
	//           
	//		public string item 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((string)(this[this.tablesvc.itemColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablesvc.itemColumn] = value;
	//			}
	//		}
	//           
	//		public System.Double value 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((System.Double)(this[this.tablesvc.valueColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablesvc.valueColumn] = value;
	//			}
	//		}
	//           
	//		public bool IsitemNull() 
	//		{
	//			return this.IsNull(this.tablesvc.itemColumn);
	//		}
	//           
	//		public void SetitemNull() 
	//		{
	//			this[this.tablesvc.itemColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsvalueNull() 
	//		{
	//			return this.IsNull(this.tablesvc.valueColumn);
	//		}
	//           
	//		public void SetvalueNull() 
	//		{
	//			this[this.tablesvc.valueColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class svcRowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private svcRow eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public svcRowChangeEvent(svcRow row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public svcRow Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//}


}
namespace COGSD
{
	[Serializable(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Diagnostics.DebuggerStepThrough(), System.ComponentModel.ToolboxItem(true)]
	public class dsReport : DataSet
	{
        
		private _2d_cDataTable table_2d_c;
        
		private _2d_pDataTable table_2d_p;
        
		private report_item1DataTable tablereport_item1;
        
		private report_item2DataTable tablereport_item2;
        
		private svcwaitDataTable tablesvcwait;
        
		private waitDataTable tablewait;
        
		private svcDataTable tablesvc;
        
		public dsReport() 
		{
			this.InitClass();
			System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			this.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
        
		protected dsReport(SerializationInfo info, StreamingContext context) 
		{
			string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
			if ((strSchema != null)) 
			{
				DataSet ds = new DataSet();
				ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
				if ((ds.Tables["2d_c"] != null)) 
				{
					this.Tables.Add(new _2d_cDataTable(ds.Tables["2d_c"]));
				}
				if ((ds.Tables["2d_p"] != null)) 
				{
					this.Tables.Add(new _2d_pDataTable(ds.Tables["2d_p"]));
				}
				if ((ds.Tables["report_item1"] != null)) 
				{
					this.Tables.Add(new report_item1DataTable(ds.Tables["report_item1"]));
				}
				if ((ds.Tables["report_item2"] != null)) 
				{
					this.Tables.Add(new report_item2DataTable(ds.Tables["report_item2"]));
				}
				if ((ds.Tables["svcwait"] != null)) 
				{
					this.Tables.Add(new svcwaitDataTable(ds.Tables["svcwait"]));
				}
				if ((ds.Tables["wait"] != null)) 
				{
					this.Tables.Add(new waitDataTable(ds.Tables["wait"]));
				}
				if ((ds.Tables["svc"] != null)) 
				{
					this.Tables.Add(new svcDataTable(ds.Tables["svc"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else 
			{
				this.InitClass();
			}
			this.GetSerializationData(info, context);
			System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			this.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public _2d_cDataTable _2d_c 
		{
			get 
			{
				return this.table_2d_c;
			}
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public _2d_pDataTable _2d_p 
		{
			get 
			{
				return this.table_2d_p;
			}
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public report_item1DataTable report_item1 
		{
			get 
			{
				return this.tablereport_item1;
			}
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public report_item2DataTable report_item2 
		{
			get 
			{
				return this.tablereport_item2;
			}
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public svcwaitDataTable svcwait 
		{
			get 
			{
				return this.tablesvcwait;
			}
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public waitDataTable wait 
		{
			get 
			{
				return this.tablewait;
			}
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public svcDataTable svc 
		{
			get 
			{
				return this.tablesvc;
			}
		}
        
		public override DataSet Clone() 
		{
			dsReport cln = ((dsReport)(base.Clone()));
			cln.InitVars();
			return cln;
		}
        
		protected override bool ShouldSerializeTables() 
		{
			return false;
		}
        
		protected override bool ShouldSerializeRelations() 
		{
			return false;
		}
        
		protected override void ReadXmlSerializable(XmlReader reader) 
		{
			this.Reset();
			DataSet ds = new DataSet();
			ds.ReadXml(reader);
			if ((ds.Tables["2d_c"] != null)) 
			{
				this.Tables.Add(new _2d_cDataTable(ds.Tables["2d_c"]));
			}
			if ((ds.Tables["2d_p"] != null)) 
			{
				this.Tables.Add(new _2d_pDataTable(ds.Tables["2d_p"]));
			}
			if ((ds.Tables["report_item1"] != null)) 
			{
				this.Tables.Add(new report_item1DataTable(ds.Tables["report_item1"]));
			}
			if ((ds.Tables["report_item2"] != null)) 
			{
				this.Tables.Add(new report_item2DataTable(ds.Tables["report_item2"]));
			}
			if ((ds.Tables["svcwait"] != null)) 
			{
				this.Tables.Add(new svcwaitDataTable(ds.Tables["svcwait"]));
			}
			if ((ds.Tables["wait"] != null)) 
			{
				this.Tables.Add(new waitDataTable(ds.Tables["wait"]));
			}
			if ((ds.Tables["svc"] != null)) 
			{
				this.Tables.Add(new svcDataTable(ds.Tables["svc"]));
			}
			this.DataSetName = ds.DataSetName;
			this.Prefix = ds.Prefix;
			this.Namespace = ds.Namespace;
			this.Locale = ds.Locale;
			this.CaseSensitive = ds.CaseSensitive;
			this.EnforceConstraints = ds.EnforceConstraints;
			this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
			this.InitVars();
		}
        
		protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() 
		{
			System.IO.MemoryStream stream = new System.IO.MemoryStream();
			this.WriteXmlSchema(new XmlTextWriter(stream, null));
			stream.Position = 0;
			return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
		}
        
		internal void InitVars() 
		{
			this.table_2d_c = ((_2d_cDataTable)(this.Tables["2d_c"]));
			if ((this.table_2d_c != null)) 
			{
				this.table_2d_c.InitVars();
			}
			this.table_2d_p = ((_2d_pDataTable)(this.Tables["2d_p"]));
			if ((this.table_2d_p != null)) 
			{
				this.table_2d_p.InitVars();
			}
			this.tablereport_item1 = ((report_item1DataTable)(this.Tables["report_item1"]));
			if ((this.tablereport_item1 != null)) 
			{
				this.tablereport_item1.InitVars();
			}
			this.tablereport_item2 = ((report_item2DataTable)(this.Tables["report_item2"]));
			if ((this.tablereport_item2 != null)) 
			{
				this.tablereport_item2.InitVars();
			}
			this.tablesvcwait = ((svcwaitDataTable)(this.Tables["svcwait"]));
			if ((this.tablesvcwait != null)) 
			{
				this.tablesvcwait.InitVars();
			}
			this.tablewait = ((waitDataTable)(this.Tables["wait"]));
			if ((this.tablewait != null)) 
			{
				this.tablewait.InitVars();
			}
			this.tablesvc = ((svcDataTable)(this.Tables["svc"]));
			if ((this.tablesvc != null)) 
			{
				this.tablesvc.InitVars();
			}
		}
        
		private void InitClass() 
		{
			this.DataSetName = "dsReport";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/dsReport.xsd";
			this.Locale = new System.Globalization.CultureInfo("en-US");
			this.CaseSensitive = false;
			this.EnforceConstraints = true;
			this.table_2d_c = new _2d_cDataTable();
			this.Tables.Add(this.table_2d_c);
			this.table_2d_p = new _2d_pDataTable();
			this.Tables.Add(this.table_2d_p);
			this.tablereport_item1 = new report_item1DataTable();
			this.Tables.Add(this.tablereport_item1);
			this.tablereport_item2 = new report_item2DataTable();
			this.Tables.Add(this.tablereport_item2);
			this.tablesvcwait = new svcwaitDataTable();
			this.Tables.Add(this.tablesvcwait);
			this.tablewait = new waitDataTable();
			this.Tables.Add(this.tablewait);
			this.tablesvc = new svcDataTable();
			this.Tables.Add(this.tablesvc);
		}
        
		private bool ShouldSerialize_2d_c() 
		{
			return false;
		}
        
		private bool ShouldSerialize_2d_p() 
		{
			return false;
		}
        
		private bool ShouldSerializereport_item1() 
		{
			return false;
		}
        
		private bool ShouldSerializereport_item2() 
		{
			return false;
		}
        
		private bool ShouldSerializesvcwait() 
		{
			return false;
		}
        
		private bool ShouldSerializewait() 
		{
			return false;
		}
        
		private bool ShouldSerializesvc() 
		{
			return false;
		}
        
		private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) 
		{
			if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) 
			{
				this.InitVars();
			}
		}
        
		public delegate void _2d_cRowChangeEventHandler(object sender, _2d_cRowChangeEvent e);
        
		public delegate void _2d_pRowChangeEventHandler(object sender, _2d_pRowChangeEvent e);
        
		public delegate void report_item1RowChangeEventHandler(object sender, report_item1RowChangeEvent e);
        
		public delegate void report_item2RowChangeEventHandler(object sender, report_item2RowChangeEvent e);
        
		public delegate void svcwaitRowChangeEventHandler(object sender, svcwaitRowChangeEvent e);
        
		public delegate void waitRowChangeEventHandler(object sender, waitRowChangeEvent e);
        
		public delegate void svcRowChangeEventHandler(object sender, svcRowChangeEvent e);
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class _2d_cDataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnCar;
            
			private DataColumn columnType;
            
			private DataColumn columnT_begin_run;
            
			private DataColumn columnT_decel;
            
			private DataColumn columnT_reach_AP;
            
			private DataColumn columnT_end_run;
            
			private DataColumn columnOrigin;
            
			private DataColumn columnDest;
            
			private DataColumn columnPax_in_run;
            
			private DataColumn columnChanged_target;
            
			private DataColumn columnT_opened;
            
			private DataColumn columnDeboard;
            
			private DataColumn columnBoard;
            
			private DataColumn columnT_dwelled;
            
			private DataColumn columnExtra_dwell;
            
			private DataColumn columnT_closed;
            
			private DataColumn columnT_released;
            
			internal _2d_cDataTable() : 
				base("2d_c") 
			{
				this.InitClass();
			}
            
			internal _2d_cDataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn CarColumn 
			{
				get 
				{
					return this.columnCar;
				}
			}
            
			internal DataColumn TypeColumn 
			{
				get 
				{
					return this.columnType;
				}
			}
            
			internal DataColumn T_begin_runColumn 
			{
				get 
				{
					return this.columnT_begin_run;
				}
			}
            
			internal DataColumn T_decelColumn 
			{
				get 
				{
					return this.columnT_decel;
				}
			}
            
			internal DataColumn T_reach_APColumn 
			{
				get 
				{
					return this.columnT_reach_AP;
				}
			}
            
			internal DataColumn T_end_runColumn 
			{
				get 
				{
					return this.columnT_end_run;
				}
			}
            
			internal DataColumn OriginColumn 
			{
				get 
				{
					return this.columnOrigin;
				}
			}
            
			internal DataColumn DestColumn 
			{
				get 
				{
					return this.columnDest;
				}
			}
            
			internal DataColumn Pax_in_runColumn 
			{
				get 
				{
					return this.columnPax_in_run;
				}
			}
            
			internal DataColumn Changed_targetColumn 
			{
				get 
				{
					return this.columnChanged_target;
				}
			}
            
			internal DataColumn T_openedColumn 
			{
				get 
				{
					return this.columnT_opened;
				}
			}
            
			internal DataColumn DeboardColumn 
			{
				get 
				{
					return this.columnDeboard;
				}
			}
            
			internal DataColumn BoardColumn 
			{
				get 
				{
					return this.columnBoard;
				}
			}
            
			internal DataColumn T_dwelledColumn 
			{
				get 
				{
					return this.columnT_dwelled;
				}
			}
            
			internal DataColumn Extra_dwellColumn 
			{
				get 
				{
					return this.columnExtra_dwell;
				}
			}
            
			internal DataColumn T_closedColumn 
			{
				get 
				{
					return this.columnT_closed;
				}
			}
            
			internal DataColumn T_releasedColumn 
			{
				get 
				{
					return this.columnT_released;
				}
			}
            
			public _2d_cRow this[int index] 
			{
				get 
				{
					return ((_2d_cRow)(this.Rows[index]));
				}
			}
            
			public event _2d_cRowChangeEventHandler _2d_cRowChanged;
            
			public event _2d_cRowChangeEventHandler _2d_cRowChanging;
            
			public event _2d_cRowChangeEventHandler _2d_cRowDeleted;
            
			public event _2d_cRowChangeEventHandler _2d_cRowDeleting;
            
			public void Add_2d_cRow(_2d_cRow row) 
			{
				this.Rows.Add(row);
			}
            
			public _2d_cRow Add_2d_cRow(
				string Car, 
				string Type, 
				string T_begin_run, 
				string T_decel, 
				string T_reach_AP, 
				string T_end_run, 
				string Origin, 
				string Dest, 
				string Pax_in_run, 
				string Changed_target, 
				string T_opened, 
				string Deboard, 
				string Board, 
				string T_dwelled, 
				string Extra_dwell, 
				string T_closed, 
				string T_released) 
			{
				_2d_cRow row_2d_cRow = ((_2d_cRow)(this.NewRow()));
				row_2d_cRow.ItemArray = new object[] {
														 Car,
														 Type,
														 T_begin_run,
														 T_decel,
														 T_reach_AP,
														 T_end_run,
														 Origin,
														 Dest,
														 Pax_in_run,
														 Changed_target,
														 T_opened,
														 Deboard,
														 Board,
														 T_dwelled,
														 Extra_dwell,
														 T_closed,
														 T_released};
				this.Rows.Add(row_2d_cRow);
				return row_2d_cRow;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				_2d_cDataTable cln = ((_2d_cDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new _2d_cDataTable();
			}
            
			internal void InitVars() 
			{
				this.columnCar = this.Columns["Car"];
				this.columnType = this.Columns["Type"];
				this.columnT_begin_run = this.Columns["T_begin_run"];
				this.columnT_decel = this.Columns["T_decel"];
				this.columnT_reach_AP = this.Columns["T_reach_AP"];
				this.columnT_end_run = this.Columns["T_end_run"];
				this.columnOrigin = this.Columns["Origin"];
				this.columnDest = this.Columns["Dest"];
				this.columnPax_in_run = this.Columns["Pax_in_run"];
				this.columnChanged_target = this.Columns["Changed_target"];
				this.columnT_opened = this.Columns["T_opened"];
				this.columnDeboard = this.Columns["Deboard"];
				this.columnBoard = this.Columns["Board"];
				this.columnT_dwelled = this.Columns["T_dwelled"];
				this.columnExtra_dwell = this.Columns["Extra_dwell"];
				this.columnT_closed = this.Columns["T_closed"];
				this.columnT_released = this.Columns["T released"];
			}
            
			private void InitClass() 
			{
				this.columnCar = new DataColumn("Car", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnCar);
				this.columnType = new DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnType);
				this.columnT_begin_run = new DataColumn("T_begin_run", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_begin_run);
				this.columnT_decel = new DataColumn("T_decel", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_decel);
				this.columnT_reach_AP = new DataColumn("T_reach_AP", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_reach_AP);
				this.columnT_end_run = new DataColumn("T_end_run", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_end_run);
				this.columnOrigin = new DataColumn("Origin", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnOrigin);
				this.columnDest = new DataColumn("Dest", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnDest);
				this.columnPax_in_run = new DataColumn("Pax_in_run", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnPax_in_run);
				this.columnChanged_target = new DataColumn("Changed_target", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnChanged_target);
				this.columnT_opened = new DataColumn("T_opened", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_opened);
				this.columnDeboard = new DataColumn("Deboard", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnDeboard);
				this.columnBoard = new DataColumn("Board", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnBoard);
				this.columnT_dwelled = new DataColumn("T_dwelled", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_dwelled);
				this.columnExtra_dwell = new DataColumn("Extra_dwell", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnExtra_dwell);
				this.columnT_closed = new DataColumn("T_closed", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_closed);
				this.columnT_released = new DataColumn("T released", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_released);
			}
            
			public _2d_cRow New_2d_cRow() 
			{
				return ((_2d_cRow)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new _2d_cRow(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(_2d_cRow);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this._2d_cRowChanged != null)) 
				{
					this._2d_cRowChanged(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this._2d_cRowChanging != null)) 
				{
					this._2d_cRowChanging(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this._2d_cRowDeleted != null)) 
				{
					this._2d_cRowDeleted(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this._2d_cRowDeleting != null)) 
				{
					this._2d_cRowDeleting(this, new _2d_cRowChangeEvent(((_2d_cRow)(e.Row)), e.Action));
				}
			}
            
			public void Remove_2d_cRow(_2d_cRow row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class _2d_cRow : System.Data.DataRow 
		{
            
			private _2d_cDataTable table_2d_c;
            
			internal _2d_cRow(DataRowBuilder rb) : 
				base(rb) 
			{
				this.table_2d_c = ((_2d_cDataTable)(this.Table));
			}
            
			public string Car 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.CarColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.CarColumn] = value;
				}
			}
            
			public string Type 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.TypeColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.TypeColumn] = value;
				}
			}
            
			public string T_begin_run 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_begin_runColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_begin_runColumn] = value;
				}
			}
            
			public string T_decel 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_decelColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_decelColumn] = value;
				}
			}
            
			public string T_reach_AP 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_reach_APColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_reach_APColumn] = value;
				}
			}
            
			public string T_end_run 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_end_runColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_end_runColumn] = value;
				}
			}
            
			public string Origin 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.OriginColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.OriginColumn] = value;
				}
			}
            
			public string Dest 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.DestColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.DestColumn] = value;
				}
			}
            
			public string Pax_in_run 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.Pax_in_runColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.Pax_in_runColumn] = value;
				}
			}
            
			public string Changed_target 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.Changed_targetColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.Changed_targetColumn] = value;
				}
			}
            
			public string T_opened 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_openedColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_openedColumn] = value;
				}
			}
            
			public string Deboard 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.DeboardColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.DeboardColumn] = value;
				}
			}
            
			public string Board 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.BoardColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.BoardColumn] = value;
				}
			}
            
			public string T_dwelled 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_dwelledColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_dwelledColumn] = value;
				}
			}
            
			public string Extra_dwell 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.Extra_dwellColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.Extra_dwellColumn] = value;
				}
			}
            
			public string T_closed 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_closedColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_closedColumn] = value;
				}
			}
            
			public string T_released 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_c.T_releasedColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_c.T_releasedColumn] = value;
				}
			}
            
			public bool IsCarNull() 
			{
				return this.IsNull(this.table_2d_c.CarColumn);
			}
            
			public void SetCarNull() 
			{
				this[this.table_2d_c.CarColumn] = System.Convert.DBNull;
			}
            
			public bool IsTypeNull() 
			{
				return this.IsNull(this.table_2d_c.TypeColumn);
			}
            
			public void SetTypeNull() 
			{
				this[this.table_2d_c.TypeColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_begin_runNull() 
			{
				return this.IsNull(this.table_2d_c.T_begin_runColumn);
			}
            
			public void SetT_begin_runNull() 
			{
				this[this.table_2d_c.T_begin_runColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_decelNull() 
			{
				return this.IsNull(this.table_2d_c.T_decelColumn);
			}
            
			public void SetT_decelNull() 
			{
				this[this.table_2d_c.T_decelColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_reach_APNull() 
			{
				return this.IsNull(this.table_2d_c.T_reach_APColumn);
			}
            
			public void SetT_reach_APNull() 
			{
				this[this.table_2d_c.T_reach_APColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_end_runNull() 
			{
				return this.IsNull(this.table_2d_c.T_end_runColumn);
			}
            
			public void SetT_end_runNull() 
			{
				this[this.table_2d_c.T_end_runColumn] = System.Convert.DBNull;
			}
            
			public bool IsOriginNull() 
			{
				return this.IsNull(this.table_2d_c.OriginColumn);
			}
            
			public void SetOriginNull() 
			{
				this[this.table_2d_c.OriginColumn] = System.Convert.DBNull;
			}
            
			public bool IsDestNull() 
			{
				return this.IsNull(this.table_2d_c.DestColumn);
			}
            
			public void SetDestNull() 
			{
				this[this.table_2d_c.DestColumn] = System.Convert.DBNull;
			}
            
			public bool IsPax_in_runNull() 
			{
				return this.IsNull(this.table_2d_c.Pax_in_runColumn);
			}
            
			public void SetPax_in_runNull() 
			{
				this[this.table_2d_c.Pax_in_runColumn] = System.Convert.DBNull;
			}
            
			public bool IsChanged_targetNull() 
			{
				return this.IsNull(this.table_2d_c.Changed_targetColumn);
			}
            
			public void SetChanged_targetNull() 
			{
				this[this.table_2d_c.Changed_targetColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_openedNull() 
			{
				return this.IsNull(this.table_2d_c.T_openedColumn);
			}
            
			public void SetT_openedNull() 
			{
				this[this.table_2d_c.T_openedColumn] = System.Convert.DBNull;
			}
            
			public bool IsDeboardNull() 
			{
				return this.IsNull(this.table_2d_c.DeboardColumn);
			}
            
			public void SetDeboardNull() 
			{
				this[this.table_2d_c.DeboardColumn] = System.Convert.DBNull;
			}
            
			public bool IsBoardNull() 
			{
				return this.IsNull(this.table_2d_c.BoardColumn);
			}
            
			public void SetBoardNull() 
			{
				this[this.table_2d_c.BoardColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_dwelledNull() 
			{
				return this.IsNull(this.table_2d_c.T_dwelledColumn);
			}
            
			public void SetT_dwelledNull() 
			{
				this[this.table_2d_c.T_dwelledColumn] = System.Convert.DBNull;
			}
            
			public bool IsExtra_dwellNull() 
			{
				return this.IsNull(this.table_2d_c.Extra_dwellColumn);
			}
            
			public void SetExtra_dwellNull() 
			{
				this[this.table_2d_c.Extra_dwellColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_closedNull() 
			{
				return this.IsNull(this.table_2d_c.T_closedColumn);
			}
            
			public void SetT_closedNull() 
			{
				this[this.table_2d_c.T_closedColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_releasedNull() 
			{
				return this.IsNull(this.table_2d_c.T_releasedColumn);
			}
            
			public void SetT_releasedNull() 
			{
				this[this.table_2d_c.T_releasedColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class _2d_cRowChangeEvent : System.EventArgs 
		{
            
			private _2d_cRow eventRow;
            
			private DataRowAction eventAction;
            
			public _2d_cRowChangeEvent(_2d_cRow row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public _2d_cRow Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class _2d_pDataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnIndex;
            
			private DataColumn columnT_arrival;
            
			private DataColumn columnOrigin;
            
			private DataColumn columnDest;
            
			private DataColumn columnAssignment;
            
			private DataColumn columnT_end_wait_AP;
            
			private DataColumn columnT_end_wait_CP;
            
			private DataColumn columnT_door_opening;
            
			private DataColumn columnT_door_opened;
            
			private DataColumn columnT_door_close;
            
			private DataColumn columnT_depart;
            
			private DataColumn columnReg_dir;
            
			private DataColumn column_Reg_car_dir;
            
			private DataColumn column_Re_Reg;
            
			private DataColumn column_T_Re_Reg;
            
			private DataColumn columnReg_AP_T;
            
			private DataColumn columnReg_CP_T;
            
			private DataColumn columnWait_AP_T;
            
			private DataColumn columnWait_CP_T;
            
			private DataColumn columnSrvc_T;
            
			private DataColumn columnRejection;
            
			internal _2d_pDataTable() : 
				base("2d_p") 
			{
				this.InitClass();
			}
            
			internal _2d_pDataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn IndexColumn 
			{
				get 
				{
					return this.columnIndex;
				}
			}
            
			internal DataColumn T_arrivalColumn 
			{
				get 
				{
					return this.columnT_arrival;
				}
			}
            
			internal DataColumn OriginColumn 
			{
				get 
				{
					return this.columnOrigin;
				}
			}
            
			internal DataColumn DestColumn 
			{
				get 
				{
					return this.columnDest;
				}
			}
            
			internal DataColumn AssignmentColumn 
			{
				get 
				{
					return this.columnAssignment;
				}
			}
            
			internal DataColumn T_end_wait_APColumn 
			{
				get 
				{
					return this.columnT_end_wait_AP;
				}
			}
            
			internal DataColumn T_end_wait_CPColumn 
			{
				get 
				{
					return this.columnT_end_wait_CP;
				}
			}
            
			internal DataColumn T_door_openingColumn 
			{
				get 
				{
					return this.columnT_door_opening;
				}
			}
            
			internal DataColumn T_door_openedColumn 
			{
				get 
				{
					return this.columnT_door_opened;
				}
			}
            
			internal DataColumn T_door_closeColumn 
			{
				get 
				{
					return this.columnT_door_close;
				}
			}
            
			internal DataColumn T_departColumn 
			{
				get 
				{
					return this.columnT_depart;
				}
			}
            
			internal DataColumn Reg_dirColumn 
			{
				get 
				{
					return this.columnReg_dir;
				}
			}
            
			internal DataColumn _Reg_car_dirColumn 
			{
				get 
				{
					return this.column_Reg_car_dir;
				}
			}
            
			internal DataColumn _Re_RegColumn 
			{
				get 
				{
					return this.column_Re_Reg;
				}
			}
            
			internal DataColumn _T_Re_RegColumn 
			{
				get 
				{
					return this.column_T_Re_Reg;
				}
			}
            
			internal DataColumn Reg_AP_TColumn 
			{
				get 
				{
					return this.columnReg_AP_T;
				}
			}
            
			internal DataColumn Reg_CP_TColumn 
			{
				get 
				{
					return this.columnReg_CP_T;
				}
			}
            
			internal DataColumn Wait_AP_TColumn 
			{
				get 
				{
					return this.columnWait_AP_T;
				}
			}
            
			internal DataColumn Wait_CP_TColumn 
			{
				get 
				{
					return this.columnWait_CP_T;
				}
			}
            
			internal DataColumn Srvc_TColumn 
			{
				get 
				{
					return this.columnSrvc_T;
				}
			}
            
			internal DataColumn RejectionColumn 
			{
				get 
				{
					return this.columnRejection;
				}
			}
            
			public _2d_pRow this[int index] 
			{
				get 
				{
					return ((_2d_pRow)(this.Rows[index]));
				}
			}
            
			public event _2d_pRowChangeEventHandler _2d_pRowChanged;
            
			public event _2d_pRowChangeEventHandler _2d_pRowChanging;
            
			public event _2d_pRowChangeEventHandler _2d_pRowDeleted;
            
			public event _2d_pRowChangeEventHandler _2d_pRowDeleting;
            
			public void Add_2d_pRow(_2d_pRow row) 
			{
				this.Rows.Add(row);
			}
            
			public _2d_pRow Add_2d_pRow(
				string Index, 
				string T_arrival, 
				string Origin, 
				string Dest, 
				string Assignment, 
				string T_end_wait_AP, 
				string T_end_wait_CP, 
				string T_door_opening, 
				string T_door_opened, 
				string T_door_close, 
				string T_depart, 
				string Reg_dir, 
				string _Reg_car_dir, 
				string _Re_Reg, 
				string _T_Re_Reg, 
				string Reg_AP_T, 
				string Reg_CP_T, 
				string Wait_AP_T, 
				string Wait_CP_T, 
				string Srvc_T, 
				string Rejection) 
			{
				_2d_pRow row_2d_pRow = ((_2d_pRow)(this.NewRow()));
				row_2d_pRow.ItemArray = new object[] {
														 Index,
														 T_arrival,
														 Origin,
														 Dest,
														 Assignment,
														 T_end_wait_AP,
														 T_end_wait_CP,
														 T_door_opening,
														 T_door_opened,
														 T_door_close,
														 T_depart,
														 Reg_dir,
														 _Reg_car_dir,
														 _Re_Reg,
														 _T_Re_Reg,
														 Reg_AP_T,
														 Reg_CP_T,
														 Wait_AP_T,
														 Wait_CP_T,
														 Srvc_T,
														 Rejection};
				this.Rows.Add(row_2d_pRow);
				return row_2d_pRow;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				_2d_pDataTable cln = ((_2d_pDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new _2d_pDataTable();
			}
            
			internal void InitVars() 
			{
				this.columnIndex = this.Columns["Index"];
				this.columnT_arrival = this.Columns["T_arrival"];
				this.columnOrigin = this.Columns["Origin"];
				this.columnDest = this.Columns["Dest"];
				this.columnAssignment = this.Columns["Assignment"];
				this.columnT_end_wait_AP = this.Columns["T_end_wait_AP"];
				this.columnT_end_wait_CP = this.Columns["T_end_wait_CP"];
				this.columnT_door_opening = this.Columns["T_door_opening"];
				this.columnT_door_opened = this.Columns["T_door_opened"];
				this.columnT_door_close = this.Columns["T_door_close"];
				this.columnT_depart = this.Columns["T_depart"];
				this.columnReg_dir = this.Columns["Reg_dir"];
				this.column_Reg_car_dir = this.Columns["Reg_car-dir"];
				this.column_Re_Reg = this.Columns["Re-Reg"];
				this.column_T_Re_Reg = this.Columns["T_Re-Reg"];
				this.columnReg_AP_T = this.Columns["Reg_AP_T"];
				this.columnReg_CP_T = this.Columns["Reg_CP_T"];
				this.columnWait_AP_T = this.Columns["Wait_AP_T"];
				this.columnWait_CP_T = this.Columns["Wait_CP_T"];
				this.columnSrvc_T = this.Columns["Srvc_T"];
				this.columnRejection = this.Columns["Rejection"];
			}
            
			private void InitClass() 
			{
				this.columnIndex = new DataColumn("Index", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnIndex);
				this.columnT_arrival = new DataColumn("T_arrival", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_arrival);
				this.columnOrigin = new DataColumn("Origin", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnOrigin);
				this.columnDest = new DataColumn("Dest", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnDest);
				this.columnAssignment = new DataColumn("Assignment", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnAssignment);
				this.columnT_end_wait_AP = new DataColumn("T_end_wait_AP", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_end_wait_AP);
				this.columnT_end_wait_CP = new DataColumn("T_end_wait_CP", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_end_wait_CP);
				this.columnT_door_opening = new DataColumn("T_door_opening", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_door_opening);
				this.columnT_door_opened = new DataColumn("T_door_opened", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_door_opened);
				this.columnT_door_close = new DataColumn("T_door_close", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_door_close);
				this.columnT_depart = new DataColumn("T_depart", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnT_depart);
				this.columnReg_dir = new DataColumn("Reg_dir", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnReg_dir);
				this.column_Reg_car_dir = new DataColumn("Reg_car-dir", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.column_Reg_car_dir);
				this.column_Re_Reg = new DataColumn("Re-Reg", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.column_Re_Reg);
				this.column_T_Re_Reg = new DataColumn("T_Re-Reg", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.column_T_Re_Reg);
				this.columnReg_AP_T = new DataColumn("Reg_AP_T", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnReg_AP_T);
				this.columnReg_CP_T = new DataColumn("Reg_CP_T", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnReg_CP_T);
				this.columnWait_AP_T = new DataColumn("Wait_AP_T", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnWait_AP_T);
				this.columnWait_CP_T = new DataColumn("Wait_CP_T", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnWait_CP_T);
				this.columnSrvc_T = new DataColumn("Srvc_T", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnSrvc_T);
				this.columnRejection = new DataColumn("Rejection", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnRejection);
			}
            
			public _2d_pRow New_2d_pRow() 
			{
				return ((_2d_pRow)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new _2d_pRow(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(_2d_pRow);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this._2d_pRowChanged != null)) 
				{
					this._2d_pRowChanged(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this._2d_pRowChanging != null)) 
				{
					this._2d_pRowChanging(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this._2d_pRowDeleted != null)) 
				{
					this._2d_pRowDeleted(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this._2d_pRowDeleting != null)) 
				{
					this._2d_pRowDeleting(this, new _2d_pRowChangeEvent(((_2d_pRow)(e.Row)), e.Action));
				}
			}
            
			public void Remove_2d_pRow(_2d_pRow row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class _2d_pRow : System.Data.DataRow 
		{
            
			private _2d_pDataTable table_2d_p;
            
			internal _2d_pRow(DataRowBuilder rb) : 
				base(rb) 
			{
				this.table_2d_p = ((_2d_pDataTable)(this.Table));
			}
            
			public string Index 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.IndexColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.IndexColumn] = value;
				}
			}
            
			public string T_arrival 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_arrivalColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_arrivalColumn] = value;
				}
			}
            
			public string Origin 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.OriginColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.OriginColumn] = value;
				}
			}
            
			public string Dest 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.DestColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.DestColumn] = value;
				}
			}
            
			public string Assignment 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.AssignmentColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.AssignmentColumn] = value;
				}
			}
            
			public string T_end_wait_AP 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_end_wait_APColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_end_wait_APColumn] = value;
				}
			}
            
			public string T_end_wait_CP 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_end_wait_CPColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_end_wait_CPColumn] = value;
				}
			}
            
			public string T_door_opening 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_door_openingColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_door_openingColumn] = value;
				}
			}
            
			public string T_door_opened 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_door_openedColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_door_openedColumn] = value;
				}
			}
            
			public string T_door_close 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_door_closeColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_door_closeColumn] = value;
				}
			}
            
			public string T_depart 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.T_departColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.T_departColumn] = value;
				}
			}
            
			public string Reg_dir 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.Reg_dirColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.Reg_dirColumn] = value;
				}
			}
            
			public string _Reg_car_dir 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p._Reg_car_dirColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p._Reg_car_dirColumn] = value;
				}
			}
            
			public string _Re_Reg 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p._Re_RegColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p._Re_RegColumn] = value;
				}
			}
            
			public string _T_Re_Reg 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p._T_Re_RegColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p._T_Re_RegColumn] = value;
				}
			}
            
			public string Reg_AP_T 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.Reg_AP_TColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.Reg_AP_TColumn] = value;
				}
			}
            
			public string Reg_CP_T 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.Reg_CP_TColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.Reg_CP_TColumn] = value;
				}
			}
            
			public string Wait_AP_T 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.Wait_AP_TColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.Wait_AP_TColumn] = value;
				}
			}
            
			public string Wait_CP_T 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.Wait_CP_TColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.Wait_CP_TColumn] = value;
				}
			}
            
			public string Srvc_T 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.Srvc_TColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.Srvc_TColumn] = value;
				}
			}
            
			public string Rejection 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.table_2d_p.RejectionColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.table_2d_p.RejectionColumn] = value;
				}
			}
            
			public bool IsIndexNull() 
			{
				return this.IsNull(this.table_2d_p.IndexColumn);
			}
            
			public void SetIndexNull() 
			{
				this[this.table_2d_p.IndexColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_arrivalNull() 
			{
				return this.IsNull(this.table_2d_p.T_arrivalColumn);
			}
            
			public void SetT_arrivalNull() 
			{
				this[this.table_2d_p.T_arrivalColumn] = System.Convert.DBNull;
			}
            
			public bool IsOriginNull() 
			{
				return this.IsNull(this.table_2d_p.OriginColumn);
			}
            
			public void SetOriginNull() 
			{
				this[this.table_2d_p.OriginColumn] = System.Convert.DBNull;
			}
            
			public bool IsDestNull() 
			{
				return this.IsNull(this.table_2d_p.DestColumn);
			}
            
			public void SetDestNull() 
			{
				this[this.table_2d_p.DestColumn] = System.Convert.DBNull;
			}
            
			public bool IsAssignmentNull() 
			{
				return this.IsNull(this.table_2d_p.AssignmentColumn);
			}
            
			public void SetAssignmentNull() 
			{
				this[this.table_2d_p.AssignmentColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_end_wait_APNull() 
			{
				return this.IsNull(this.table_2d_p.T_end_wait_APColumn);
			}
            
			public void SetT_end_wait_APNull() 
			{
				this[this.table_2d_p.T_end_wait_APColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_end_wait_CPNull() 
			{
				return this.IsNull(this.table_2d_p.T_end_wait_CPColumn);
			}
            
			public void SetT_end_wait_CPNull() 
			{
				this[this.table_2d_p.T_end_wait_CPColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_door_openingNull() 
			{
				return this.IsNull(this.table_2d_p.T_door_openingColumn);
			}
            
			public void SetT_door_openingNull() 
			{
				this[this.table_2d_p.T_door_openingColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_door_openedNull() 
			{
				return this.IsNull(this.table_2d_p.T_door_openedColumn);
			}
            
			public void SetT_door_openedNull() 
			{
				this[this.table_2d_p.T_door_openedColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_door_closeNull() 
			{
				return this.IsNull(this.table_2d_p.T_door_closeColumn);
			}
            
			public void SetT_door_closeNull() 
			{
				this[this.table_2d_p.T_door_closeColumn] = System.Convert.DBNull;
			}
            
			public bool IsT_departNull() 
			{
				return this.IsNull(this.table_2d_p.T_departColumn);
			}
            
			public void SetT_departNull() 
			{
				this[this.table_2d_p.T_departColumn] = System.Convert.DBNull;
			}
            
			public bool IsReg_dirNull() 
			{
				return this.IsNull(this.table_2d_p.Reg_dirColumn);
			}
            
			public void SetReg_dirNull() 
			{
				this[this.table_2d_p.Reg_dirColumn] = System.Convert.DBNull;
			}
            
			public bool Is_Reg_car_dirNull() 
			{
				return this.IsNull(this.table_2d_p._Reg_car_dirColumn);
			}
            
			public void Set_Reg_car_dirNull() 
			{
				this[this.table_2d_p._Reg_car_dirColumn] = System.Convert.DBNull;
			}
            
			public bool Is_Re_RegNull() 
			{
				return this.IsNull(this.table_2d_p._Re_RegColumn);
			}
            
			public void Set_Re_RegNull() 
			{
				this[this.table_2d_p._Re_RegColumn] = System.Convert.DBNull;
			}
            
			public bool Is_T_Re_RegNull() 
			{
				return this.IsNull(this.table_2d_p._T_Re_RegColumn);
			}
            
			public void Set_T_Re_RegNull() 
			{
				this[this.table_2d_p._T_Re_RegColumn] = System.Convert.DBNull;
			}
            
			public bool IsReg_AP_TNull() 
			{
				return this.IsNull(this.table_2d_p.Reg_AP_TColumn);
			}
            
			public void SetReg_AP_TNull() 
			{
				this[this.table_2d_p.Reg_AP_TColumn] = System.Convert.DBNull;
			}
            
			public bool IsReg_CP_TNull() 
			{
				return this.IsNull(this.table_2d_p.Reg_CP_TColumn);
			}
            
			public void SetReg_CP_TNull() 
			{
				this[this.table_2d_p.Reg_CP_TColumn] = System.Convert.DBNull;
			}
            
			public bool IsWait_AP_TNull() 
			{
				return this.IsNull(this.table_2d_p.Wait_AP_TColumn);
			}
            
			public void SetWait_AP_TNull() 
			{
				this[this.table_2d_p.Wait_AP_TColumn] = System.Convert.DBNull;
			}
            
			public bool IsWait_CP_TNull() 
			{
				return this.IsNull(this.table_2d_p.Wait_CP_TColumn);
			}
            
			public void SetWait_CP_TNull() 
			{
				this[this.table_2d_p.Wait_CP_TColumn] = System.Convert.DBNull;
			}
            
			public bool IsSrvc_TNull() 
			{
				return this.IsNull(this.table_2d_p.Srvc_TColumn);
			}
            
			public void SetSrvc_TNull() 
			{
				this[this.table_2d_p.Srvc_TColumn] = System.Convert.DBNull;
			}
            
			public bool IsRejectionNull() 
			{
				return this.IsNull(this.table_2d_p.RejectionColumn);
			}
            
			public void SetRejectionNull() 
			{
				this[this.table_2d_p.RejectionColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class _2d_pRowChangeEvent : System.EventArgs 
		{
            
			private _2d_pRow eventRow;
            
			private DataRowAction eventAction;
            
			public _2d_pRowChangeEvent(_2d_pRow row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public _2d_pRow Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class report_item1DataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnitem;
            
			private DataColumn columnvalue;
            
			internal report_item1DataTable() : 
				base("report_item1") 
			{
				this.InitClass();
			}
            
			internal report_item1DataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn itemColumn 
			{
				get 
				{
					return this.columnitem;
				}
			}
            
			internal DataColumn valueColumn 
			{
				get 
				{
					return this.columnvalue;
				}
			}
            
			public report_item1Row this[int index] 
			{
				get 
				{
					return ((report_item1Row)(this.Rows[index]));
				}
			}
            
			public event report_item1RowChangeEventHandler report_item1RowChanged;
            
			public event report_item1RowChangeEventHandler report_item1RowChanging;
            
			public event report_item1RowChangeEventHandler report_item1RowDeleted;
            
			public event report_item1RowChangeEventHandler report_item1RowDeleting;
            
			public void Addreport_item1Row(report_item1Row row) 
			{
				this.Rows.Add(row);
			}
            
			public report_item1Row Addreport_item1Row(string item, string value) 
			{
				report_item1Row rowreport_item1Row = ((report_item1Row)(this.NewRow()));
				rowreport_item1Row.ItemArray = new object[] {
																item,
																value};
				this.Rows.Add(rowreport_item1Row);
				return rowreport_item1Row;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				report_item1DataTable cln = ((report_item1DataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new report_item1DataTable();
			}
            
			internal void InitVars() 
			{
				this.columnitem = this.Columns["item"];
				this.columnvalue = this.Columns["value"];
			}
            
			private void InitClass() 
			{
				this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnitem);
				this.columnvalue = new DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnvalue);
			}
            
			public report_item1Row Newreport_item1Row() 
			{
				return ((report_item1Row)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new report_item1Row(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(report_item1Row);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this.report_item1RowChanged != null)) 
				{
					this.report_item1RowChanged(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this.report_item1RowChanging != null)) 
				{
					this.report_item1RowChanging(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this.report_item1RowDeleted != null)) 
				{
					this.report_item1RowDeleted(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this.report_item1RowDeleting != null)) 
				{
					this.report_item1RowDeleting(this, new report_item1RowChangeEvent(((report_item1Row)(e.Row)), e.Action));
				}
			}
            
			public void Removereport_item1Row(report_item1Row row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class report_item1Row : System.Data.DataRow 
		{
            
			private report_item1DataTable tablereport_item1;
            
			internal report_item1Row(DataRowBuilder rb) : 
				base(rb) 
			{
				this.tablereport_item1 = ((report_item1DataTable)(this.Table));
			}
            
			public string item 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablereport_item1.itemColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablereport_item1.itemColumn] = value;
				}
			}
            
			public string value 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablereport_item1.valueColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablereport_item1.valueColumn] = value;
				}
			}
            
			public bool IsitemNull() 
			{
				return this.IsNull(this.tablereport_item1.itemColumn);
			}
            
			public void SetitemNull() 
			{
				this[this.tablereport_item1.itemColumn] = System.Convert.DBNull;
			}
            
			public bool IsvalueNull() 
			{
				return this.IsNull(this.tablereport_item1.valueColumn);
			}
            
			public void SetvalueNull() 
			{
				this[this.tablereport_item1.valueColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class report_item1RowChangeEvent : System.EventArgs 
		{
            
			private report_item1Row eventRow;
            
			private DataRowAction eventAction;
            
			public report_item1RowChangeEvent(report_item1Row row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public report_item1Row Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class report_item2DataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnitem;
            
			private DataColumn columnvalue;
            
			internal report_item2DataTable() : 
				base("report_item2") 
			{
				this.InitClass();
			}
            
			internal report_item2DataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn itemColumn 
			{
				get 
				{
					return this.columnitem;
				}
			}
            
			internal DataColumn valueColumn 
			{
				get 
				{
					return this.columnvalue;
				}
			}
            
			public report_item2Row this[int index] 
			{
				get 
				{
					return ((report_item2Row)(this.Rows[index]));
				}
			}
            
			public event report_item2RowChangeEventHandler report_item2RowChanged;
            
			public event report_item2RowChangeEventHandler report_item2RowChanging;
            
			public event report_item2RowChangeEventHandler report_item2RowDeleted;
            
			public event report_item2RowChangeEventHandler report_item2RowDeleting;
            
			public void Addreport_item2Row(report_item2Row row) 
			{
				this.Rows.Add(row);
			}
            
			public report_item2Row Addreport_item2Row(string item, string value) 
			{
				report_item2Row rowreport_item2Row = ((report_item2Row)(this.NewRow()));
				rowreport_item2Row.ItemArray = new object[] {
																item,
																value};
				this.Rows.Add(rowreport_item2Row);
				return rowreport_item2Row;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				report_item2DataTable cln = ((report_item2DataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new report_item2DataTable();
			}
            
			internal void InitVars() 
			{
				this.columnitem = this.Columns["item"];
				this.columnvalue = this.Columns["value"];
			}
            
			private void InitClass() 
			{
				this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnitem);
				this.columnvalue = new DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnvalue);
			}
            
			public report_item2Row Newreport_item2Row() 
			{
				return ((report_item2Row)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new report_item2Row(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(report_item2Row);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this.report_item2RowChanged != null)) 
				{
					this.report_item2RowChanged(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this.report_item2RowChanging != null)) 
				{
					this.report_item2RowChanging(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this.report_item2RowDeleted != null)) 
				{
					this.report_item2RowDeleted(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this.report_item2RowDeleting != null)) 
				{
					this.report_item2RowDeleting(this, new report_item2RowChangeEvent(((report_item2Row)(e.Row)), e.Action));
				}
			}
            
			public void Removereport_item2Row(report_item2Row row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class report_item2Row : System.Data.DataRow 
		{
            
			private report_item2DataTable tablereport_item2;
            
			internal report_item2Row(DataRowBuilder rb) : 
				base(rb) 
			{
				this.tablereport_item2 = ((report_item2DataTable)(this.Table));
			}
            
			public string item 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablereport_item2.itemColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablereport_item2.itemColumn] = value;
				}
			}
            
			public string value 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablereport_item2.valueColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablereport_item2.valueColumn] = value;
				}
			}
            
			public bool IsitemNull() 
			{
				return this.IsNull(this.tablereport_item2.itemColumn);
			}
            
			public void SetitemNull() 
			{
				this[this.tablereport_item2.itemColumn] = System.Convert.DBNull;
			}
            
			public bool IsvalueNull() 
			{
				return this.IsNull(this.tablereport_item2.valueColumn);
			}
            
			public void SetvalueNull() 
			{
				this[this.tablereport_item2.valueColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class report_item2RowChangeEvent : System.EventArgs 
		{
            
			private report_item2Row eventRow;
            
			private DataRowAction eventAction;
            
			public report_item2RowChangeEvent(report_item2Row row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public report_item2Row Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class svcwaitDataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnitem;
            
			private DataColumn columnvalue;
            
			internal svcwaitDataTable() : 
				base("svcwait") 
			{
				this.InitClass();
			}
            
			internal svcwaitDataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn itemColumn 
			{
				get 
				{
					return this.columnitem;
				}
			}
            
			internal DataColumn valueColumn 
			{
				get 
				{
					return this.columnvalue;
				}
			}
            
			public svcwaitRow this[int index] 
			{
				get 
				{
					return ((svcwaitRow)(this.Rows[index]));
				}
			}
            
			public event svcwaitRowChangeEventHandler svcwaitRowChanged;
            
			public event svcwaitRowChangeEventHandler svcwaitRowChanging;
            
			public event svcwaitRowChangeEventHandler svcwaitRowDeleted;
            
			public event svcwaitRowChangeEventHandler svcwaitRowDeleting;
            
			public void AddsvcwaitRow(svcwaitRow row) 
			{
				this.Rows.Add(row);
			}
            
			public svcwaitRow AddsvcwaitRow(string item, System.Double value) 
			{
				svcwaitRow rowsvcwaitRow = ((svcwaitRow)(this.NewRow()));
				rowsvcwaitRow.ItemArray = new object[] {
														   item,
														   value};
				this.Rows.Add(rowsvcwaitRow);
				return rowsvcwaitRow;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				svcwaitDataTable cln = ((svcwaitDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new svcwaitDataTable();
			}
            
			internal void InitVars() 
			{
				this.columnitem = this.Columns["item"];
				this.columnvalue = this.Columns["value"];
			}
            
			private void InitClass() 
			{
				this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnitem);
				this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnvalue);
			}
            
			public svcwaitRow NewsvcwaitRow() 
			{
				return ((svcwaitRow)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new svcwaitRow(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(svcwaitRow);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this.svcwaitRowChanged != null)) 
				{
					this.svcwaitRowChanged(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this.svcwaitRowChanging != null)) 
				{
					this.svcwaitRowChanging(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this.svcwaitRowDeleted != null)) 
				{
					this.svcwaitRowDeleted(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this.svcwaitRowDeleting != null)) 
				{
					this.svcwaitRowDeleting(this, new svcwaitRowChangeEvent(((svcwaitRow)(e.Row)), e.Action));
				}
			}
            
			public void RemovesvcwaitRow(svcwaitRow row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class svcwaitRow : System.Data.DataRow 
		{
            
			private svcwaitDataTable tablesvcwait;
            
			internal svcwaitRow(DataRowBuilder rb) : 
				base(rb) 
			{
				this.tablesvcwait = ((svcwaitDataTable)(this.Table));
			}
            
			public string item 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablesvcwait.itemColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablesvcwait.itemColumn] = value;
				}
			}
            
			public System.Double value 
			{
				get 
				{
					try 
					{
						return ((System.Double)(this[this.tablesvcwait.valueColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablesvcwait.valueColumn] = value;
				}
			}
            
			public bool IsitemNull() 
			{
				return this.IsNull(this.tablesvcwait.itemColumn);
			}
            
			public void SetitemNull() 
			{
				this[this.tablesvcwait.itemColumn] = System.Convert.DBNull;
			}
            
			public bool IsvalueNull() 
			{
				return this.IsNull(this.tablesvcwait.valueColumn);
			}
            
			public void SetvalueNull() 
			{
				this[this.tablesvcwait.valueColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class svcwaitRowChangeEvent : System.EventArgs 
		{
            
			private svcwaitRow eventRow;
            
			private DataRowAction eventAction;
            
			public svcwaitRowChangeEvent(svcwaitRow row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public svcwaitRow Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class waitDataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnitem;
            
			private DataColumn columnvalue;
            
			internal waitDataTable() : 
				base("wait") 
			{
				this.InitClass();
			}
            
			internal waitDataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn itemColumn 
			{
				get 
				{
					return this.columnitem;
				}
			}
            
			internal DataColumn valueColumn 
			{
				get 
				{
					return this.columnvalue;
				}
			}
            
			public waitRow this[int index] 
			{
				get 
				{
					return ((waitRow)(this.Rows[index]));
				}
			}
            
			public event waitRowChangeEventHandler waitRowChanged;
            
			public event waitRowChangeEventHandler waitRowChanging;
            
			public event waitRowChangeEventHandler waitRowDeleted;
            
			public event waitRowChangeEventHandler waitRowDeleting;
            
			public void AddwaitRow(waitRow row) 
			{
				this.Rows.Add(row);
			}
            
			public waitRow AddwaitRow(string item, System.Double value) 
			{
				waitRow rowwaitRow = ((waitRow)(this.NewRow()));
				rowwaitRow.ItemArray = new object[] {
														item,
														value};
				this.Rows.Add(rowwaitRow);
				return rowwaitRow;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				waitDataTable cln = ((waitDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new waitDataTable();
			}
            
			internal void InitVars() 
			{
				this.columnitem = this.Columns["item"];
				this.columnvalue = this.Columns["value"];
			}
            
			private void InitClass() 
			{
				this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnitem);
				this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnvalue);
			}
            
			public waitRow NewwaitRow() 
			{
				return ((waitRow)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new waitRow(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(waitRow);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this.waitRowChanged != null)) 
				{
					this.waitRowChanged(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this.waitRowChanging != null)) 
				{
					this.waitRowChanging(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this.waitRowDeleted != null)) 
				{
					this.waitRowDeleted(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this.waitRowDeleting != null)) 
				{
					this.waitRowDeleting(this, new waitRowChangeEvent(((waitRow)(e.Row)), e.Action));
				}
			}
            
			public void RemovewaitRow(waitRow row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class waitRow : System.Data.DataRow 
		{
            
			private waitDataTable tablewait;
            
			internal waitRow(DataRowBuilder rb) : 
				base(rb) 
			{
				this.tablewait = ((waitDataTable)(this.Table));
			}
            
			public string item 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablewait.itemColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablewait.itemColumn] = value;
				}
			}
            
			public System.Double value 
			{
				get 
				{
					try 
					{
						return ((System.Double)(this[this.tablewait.valueColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablewait.valueColumn] = value;
				}
			}
            
			public bool IsitemNull() 
			{
				return this.IsNull(this.tablewait.itemColumn);
			}
            
			public void SetitemNull() 
			{
				this[this.tablewait.itemColumn] = System.Convert.DBNull;
			}
            
			public bool IsvalueNull() 
			{
				return this.IsNull(this.tablewait.valueColumn);
			}
            
			public void SetvalueNull() 
			{
				this[this.tablewait.valueColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class waitRowChangeEvent : System.EventArgs 
		{
            
			private waitRow eventRow;
            
			private DataRowAction eventAction;
            
			public waitRowChangeEvent(waitRow row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public waitRow Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class svcDataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columnitem;
            
			private DataColumn columnvalue;
            
			internal svcDataTable() : 
				base("svc") 
			{
				this.InitClass();
			}
            
			internal svcDataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn itemColumn 
			{
				get 
				{
					return this.columnitem;
				}
			}
            
			internal DataColumn valueColumn 
			{
				get 
				{
					return this.columnvalue;
				}
			}
            
			public svcRow this[int index] 
			{
				get 
				{
					return ((svcRow)(this.Rows[index]));
				}
			}
            
			public event svcRowChangeEventHandler svcRowChanged;
            
			public event svcRowChangeEventHandler svcRowChanging;
            
			public event svcRowChangeEventHandler svcRowDeleted;
            
			public event svcRowChangeEventHandler svcRowDeleting;
            
			public void AddsvcRow(svcRow row) 
			{
				this.Rows.Add(row);
			}
            
			public svcRow AddsvcRow(string item, System.Double value) 
			{
				svcRow rowsvcRow = ((svcRow)(this.NewRow()));
				rowsvcRow.ItemArray = new object[] {
													   item,
													   value};
				this.Rows.Add(rowsvcRow);
				return rowsvcRow;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				svcDataTable cln = ((svcDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new svcDataTable();
			}
            
			internal void InitVars() 
			{
				this.columnitem = this.Columns["item"];
				this.columnvalue = this.Columns["value"];
			}
            
			private void InitClass() 
			{
				this.columnitem = new DataColumn("item", typeof(string), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnitem);
				this.columnvalue = new DataColumn("value", typeof(System.Double), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnvalue);
			}
            
			public svcRow NewsvcRow() 
			{
				return ((svcRow)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new svcRow(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(svcRow);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this.svcRowChanged != null)) 
				{
					this.svcRowChanged(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this.svcRowChanging != null)) 
				{
					this.svcRowChanging(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this.svcRowDeleted != null)) 
				{
					this.svcRowDeleted(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this.svcRowDeleting != null)) 
				{
					this.svcRowDeleting(this, new svcRowChangeEvent(((svcRow)(e.Row)), e.Action));
				}
			}
            
			public void RemovesvcRow(svcRow row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class svcRow : System.Data.DataRow 
		{
            
			private svcDataTable tablesvc;
            
			internal svcRow(DataRowBuilder rb) : 
				base(rb) 
			{
				this.tablesvc = ((svcDataTable)(this.Table));
			}
            
			public string item 
			{
				get 
				{
					try 
					{
						return ((string)(this[this.tablesvc.itemColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablesvc.itemColumn] = value;
				}
			}
            
			public System.Double value 
			{
				get 
				{
					try 
					{
						return ((System.Double)(this[this.tablesvc.valueColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablesvc.valueColumn] = value;
				}
			}
            
			public bool IsitemNull() 
			{
				return this.IsNull(this.tablesvc.itemColumn);
			}
            
			public void SetitemNull() 
			{
				this[this.tablesvc.itemColumn] = System.Convert.DBNull;
			}
            
			public bool IsvalueNull() 
			{
				return this.IsNull(this.tablesvc.valueColumn);
			}
            
			public void SetvalueNull() 
			{
				this[this.tablesvc.valueColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class svcRowChangeEvent : System.EventArgs 
		{
            
			private svcRow eventRow;
            
			private DataRowAction eventAction;
            
			public svcRowChangeEvent(svcRow row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public svcRow Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
	}
}
