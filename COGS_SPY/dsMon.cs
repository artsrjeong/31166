//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Runtime.Serialization;
using System.Xml;

namespace COGSD 
{
	using System;
	using System.Data;
	using System.Xml;
	using System.Runtime.Serialization;
    
    
	//[Serializable()]
	//[System.ComponentModel.DesignerCategoryAttribute("code")]
	//[System.Diagnostics.DebuggerStepThrough()]
	//[System.ComponentModel.ToolboxItem(true)]
	//public class dsMon : DataSet {
	//    
	//    private p_logDataTable tablep_log;
	//    
	//    public dsMon() {
	//        this.InitClass();
	//        System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//        this.Tables.CollectionChanged += schemaChangedHandler;
	//        this.Relations.CollectionChanged += schemaChangedHandler;
	//    }
	//    
	//    protected dsMon(SerializationInfo info, StreamingContext context) {
	//        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
	//        if ((strSchema != null)) {
	//            DataSet ds = new DataSet();
	//            ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
	//            if ((ds.Tables["p_log"] != null)) {
	//                this.Tables.Add(new p_logDataTable(ds.Tables["p_log"]));
	//            }
	//            this.DataSetName = ds.DataSetName;
	//            this.Prefix = ds.Prefix;
	//            this.Namespace = ds.Namespace;
	//            this.Locale = ds.Locale;
	//            this.CaseSensitive = ds.CaseSensitive;
	//            this.EnforceConstraints = ds.EnforceConstraints;
	//            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//            this.InitVars();
	//        }
	//        else {
	//            this.InitClass();
	//        }
	//        this.GetSerializationData(info, context);
	//        System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//        this.Tables.CollectionChanged += schemaChangedHandler;
	//        this.Relations.CollectionChanged += schemaChangedHandler;
	//    }
	//    
	//    [System.ComponentModel.Browsable(false)]
	//    [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//    public p_logDataTable p_log {
	//        get {
	//            return this.tablep_log;
	//        }
	//    }
	//    
	//    public override DataSet Clone() {
	//        dsMon cln = ((dsMon)(base.Clone()));
	//        cln.InitVars();
	//        return cln;
	//    }
	//    
	//    protected override bool ShouldSerializeTables() {
	//        return false;
	//    }
	//    
	//    protected override bool ShouldSerializeRelations() {
	//        return false;
	//    }
	//    
	//    protected override void ReadXmlSerializable(XmlReader reader) {
	//        this.Reset();
	//        DataSet ds = new DataSet();
	//        ds.ReadXml(reader);
	//        if ((ds.Tables["p_log"] != null)) {
	//            this.Tables.Add(new p_logDataTable(ds.Tables["p_log"]));
	//        }
	//        this.DataSetName = ds.DataSetName;
	//        this.Prefix = ds.Prefix;
	//        this.Namespace = ds.Namespace;
	//        this.Locale = ds.Locale;
	//        this.CaseSensitive = ds.CaseSensitive;
	//        this.EnforceConstraints = ds.EnforceConstraints;
	//        this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//        this.InitVars();
	//    }
	//    
	//    protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
	//        System.IO.MemoryStream stream = new System.IO.MemoryStream();
	//        this.WriteXmlSchema(new XmlTextWriter(stream, null));
	//        stream.Position = 0;
	//        return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
	//    }
	//    
	//    internal void InitVars() {
	//        this.tablep_log = ((p_logDataTable)(this.Tables["p_log"]));
	//        if ((this.tablep_log != null)) {
	//            this.tablep_log.InitVars();
	//        }
	//    }
	//    
	//    private void InitClass() {
	//        this.DataSetName = "dsMon";
	//        this.Prefix = "";
	//        this.Namespace = "http://tempuri.org/dsMon.xsd";
	//        this.Locale = new System.Globalization.CultureInfo("en-US");
	//        this.CaseSensitive = false;
	//        this.EnforceConstraints = true;
	//        this.tablep_log = new p_logDataTable();
	//        this.Tables.Add(this.tablep_log);
	//    }
	//    
	//    private bool ShouldSerializep_log() {
	//        return false;
	//    }
	//    
	//    private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
	//        if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
	//            this.InitVars();
	//        }
	//    }
	//    
	//    public delegate void p_logRowChangeEventHandler(object sender, p_logRowChangeEvent e);
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class p_logDataTable : DataTable, System.Collections.IEnumerable {
	//        
	//        private DataColumn columntime;
	//        
	//        private DataColumn columnorigin;
	//        
	//        private DataColumn columndest;
	//        
	//        private DataColumn columnassign;
	//        
	//        private DataColumn columnw_time;
	//        
	//        private DataColumn columns_time;
	//        
	//        internal p_logDataTable() : 
	//                base("p_log") {
	//            this.InitClass();
	//        }
	//        
	//        internal p_logDataTable(DataTable table) : 
	//                base(table.TableName) {
	//            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
	//                this.CaseSensitive = table.CaseSensitive;
	//            }
	//            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
	//                this.Locale = table.Locale;
	//            }
	//            if ((table.Namespace != table.DataSet.Namespace)) {
	//                this.Namespace = table.Namespace;
	//            }
	//            this.Prefix = table.Prefix;
	//            this.MinimumCapacity = table.MinimumCapacity;
	//            this.DisplayExpression = table.DisplayExpression;
	//        }
	//        
	//        [System.ComponentModel.Browsable(false)]
	//        public int Count {
	//            get {
	//                return this.Rows.Count;
	//            }
	//        }
	//        
	//        internal DataColumn timeColumn {
	//            get {
	//                return this.columntime;
	//            }
	//        }
	//        
	//        internal DataColumn originColumn {
	//            get {
	//                return this.columnorigin;
	//            }
	//        }
	//        
	//        internal DataColumn destColumn {
	//            get {
	//                return this.columndest;
	//            }
	//        }
	//        
	//        internal DataColumn assignColumn {
	//            get {
	//                return this.columnassign;
	//            }
	//        }
	//        
	//        internal DataColumn w_timeColumn {
	//            get {
	//                return this.columnw_time;
	//            }
	//        }
	//        
	//        internal DataColumn s_timeColumn {
	//            get {
	//                return this.columns_time;
	//            }
	//        }
	//        
	//        public p_logRow this[int index] {
	//            get {
	//                return ((p_logRow)(this.Rows[index]));
	//            }
	//        }
	//        
	//        public event p_logRowChangeEventHandler p_logRowChanged;
	//        
	//        public event p_logRowChangeEventHandler p_logRowChanging;
	//        
	//        public event p_logRowChangeEventHandler p_logRowDeleted;
	//        
	//        public event p_logRowChangeEventHandler p_logRowDeleting;
	//        
	//        public void Addp_logRow(p_logRow row) {
	//            this.Rows.Add(row);
	//        }
	//        
	//        public p_logRow Addp_logRow(System.Double time, int origin, int dest, int assign, System.Double w_time, System.Double s_time) {
	//            p_logRow rowp_logRow = ((p_logRow)(this.NewRow()));
	//            rowp_logRow.ItemArray = new object[] {
	//                    time,
	//                    origin,
	//                    dest,
	//                    assign,
	//                    w_time,
	//                    s_time};
	//            this.Rows.Add(rowp_logRow);
	//            return rowp_logRow;
	//        }
	//        
	//        public System.Collections.IEnumerator GetEnumerator() {
	//            return this.Rows.GetEnumerator();
	//        }
	//        
	//        public override DataTable Clone() {
	//            p_logDataTable cln = ((p_logDataTable)(base.Clone()));
	//            cln.InitVars();
	//            return cln;
	//        }
	//        
	//        protected override DataTable CreateInstance() {
	//            return new p_logDataTable();
	//        }
	//        
	//        internal void InitVars() {
	//            this.columntime = this.Columns["time"];
	//            this.columnorigin = this.Columns["origin"];
	//            this.columndest = this.Columns["dest"];
	//            this.columnassign = this.Columns["assign"];
	//            this.columnw_time = this.Columns["w_time"];
	//            this.columns_time = this.Columns["s_time"];
	//        }
	//        
	//        private void InitClass() {
	//            this.columntime = new DataColumn("time", typeof(System.Double), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columntime);
	//            this.columnorigin = new DataColumn("origin", typeof(int), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnorigin);
	//            this.columndest = new DataColumn("dest", typeof(int), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columndest);
	//            this.columnassign = new DataColumn("assign", typeof(int), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnassign);
	//            this.columnw_time = new DataColumn("w_time", typeof(System.Double), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columnw_time);
	//            this.columns_time = new DataColumn("s_time", typeof(System.Double), null, System.Data.MappingType.Element);
	//            this.Columns.Add(this.columns_time);
	//        }
	//        
	//        public p_logRow Newp_logRow() {
	//            return ((p_logRow)(this.NewRow()));
	//        }
	//        
	//        protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
	//            return new p_logRow(builder);
	//        }
	//        
	//        protected override System.Type GetRowType() {
	//            return typeof(p_logRow);
	//        }
	//        
	//        protected override void OnRowChanged(DataRowChangeEventArgs e) {
	//            base.OnRowChanged(e);
	//            if ((this.p_logRowChanged != null)) {
	//                this.p_logRowChanged(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowChanging(DataRowChangeEventArgs e) {
	//            base.OnRowChanging(e);
	//            if ((this.p_logRowChanging != null)) {
	//                this.p_logRowChanging(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleted(DataRowChangeEventArgs e) {
	//            base.OnRowDeleted(e);
	//            if ((this.p_logRowDeleted != null)) {
	//                this.p_logRowDeleted(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        protected override void OnRowDeleting(DataRowChangeEventArgs e) {
	//            base.OnRowDeleting(e);
	//            if ((this.p_logRowDeleting != null)) {
	//                this.p_logRowDeleting(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//            }
	//        }
	//        
	//        public void Removep_logRow(p_logRow row) {
	//            this.Rows.Remove(row);
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class p_logRow : DataRow {
	//        
	//        private p_logDataTable tablep_log;
	//        
	//        internal p_logRow(DataRowBuilder rb) : 
	//                base(rb) {
	//            this.tablep_log = ((p_logDataTable)(this.Table));
	//        }
	//        
	//        public System.Double time {
	//            get {
	//                try {
	//                    return ((System.Double)(this[this.tablep_log.timeColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablep_log.timeColumn] = value;
	//            }
	//        }
	//        
	//        public int origin {
	//            get {
	//                try {
	//                    return ((int)(this[this.tablep_log.originColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablep_log.originColumn] = value;
	//            }
	//        }
	//        
	//        public int dest {
	//            get {
	//                try {
	//                    return ((int)(this[this.tablep_log.destColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablep_log.destColumn] = value;
	//            }
	//        }
	//        
	//        public int assign {
	//            get {
	//                try {
	//                    return ((int)(this[this.tablep_log.assignColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablep_log.assignColumn] = value;
	//            }
	//        }
	//        
	//        public System.Double w_time {
	//            get {
	//                try {
	//                    return ((System.Double)(this[this.tablep_log.w_timeColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablep_log.w_timeColumn] = value;
	//            }
	//        }
	//        
	//        public System.Double s_time {
	//            get {
	//                try {
	//                    return ((System.Double)(this[this.tablep_log.s_timeColumn]));
	//                }
	//                catch (InvalidCastException e) {
	//                    throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//                }
	//            }
	//            set {
	//                this[this.tablep_log.s_timeColumn] = value;
	//            }
	//        }
	//        
	//        public bool IstimeNull() {
	//            return this.IsNull(this.tablep_log.timeColumn);
	//        }
	//        
	//        public void SettimeNull() {
	//            this[this.tablep_log.timeColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsoriginNull() {
	//            return this.IsNull(this.tablep_log.originColumn);
	//        }
	//        
	//        public void SetoriginNull() {
	//            this[this.tablep_log.originColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsdestNull() {
	//            return this.IsNull(this.tablep_log.destColumn);
	//        }
	//        
	//        public void SetdestNull() {
	//            this[this.tablep_log.destColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool IsassignNull() {
	//            return this.IsNull(this.tablep_log.assignColumn);
	//        }
	//        
	//        public void SetassignNull() {
	//            this[this.tablep_log.assignColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool Isw_timeNull() {
	//            return this.IsNull(this.tablep_log.w_timeColumn);
	//        }
	//        
	//        public void Setw_timeNull() {
	//            this[this.tablep_log.w_timeColumn] = System.Convert.DBNull;
	//        }
	//        
	//        public bool Iss_timeNull() {
	//            return this.IsNull(this.tablep_log.s_timeColumn);
	//        }
	//        
	//        public void Sets_timeNull() {
	//            this[this.tablep_log.s_timeColumn] = System.Convert.DBNull;
	//        }
	//    }
	//    
	//    [System.Diagnostics.DebuggerStepThrough()]
	//    public class p_logRowChangeEvent : EventArgs {
	//        
	//        private p_logRow eventRow;
	//        
	//        private DataRowAction eventAction;
	//        
	//        public p_logRowChangeEvent(p_logRow row, DataRowAction action) {
	//            this.eventRow = row;
	//            this.eventAction = action;
	//        }
	//        
	//        public p_logRow Row {
	//            get {
	//                return this.eventRow;
	//            }
	//        }
	//        
	//        public DataRowAction Action {
	//            get {
	//                return this.eventAction;
	//            }
	//        }
	//    }
	//}


}
namespace COGS_SPY
{
	//[Serializable(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Diagnostics.DebuggerStepThrough(), System.ComponentModel.ToolboxItem(true)]
	//public class dsMon : DataSet
	//{
	//       
	//	private p_logDataTable tablep_log;
	//       
	//	public dsMon() 
	//	{
	//		this.InitClass();
	//		System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//		this.Tables.CollectionChanged += schemaChangedHandler;
	//		this.Relations.CollectionChanged += schemaChangedHandler;
	//	}
	//       
	//	protected dsMon(SerializationInfo info, StreamingContext context) 
	//	{
	//		string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
	//		if ((strSchema != null)) 
	//		{
	//			DataSet ds = new DataSet();
	//			ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
	//			if ((ds.Tables["p_log"] != null)) 
	//			{
	//				this.Tables.Add(new p_logDataTable(ds.Tables["p_log"]));
	//			}
	//			this.DataSetName = ds.DataSetName;
	//			this.Prefix = ds.Prefix;
	//			this.Namespace = ds.Namespace;
	//			this.Locale = ds.Locale;
	//			this.CaseSensitive = ds.CaseSensitive;
	//			this.EnforceConstraints = ds.EnforceConstraints;
	//			this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//			this.InitVars();
	//		}
	//		else 
	//		{
	//			this.InitClass();
	//		}
	//		this.GetSerializationData(info, context);
	//		System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
	//		this.Tables.CollectionChanged += schemaChangedHandler;
	//		this.Relations.CollectionChanged += schemaChangedHandler;
	//	}
	//       
	//	[System.ComponentModel.Browsable(false)]
	//	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
	//	public p_logDataTable p_log 
	//	{
	//		get 
	//		{
	//			return this.tablep_log;
	//		}
	//	}
	//       
	//	public override DataSet Clone() 
	//	{
	//		dsMon cln = ((dsMon)(base.Clone()));
	//		cln.InitVars();
	//		return cln;
	//	}
	//       
	//	protected override bool ShouldSerializeTables() 
	//	{
	//		return false;
	//	}
	//       
	//	protected override bool ShouldSerializeRelations() 
	//	{
	//		return false;
	//	}
	//       
	//	protected override void ReadXmlSerializable(XmlReader reader) 
	//	{
	//		this.Reset();
	//		DataSet ds = new DataSet();
	//		ds.ReadXml(reader);
	//		if ((ds.Tables["p_log"] != null)) 
	//		{
	//			this.Tables.Add(new p_logDataTable(ds.Tables["p_log"]));
	//		}
	//		this.DataSetName = ds.DataSetName;
	//		this.Prefix = ds.Prefix;
	//		this.Namespace = ds.Namespace;
	//		this.Locale = ds.Locale;
	//		this.CaseSensitive = ds.CaseSensitive;
	//		this.EnforceConstraints = ds.EnforceConstraints;
	//		this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
	//		this.InitVars();
	//	}
	//       
	//	protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() 
	//	{
	//		System.IO.MemoryStream stream = new System.IO.MemoryStream();
	//		this.WriteXmlSchema(new XmlTextWriter(stream, null));
	//		stream.Position = 0;
	//		return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
	//	}
	//       
	//	internal void InitVars() 
	//	{
	//		this.tablep_log = ((p_logDataTable)(this.Tables["p_log"]));
	//		if ((this.tablep_log != null)) 
	//		{
	//			this.tablep_log.InitVars();
	//		}
	//	}
	//       
	//	private void InitClass() 
	//	{
	//		this.DataSetName = "dsMon";
	//		this.Prefix = "";
	//		this.Namespace = "http://tempuri.org/dsMon.xsd";
	//		this.Locale = new System.Globalization.CultureInfo("en-US");
	//		this.CaseSensitive = false;
	//		this.EnforceConstraints = true;
	//		this.tablep_log = new p_logDataTable();
	//		this.Tables.Add(this.tablep_log);
	//	}
	//       
	//	private bool ShouldSerializep_log() 
	//	{
	//		return false;
	//	}
	//       
	//	private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) 
	//	{
	//		if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) 
	//		{
	//			this.InitVars();
	//		}
	//	}
	//       
	//	public delegate void p_logRowChangeEventHandler(object sender, p_logRowChangeEvent e);
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class p_logDataTable : System.Data.DataTable, System.Collections.IEnumerable 
	//	{
	//           
	//		private DataColumn columntime;
	//           
	//		private DataColumn columnorigin;
	//           
	//		private DataColumn columndest;
	//           
	//		private DataColumn columnassign;
	//           
	//		private DataColumn columnw_time;
	//           
	//		private DataColumn columns_time;
	//           
	//		internal p_logDataTable() : 
	//			base("p_log") 
	//		{
	//			this.InitClass();
	//		}
	//           
	//		internal p_logDataTable(DataTable table) : 
	//			base(table.TableName) 
	//		{
	//			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
	//			{
	//				this.CaseSensitive = table.CaseSensitive;
	//			}
	//			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
	//			{
	//				this.Locale = table.Locale;
	//			}
	//			if ((table.Namespace != table.DataSet.Namespace)) 
	//			{
	//				this.Namespace = table.Namespace;
	//			}
	//			this.Prefix = table.Prefix;
	//			this.MinimumCapacity = table.MinimumCapacity;
	//			this.DisplayExpression = table.DisplayExpression;
	//		}
	//           
	//		[System.ComponentModel.Browsable(false)]
	//		public int Count 
	//		{
	//			get 
	//			{
	//				return this.Rows.Count;
	//			}
	//		}
	//           
	//		internal DataColumn timeColumn 
	//		{
	//			get 
	//			{
	//				return this.columntime;
	//			}
	//		}
	//           
	//		internal DataColumn originColumn 
	//		{
	//			get 
	//			{
	//				return this.columnorigin;
	//			}
	//		}
	//           
	//		internal DataColumn destColumn 
	//		{
	//			get 
	//			{
	//				return this.columndest;
	//			}
	//		}
	//           
	//		internal DataColumn assignColumn 
	//		{
	//			get 
	//			{
	//				return this.columnassign;
	//			}
	//		}
	//           
	//		internal DataColumn w_timeColumn 
	//		{
	//			get 
	//			{
	//				return this.columnw_time;
	//			}
	//		}
	//           
	//		internal DataColumn s_timeColumn 
	//		{
	//			get 
	//			{
	//				return this.columns_time;
	//			}
	//		}
	//           
	//		public p_logRow this[int index] 
	//		{
	//			get 
	//			{
	//				return ((p_logRow)(this.Rows[index]));
	//			}
	//		}
	//           
	//		public event p_logRowChangeEventHandler p_logRowChanged;
	//           
	//		public event p_logRowChangeEventHandler p_logRowChanging;
	//           
	//		public event p_logRowChangeEventHandler p_logRowDeleted;
	//           
	//		public event p_logRowChangeEventHandler p_logRowDeleting;
	//           
	//		public void Addp_logRow(p_logRow row) 
	//		{
	//			this.Rows.Add(row);
	//		}
	//           
	//		public p_logRow Addp_logRow(System.Double time, int origin, int dest, int assign, System.Double w_time, System.Double s_time) 
	//		{
	//			p_logRow rowp_logRow = ((p_logRow)(this.NewRow()));
	//			rowp_logRow.ItemArray = new object[] {
	//													 time,
	//													 origin,
	//													 dest,
	//													 assign,
	//													 w_time,
	//													 s_time};
	//			this.Rows.Add(rowp_logRow);
	//			return rowp_logRow;
	//		}
	//           
	//		public System.Collections.IEnumerator GetEnumerator() 
	//		{
	//			return this.Rows.GetEnumerator();
	//		}
	//           
	//		public override DataTable Clone() 
	//		{
	//			p_logDataTable cln = ((p_logDataTable)(base.Clone()));
	//			cln.InitVars();
	//			return cln;
	//		}
	//           
	//		protected override DataTable CreateInstance() 
	//		{
	//			return new p_logDataTable();
	//		}
	//           
	//		internal void InitVars() 
	//		{
	//			this.columntime = this.Columns["time"];
	//			this.columnorigin = this.Columns["origin"];
	//			this.columndest = this.Columns["dest"];
	//			this.columnassign = this.Columns["assign"];
	//			this.columnw_time = this.Columns["w_time"];
	//			this.columns_time = this.Columns["s_time"];
	//		}
	//           
	//		private void InitClass() 
	//		{
	//			this.columntime = new DataColumn("time", typeof(System.Double), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columntime);
	//			this.columnorigin = new DataColumn("origin", typeof(int), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnorigin);
	//			this.columndest = new DataColumn("dest", typeof(int), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columndest);
	//			this.columnassign = new DataColumn("assign", typeof(int), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnassign);
	//			this.columnw_time = new DataColumn("w_time", typeof(System.Double), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columnw_time);
	//			this.columns_time = new DataColumn("s_time", typeof(System.Double), null, System.Data.MappingType.Element);
	//			this.Columns.Add(this.columns_time);
	//		}
	//           
	//		public p_logRow Newp_logRow() 
	//		{
	//			return ((p_logRow)(this.NewRow()));
	//		}
	//           
	//		protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
	//		{
	//			return new p_logRow(builder);
	//		}
	//           
	//		protected override System.Type GetRowType() 
	//		{
	//			return typeof(p_logRow);
	//		}
	//           
	//		protected override void OnRowChanged(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanged(e);
	//			if ((this.p_logRowChanged != null)) 
	//			{
	//				this.p_logRowChanged(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowChanging(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowChanging(e);
	//			if ((this.p_logRowChanging != null)) 
	//			{
	//				this.p_logRowChanging(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleted(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleted(e);
	//			if ((this.p_logRowDeleted != null)) 
	//			{
	//				this.p_logRowDeleted(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		protected override void OnRowDeleting(DataRowChangeEventArgs e) 
	//		{
	//			base.OnRowDeleting(e);
	//			if ((this.p_logRowDeleting != null)) 
	//			{
	//				this.p_logRowDeleting(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
	//			}
	//		}
	//           
	//		public void Removep_logRow(p_logRow row) 
	//		{
	//			this.Rows.Remove(row);
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class p_logRow : System.Data.DataRow 
	//	{
	//           
	//		private p_logDataTable tablep_log;
	//           
	//		internal p_logRow(DataRowBuilder rb) : 
	//			base(rb) 
	//		{
	//			this.tablep_log = ((p_logDataTable)(this.Table));
	//		}
	//           
	//		public System.Double time 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((System.Double)(this[this.tablep_log.timeColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablep_log.timeColumn] = value;
	//			}
	//		}
	//           
	//		public int origin 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((int)(this[this.tablep_log.originColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablep_log.originColumn] = value;
	//			}
	//		}
	//           
	//		public int dest 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((int)(this[this.tablep_log.destColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablep_log.destColumn] = value;
	//			}
	//		}
	//           
	//		public int assign 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((int)(this[this.tablep_log.assignColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablep_log.assignColumn] = value;
	//			}
	//		}
	//           
	//		public System.Double w_time 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((System.Double)(this[this.tablep_log.w_timeColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablep_log.w_timeColumn] = value;
	//			}
	//		}
	//           
	//		public System.Double s_time 
	//		{
	//			get 
	//			{
	//				try 
	//				{
	//					return ((System.Double)(this[this.tablep_log.s_timeColumn]));
	//				}
	//				catch (InvalidCastException e) 
	//				{
	//					throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
	//				}
	//			}
	//			set 
	//			{
	//				this[this.tablep_log.s_timeColumn] = value;
	//			}
	//		}
	//           
	//		public bool IstimeNull() 
	//		{
	//			return this.IsNull(this.tablep_log.timeColumn);
	//		}
	//           
	//		public void SettimeNull() 
	//		{
	//			this[this.tablep_log.timeColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsoriginNull() 
	//		{
	//			return this.IsNull(this.tablep_log.originColumn);
	//		}
	//           
	//		public void SetoriginNull() 
	//		{
	//			this[this.tablep_log.originColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsdestNull() 
	//		{
	//			return this.IsNull(this.tablep_log.destColumn);
	//		}
	//           
	//		public void SetdestNull() 
	//		{
	//			this[this.tablep_log.destColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool IsassignNull() 
	//		{
	//			return this.IsNull(this.tablep_log.assignColumn);
	//		}
	//           
	//		public void SetassignNull() 
	//		{
	//			this[this.tablep_log.assignColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool Isw_timeNull() 
	//		{
	//			return this.IsNull(this.tablep_log.w_timeColumn);
	//		}
	//           
	//		public void Setw_timeNull() 
	//		{
	//			this[this.tablep_log.w_timeColumn] = System.Convert.DBNull;
	//		}
	//           
	//		public bool Iss_timeNull() 
	//		{
	//			return this.IsNull(this.tablep_log.s_timeColumn);
	//		}
	//           
	//		public void Sets_timeNull() 
	//		{
	//			this[this.tablep_log.s_timeColumn] = System.Convert.DBNull;
	//		}
	//	}
	//       
	//	[System.Diagnostics.DebuggerStepThrough()]
	//		public class p_logRowChangeEvent : System.EventArgs 
	//	{
	//           
	//		private p_logRow eventRow;
	//           
	//		private DataRowAction eventAction;
	//           
	//		public p_logRowChangeEvent(p_logRow row, DataRowAction action) 
	//		{
	//			this.eventRow = row;
	//			this.eventAction = action;
	//		}
	//           
	//		public p_logRow Row 
	//		{
	//			get 
	//			{
	//				return this.eventRow;
	//			}
	//		}
	//           
	//		public DataRowAction Action 
	//		{
	//			get 
	//			{
	//				return this.eventAction;
	//			}
	//		}
	//	}
	//}


}
namespace COGSD
{
	[Serializable(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Diagnostics.DebuggerStepThrough(), System.ComponentModel.ToolboxItem(true)]
	public class dsMon : DataSet
	{
        
		private p_logDataTable tablep_log;
        
		public dsMon() 
		{
			this.InitClass();
			System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			this.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
        
		protected dsMon(SerializationInfo info, StreamingContext context) 
		{
			string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
			if ((strSchema != null)) 
			{
				DataSet ds = new DataSet();
				ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
				if ((ds.Tables["p_log"] != null)) 
				{
					this.Tables.Add(new p_logDataTable(ds.Tables["p_log"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else 
			{
				this.InitClass();
			}
			this.GetSerializationData(info, context);
			System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			this.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
        
		[System.ComponentModel.Browsable(false)]
		[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
		public p_logDataTable p_log 
		{
			get 
			{
				return this.tablep_log;
			}
		}
        
		public override DataSet Clone() 
		{
			dsMon cln = ((dsMon)(base.Clone()));
			cln.InitVars();
			return cln;
		}
        
		protected override bool ShouldSerializeTables() 
		{
			return false;
		}
        
		protected override bool ShouldSerializeRelations() 
		{
			return false;
		}
        
		protected override void ReadXmlSerializable(XmlReader reader) 
		{
			this.Reset();
			DataSet ds = new DataSet();
			ds.ReadXml(reader);
			if ((ds.Tables["p_log"] != null)) 
			{
				this.Tables.Add(new p_logDataTable(ds.Tables["p_log"]));
			}
			this.DataSetName = ds.DataSetName;
			this.Prefix = ds.Prefix;
			this.Namespace = ds.Namespace;
			this.Locale = ds.Locale;
			this.CaseSensitive = ds.CaseSensitive;
			this.EnforceConstraints = ds.EnforceConstraints;
			this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
			this.InitVars();
		}
        
		protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() 
		{
			System.IO.MemoryStream stream = new System.IO.MemoryStream();
			this.WriteXmlSchema(new XmlTextWriter(stream, null));
			stream.Position = 0;
			return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
		}
        
		internal void InitVars() 
		{
			this.tablep_log = ((p_logDataTable)(this.Tables["p_log"]));
			if ((this.tablep_log != null)) 
			{
				this.tablep_log.InitVars();
			}
		}
        
		private void InitClass() 
		{
			this.DataSetName = "dsMon";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/dsMon.xsd";
			this.Locale = new System.Globalization.CultureInfo("en-US");
			this.CaseSensitive = false;
			this.EnforceConstraints = true;
			this.tablep_log = new p_logDataTable();
			this.Tables.Add(this.tablep_log);
		}
        
		private bool ShouldSerializep_log() 
		{
			return false;
		}
        
		private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) 
		{
			if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) 
			{
				this.InitVars();
			}
		}
        
		public delegate void p_logRowChangeEventHandler(object sender, p_logRowChangeEvent e);
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class p_logDataTable : System.Data.DataTable, System.Collections.IEnumerable 
		{
            
			private DataColumn columntime;
            
			private DataColumn columnorigin;
            
			private DataColumn columndest;
            
			private DataColumn columnassign;
            
			private DataColumn columnw_time;
            
			private DataColumn columns_time;
            
			internal p_logDataTable() : 
				base("p_log") 
			{
				this.InitClass();
			}
            
			internal p_logDataTable(DataTable table) : 
				base(table.TableName) 
			{
				if ((table.CaseSensitive != table.DataSet.CaseSensitive)) 
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) 
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace)) 
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				this.DisplayExpression = table.DisplayExpression;
			}
            
			[System.ComponentModel.Browsable(false)]
			public int Count 
			{
				get 
				{
					return this.Rows.Count;
				}
			}
            
			internal DataColumn timeColumn 
			{
				get 
				{
					return this.columntime;
				}
			}
            
			internal DataColumn originColumn 
			{
				get 
				{
					return this.columnorigin;
				}
			}
            
			internal DataColumn destColumn 
			{
				get 
				{
					return this.columndest;
				}
			}
            
			internal DataColumn assignColumn 
			{
				get 
				{
					return this.columnassign;
				}
			}
            
			internal DataColumn w_timeColumn 
			{
				get 
				{
					return this.columnw_time;
				}
			}
            
			internal DataColumn s_timeColumn 
			{
				get 
				{
					return this.columns_time;
				}
			}
            
			public p_logRow this[int index] 
			{
				get 
				{
					return ((p_logRow)(this.Rows[index]));
				}
			}
            
			public event p_logRowChangeEventHandler p_logRowChanged;
            
			public event p_logRowChangeEventHandler p_logRowChanging;
            
			public event p_logRowChangeEventHandler p_logRowDeleted;
            
			public event p_logRowChangeEventHandler p_logRowDeleting;
            
			public void Addp_logRow(p_logRow row) 
			{
				this.Rows.Add(row);
			}
            
			public p_logRow Addp_logRow(System.Double time, int origin, int dest, int assign, System.Double w_time, System.Double s_time) 
			{
				p_logRow rowp_logRow = ((p_logRow)(this.NewRow()));
				rowp_logRow.ItemArray = new object[] {
														 time,
														 origin,
														 dest,
														 assign,
														 w_time,
														 s_time};
				this.Rows.Add(rowp_logRow);
				return rowp_logRow;
			}
            
			public System.Collections.IEnumerator GetEnumerator() 
			{
				return this.Rows.GetEnumerator();
			}
            
			public override DataTable Clone() 
			{
				p_logDataTable cln = ((p_logDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}
            
			protected override DataTable CreateInstance() 
			{
				return new p_logDataTable();
			}
            
			internal void InitVars() 
			{
				this.columntime = this.Columns["time"];
				this.columnorigin = this.Columns["origin"];
				this.columndest = this.Columns["dest"];
				this.columnassign = this.Columns["assign"];
				this.columnw_time = this.Columns["w_time"];
				this.columns_time = this.Columns["s_time"];
			}
            
			private void InitClass() 
			{
				this.columntime = new DataColumn("time", typeof(System.Double), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columntime);
				this.columnorigin = new DataColumn("origin", typeof(int), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnorigin);
				this.columndest = new DataColumn("dest", typeof(int), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columndest);
				this.columnassign = new DataColumn("assign", typeof(int), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnassign);
				this.columnw_time = new DataColumn("w_time", typeof(System.Double), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columnw_time);
				this.columns_time = new DataColumn("s_time", typeof(System.Double), null, System.Data.MappingType.Element);
				this.Columns.Add(this.columns_time);
			}
            
			public p_logRow Newp_logRow() 
			{
				return ((p_logRow)(this.NewRow()));
			}
            
			protected override DataRow NewRowFromBuilder(DataRowBuilder builder) 
			{
				return new p_logRow(builder);
			}
            
			protected override System.Type GetRowType() 
			{
				return typeof(p_logRow);
			}
            
			protected override void OnRowChanged(DataRowChangeEventArgs e) 
			{
				base.OnRowChanged(e);
				if ((this.p_logRowChanged != null)) 
				{
					this.p_logRowChanged(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowChanging(DataRowChangeEventArgs e) 
			{
				base.OnRowChanging(e);
				if ((this.p_logRowChanging != null)) 
				{
					this.p_logRowChanging(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleted(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleted(e);
				if ((this.p_logRowDeleted != null)) 
				{
					this.p_logRowDeleted(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
				}
			}
            
			protected override void OnRowDeleting(DataRowChangeEventArgs e) 
			{
				base.OnRowDeleting(e);
				if ((this.p_logRowDeleting != null)) 
				{
					this.p_logRowDeleting(this, new p_logRowChangeEvent(((p_logRow)(e.Row)), e.Action));
				}
			}
            
			public void Removep_logRow(p_logRow row) 
			{
				this.Rows.Remove(row);
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class p_logRow : System.Data.DataRow 
		{
            
			private p_logDataTable tablep_log;
            
			internal p_logRow(DataRowBuilder rb) : 
				base(rb) 
			{
				this.tablep_log = ((p_logDataTable)(this.Table));
			}
            
			public System.Double time 
			{
				get 
				{
					try 
					{
						return ((System.Double)(this[this.tablep_log.timeColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablep_log.timeColumn] = value;
				}
			}
            
			public int origin 
			{
				get 
				{
					try 
					{
						return ((int)(this[this.tablep_log.originColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablep_log.originColumn] = value;
				}
			}
            
			public int dest 
			{
				get 
				{
					try 
					{
						return ((int)(this[this.tablep_log.destColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablep_log.destColumn] = value;
				}
			}
            
			public int assign 
			{
				get 
				{
					try 
					{
						return ((int)(this[this.tablep_log.assignColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablep_log.assignColumn] = value;
				}
			}
            
			public System.Double w_time 
			{
				get 
				{
					try 
					{
						return ((System.Double)(this[this.tablep_log.w_timeColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablep_log.w_timeColumn] = value;
				}
			}
            
			public System.Double s_time 
			{
				get 
				{
					try 
					{
						return ((System.Double)(this[this.tablep_log.s_timeColumn]));
					}
					catch (InvalidCastException e) 
					{
						throw new StrongTypingException("이 값은 DBNull이므로 가져올 수 없습니다.", e);
					}
				}
				set 
				{
					this[this.tablep_log.s_timeColumn] = value;
				}
			}
            
			public bool IstimeNull() 
			{
				return this.IsNull(this.tablep_log.timeColumn);
			}
            
			public void SettimeNull() 
			{
				this[this.tablep_log.timeColumn] = System.Convert.DBNull;
			}
            
			public bool IsoriginNull() 
			{
				return this.IsNull(this.tablep_log.originColumn);
			}
            
			public void SetoriginNull() 
			{
				this[this.tablep_log.originColumn] = System.Convert.DBNull;
			}
            
			public bool IsdestNull() 
			{
				return this.IsNull(this.tablep_log.destColumn);
			}
            
			public void SetdestNull() 
			{
				this[this.tablep_log.destColumn] = System.Convert.DBNull;
			}
            
			public bool IsassignNull() 
			{
				return this.IsNull(this.tablep_log.assignColumn);
			}
            
			public void SetassignNull() 
			{
				this[this.tablep_log.assignColumn] = System.Convert.DBNull;
			}
            
			public bool Isw_timeNull() 
			{
				return this.IsNull(this.tablep_log.w_timeColumn);
			}
            
			public void Setw_timeNull() 
			{
				this[this.tablep_log.w_timeColumn] = System.Convert.DBNull;
			}
            
			public bool Iss_timeNull() 
			{
				return this.IsNull(this.tablep_log.s_timeColumn);
			}
            
			public void Sets_timeNull() 
			{
				this[this.tablep_log.s_timeColumn] = System.Convert.DBNull;
			}
		}
        
		[System.Diagnostics.DebuggerStepThrough()]
			public class p_logRowChangeEvent : System.EventArgs 
		{
            
			private p_logRow eventRow;
            
			private DataRowAction eventAction;
            
			public p_logRowChangeEvent(p_logRow row, DataRowAction action) 
			{
				this.eventRow = row;
				this.eventAction = action;
			}
            
			public p_logRow Row 
			{
				get 
				{
					return this.eventRow;
				}
			}
            
			public DataRowAction Action 
			{
				get 
				{
					return this.eventAction;
				}
			}
		}
	}
}
